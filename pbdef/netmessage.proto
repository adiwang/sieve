message CProto
{
	required int32 id = 1;
	required string body = 2;
}

message CP1
{
	required int32 a = 1;
	required int64 b = 2;
	required string c = 3;
}

message CP2
{
	required string a = 1;
	required string b = 2;
	required int64 c = 3;
}

message EchoProto
{
	required string data = 1;
}

// cpsd向casd发送的设置相机序号的协议
message CSetCamaraSeqReqProto
{
	required uint32 seq = 1;	// 相机序号
}

// casd向cpsd返回的设置相机序号的响应协议
message SSetCamaraSeqRepProto
{
	required uint32 result = 1;	// 0: 代表成功, 否则: 失败
}

// cpsd向casd发送的图片处理数据的协议
message CSendImageProcessDataReqProto
{
	required string ic_card_no = 1;		// ic卡号
	required int32 image_seq = 2;		// 图片序号: 0-5分别是底, 4侧, 顶
	required int32 x = 3;			// 一系列特征
	required int32 y = 4;
	required bytes data = 5;
}

// casd向cpsd返回的发送图片处理数据的响应协议
message SSendImageProcessDataRepProto
{
	required string ic_card_no = 1;		// ic卡号
	required int32 image_seq = 2;		// 图片序号: 0-5分别是底, 4侧, 顶
	required int32 result = 3;
}

// cpsd向casd注册通道序号协议
message CRegisterCpsdReqProto
{
	required uint32 seq = 1;		// 通道序号
}

// cpsd向casd注册通道序号的响应协议
message SRegisterCpsdRepProto
{
	required uint32 result = 1;		// 0: 代表成功, 否则: 失败
}

// 客户端向casd注册通道序号协议
message CRegisterClientReqProto
{
	required uint32 seq = 1;		// 通道序号
}

// 客户端向casd注册通道序号的响应协议
message SRegisterClientRepProto
{
	required uint32 result = 1;		    // 0: 代表成功, 否则: 失败
    required int32 samples_count = 2;   // 已学习样本数量
}

// cpsd向casd发送校验图片摆放位置的协议
// casd向客户端转发校验图片摆放位置的协议
message FValidatePosReqpProto
{
	required uint32 result = 1;		// 0: 代表成功, 否则: 代表失败
	required string image_path = 2;		// 图片路径
}

// cpsd向casd发送的请求处理特征的协议
message CProcessFeatureReqProto
{
    required string id = 1;				// id
    required double AvgSaturation = 2;                  // 平均饱和度
    required double AvgHue = 3;                         // 平均色调
    required double AvgIntensity = 4;                   // 平均亮度
    required double DeviationSaturation = 5;            // 饱和度标准差
    required double DeviationHue = 6;                   // 色度标准差
    required double DeviationIntensity = 7;             // 亮度标准差
    required double Length  = 8;                        // 叶片长度
    required double Width = 9;                          // 叶片宽度
    required double WidthLengthRatio = 10;               // 叶片长宽比
    required double ApexAngle = 11;                     // 叶尖角
    required double Circularity = 12;                   // 圆度
    required double Area = 13;                          // 面积
    required double ThickMean = 14;                     // 平均厚度
    required double DefectRate = 15;                    // 残伤率
}

// casd返回给cpsd的请求处理特征的响应协议
message SProcessFeatureRepProto
{
	required uint32 result = 1;		// 0: 代表成功，否则: 失败
}

// casd返回给客户端的处理结果的协议
message SProcessResultProto
{
	required uint32 result = 1;		// 0: 代表成功, 否则: 失败
    required int32 group = 2;       // 分组
    required int32 rank = 3;        // 分级
}

// 客户端向casd发送的设置状态的协议
message CSetProcessStateReqProto
{
	required int32 state = 1;		// 状态: 0:学习状态, 1: 分选状态
}

// casd返回给客户端的设置状态的响应协议
message SSetProcessStateRepProto
{
	required uint32 result = 1;		// 0: 代表成功, 否则: 失败
}

// 客户端向casd发送的结束批次处理的协议
message CEndBatchProcessReqProto
{
	required int32 state = 1;		// 状态: 0:学习状态, 1: 分选状态
}

message LeafGradeCount
{
	required int32 group = 1;		// 分组
	required int32 rank = 2;		// 分级
	required int32 count = 3;		// 数量
}

// casd返回给客户端结束批次处理的响应协议
message SEndBatchProcessRepProto
{
	required uint32 result = 1;					                // 0: 代表成功, 否则: 失败
	repeated LeafGradeCount leaf_grade_counts = 2;		        // 叶片分组分级数量(目前只在学习状态下有效)
}

// 客户端向casd发送的学习样本的协议, 仅设置了当前客户端所连通道的学习样本
message CLearnSampleReqProto
{
    required int32 group = 1;       // 分组
    required int32 rank = 2;        // 分级
}

// casd返回给客户端的学习样本的协议
message SLearnSampleRepProto
{
    required uint32 result = 1;     // 0: 代表成功，否则: 失败
    required int32 group = 2;       // 分组
    required int32 rank = 3;        // 分级
}

