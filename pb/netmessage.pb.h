// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netmessage.proto

#ifndef PROTOBUF_netmessage_2eproto__INCLUDED
#define PROTOBUF_netmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_netmessage_2eproto();
void protobuf_AssignDesc_netmessage_2eproto();
void protobuf_ShutdownFile_netmessage_2eproto();

class CEndBatchProcessReqProto;
class CLearnSampleReqProto;
class CP1;
class CP2;
class CProcessFeatureReqProto;
class CProto;
class CRegisterClientReqProto;
class CRegisterCpsdReqProto;
class CSendImageProcessDataReqProto;
class CSetCamaraSeqReqProto;
class CSetProcessStateReqProto;
class EchoProto;
class FValidatePosReqpProto;
class LeafGradeCount;
class SEndBatchProcessRepProto;
class SLearnSampleRepProto;
class SProcessFeatureRepProto;
class SProcessResultProto;
class SRegisterClientRepProto;
class SRegisterCpsdRepProto;
class SSendImageProcessDataRepProto;
class SSetCamaraSeqRepProto;
class SSetProcessStateRepProto;

// ===================================================================

class CProto : public ::google::protobuf::Message {
 public:
  CProto();
  virtual ~CProto();

  CProto(const CProto& from);

  inline CProto& operator=(const CProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CProto& default_instance();

  void Swap(CProto* other);

  // implements Message ----------------------------------------------

  inline CProto* New() const { return New(NULL); }

  CProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CProto& from);
  void MergeFrom(const CProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required bytes body = 2;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 2;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // @@protoc_insertion_point(class_scope:CProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_body();
  inline void clear_has_body();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static CProto* default_instance_;
};
// -------------------------------------------------------------------

class CP1 : public ::google::protobuf::Message {
 public:
  CP1();
  virtual ~CP1();

  CP1(const CP1& from);

  inline CP1& operator=(const CP1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CP1& default_instance();

  void Swap(CP1* other);

  // implements Message ----------------------------------------------

  inline CP1* New() const { return New(NULL); }

  CP1* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CP1& from);
  void MergeFrom(const CP1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CP1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 a = 1;
  bool has_a() const;
  void clear_a();
  static const int kAFieldNumber = 1;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // required int64 b = 2;
  bool has_b() const;
  void clear_b();
  static const int kBFieldNumber = 2;
  ::google::protobuf::int64 b() const;
  void set_b(::google::protobuf::int64 value);

  // required string c = 3;
  bool has_c() const;
  void clear_c();
  static const int kCFieldNumber = 3;
  const ::std::string& c() const;
  void set_c(const ::std::string& value);
  void set_c(const char* value);
  void set_c(const char* value, size_t size);
  ::std::string* mutable_c();
  ::std::string* release_c();
  void set_allocated_c(::std::string* c);

  // @@protoc_insertion_point(class_scope:CP1)
 private:
  inline void set_has_a();
  inline void clear_has_a();
  inline void set_has_b();
  inline void clear_has_b();
  inline void set_has_c();
  inline void clear_has_c();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 b_;
  ::google::protobuf::internal::ArenaStringPtr c_;
  ::google::protobuf::int32 a_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static CP1* default_instance_;
};
// -------------------------------------------------------------------

class CP2 : public ::google::protobuf::Message {
 public:
  CP2();
  virtual ~CP2();

  CP2(const CP2& from);

  inline CP2& operator=(const CP2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CP2& default_instance();

  void Swap(CP2* other);

  // implements Message ----------------------------------------------

  inline CP2* New() const { return New(NULL); }

  CP2* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CP2& from);
  void MergeFrom(const CP2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CP2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string a = 1;
  bool has_a() const;
  void clear_a();
  static const int kAFieldNumber = 1;
  const ::std::string& a() const;
  void set_a(const ::std::string& value);
  void set_a(const char* value);
  void set_a(const char* value, size_t size);
  ::std::string* mutable_a();
  ::std::string* release_a();
  void set_allocated_a(::std::string* a);

  // required string b = 2;
  bool has_b() const;
  void clear_b();
  static const int kBFieldNumber = 2;
  const ::std::string& b() const;
  void set_b(const ::std::string& value);
  void set_b(const char* value);
  void set_b(const char* value, size_t size);
  ::std::string* mutable_b();
  ::std::string* release_b();
  void set_allocated_b(::std::string* b);

  // required int64 c = 3;
  bool has_c() const;
  void clear_c();
  static const int kCFieldNumber = 3;
  ::google::protobuf::int64 c() const;
  void set_c(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CP2)
 private:
  inline void set_has_a();
  inline void clear_has_a();
  inline void set_has_b();
  inline void clear_has_b();
  inline void set_has_c();
  inline void clear_has_c();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr a_;
  ::google::protobuf::internal::ArenaStringPtr b_;
  ::google::protobuf::int64 c_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static CP2* default_instance_;
};
// -------------------------------------------------------------------

class EchoProto : public ::google::protobuf::Message {
 public:
  EchoProto();
  virtual ~EchoProto();

  EchoProto(const EchoProto& from);

  inline EchoProto& operator=(const EchoProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EchoProto& default_instance();

  void Swap(EchoProto* other);

  // implements Message ----------------------------------------------

  inline EchoProto* New() const { return New(NULL); }

  EchoProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EchoProto& from);
  void MergeFrom(const EchoProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EchoProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:EchoProto)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static EchoProto* default_instance_;
};
// -------------------------------------------------------------------

class CSetCamaraSeqReqProto : public ::google::protobuf::Message {
 public:
  CSetCamaraSeqReqProto();
  virtual ~CSetCamaraSeqReqProto();

  CSetCamaraSeqReqProto(const CSetCamaraSeqReqProto& from);

  inline CSetCamaraSeqReqProto& operator=(const CSetCamaraSeqReqProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSetCamaraSeqReqProto& default_instance();

  void Swap(CSetCamaraSeqReqProto* other);

  // implements Message ----------------------------------------------

  inline CSetCamaraSeqReqProto* New() const { return New(NULL); }

  CSetCamaraSeqReqProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSetCamaraSeqReqProto& from);
  void MergeFrom(const CSetCamaraSeqReqProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSetCamaraSeqReqProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 seq = 1;
  bool has_seq() const;
  void clear_seq();
  static const int kSeqFieldNumber = 1;
  ::google::protobuf::uint32 seq() const;
  void set_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSetCamaraSeqReqProto)
 private:
  inline void set_has_seq();
  inline void clear_has_seq();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 seq_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static CSetCamaraSeqReqProto* default_instance_;
};
// -------------------------------------------------------------------

class SSetCamaraSeqRepProto : public ::google::protobuf::Message {
 public:
  SSetCamaraSeqRepProto();
  virtual ~SSetCamaraSeqRepProto();

  SSetCamaraSeqRepProto(const SSetCamaraSeqRepProto& from);

  inline SSetCamaraSeqRepProto& operator=(const SSetCamaraSeqRepProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SSetCamaraSeqRepProto& default_instance();

  void Swap(SSetCamaraSeqRepProto* other);

  // implements Message ----------------------------------------------

  inline SSetCamaraSeqRepProto* New() const { return New(NULL); }

  SSetCamaraSeqRepProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SSetCamaraSeqRepProto& from);
  void MergeFrom(const SSetCamaraSeqRepProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SSetCamaraSeqRepProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SSetCamaraSeqRepProto)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static SSetCamaraSeqRepProto* default_instance_;
};
// -------------------------------------------------------------------

class CSendImageProcessDataReqProto : public ::google::protobuf::Message {
 public:
  CSendImageProcessDataReqProto();
  virtual ~CSendImageProcessDataReqProto();

  CSendImageProcessDataReqProto(const CSendImageProcessDataReqProto& from);

  inline CSendImageProcessDataReqProto& operator=(const CSendImageProcessDataReqProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSendImageProcessDataReqProto& default_instance();

  void Swap(CSendImageProcessDataReqProto* other);

  // implements Message ----------------------------------------------

  inline CSendImageProcessDataReqProto* New() const { return New(NULL); }

  CSendImageProcessDataReqProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSendImageProcessDataReqProto& from);
  void MergeFrom(const CSendImageProcessDataReqProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSendImageProcessDataReqProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ic_card_no = 1;
  bool has_ic_card_no() const;
  void clear_ic_card_no();
  static const int kIcCardNoFieldNumber = 1;
  const ::std::string& ic_card_no() const;
  void set_ic_card_no(const ::std::string& value);
  void set_ic_card_no(const char* value);
  void set_ic_card_no(const char* value, size_t size);
  ::std::string* mutable_ic_card_no();
  ::std::string* release_ic_card_no();
  void set_allocated_ic_card_no(::std::string* ic_card_no);

  // required int32 image_seq = 2;
  bool has_image_seq() const;
  void clear_image_seq();
  static const int kImageSeqFieldNumber = 2;
  ::google::protobuf::int32 image_seq() const;
  void set_image_seq(::google::protobuf::int32 value);

  // required int32 x = 3;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 3;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 y = 4;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 4;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // required bytes data = 5;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 5;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:CSendImageProcessDataReqProto)
 private:
  inline void set_has_ic_card_no();
  inline void clear_has_ic_card_no();
  inline void set_has_image_seq();
  inline void clear_has_image_seq();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_data();
  inline void clear_has_data();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ic_card_no_;
  ::google::protobuf::int32 image_seq_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 y_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static CSendImageProcessDataReqProto* default_instance_;
};
// -------------------------------------------------------------------

class SSendImageProcessDataRepProto : public ::google::protobuf::Message {
 public:
  SSendImageProcessDataRepProto();
  virtual ~SSendImageProcessDataRepProto();

  SSendImageProcessDataRepProto(const SSendImageProcessDataRepProto& from);

  inline SSendImageProcessDataRepProto& operator=(const SSendImageProcessDataRepProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SSendImageProcessDataRepProto& default_instance();

  void Swap(SSendImageProcessDataRepProto* other);

  // implements Message ----------------------------------------------

  inline SSendImageProcessDataRepProto* New() const { return New(NULL); }

  SSendImageProcessDataRepProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SSendImageProcessDataRepProto& from);
  void MergeFrom(const SSendImageProcessDataRepProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SSendImageProcessDataRepProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ic_card_no = 1;
  bool has_ic_card_no() const;
  void clear_ic_card_no();
  static const int kIcCardNoFieldNumber = 1;
  const ::std::string& ic_card_no() const;
  void set_ic_card_no(const ::std::string& value);
  void set_ic_card_no(const char* value);
  void set_ic_card_no(const char* value, size_t size);
  ::std::string* mutable_ic_card_no();
  ::std::string* release_ic_card_no();
  void set_allocated_ic_card_no(::std::string* ic_card_no);

  // required int32 image_seq = 2;
  bool has_image_seq() const;
  void clear_image_seq();
  static const int kImageSeqFieldNumber = 2;
  ::google::protobuf::int32 image_seq() const;
  void set_image_seq(::google::protobuf::int32 value);

  // required int32 result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SSendImageProcessDataRepProto)
 private:
  inline void set_has_ic_card_no();
  inline void clear_has_ic_card_no();
  inline void set_has_image_seq();
  inline void clear_has_image_seq();
  inline void set_has_result();
  inline void clear_has_result();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ic_card_no_;
  ::google::protobuf::int32 image_seq_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static SSendImageProcessDataRepProto* default_instance_;
};
// -------------------------------------------------------------------

class CRegisterCpsdReqProto : public ::google::protobuf::Message {
 public:
  CRegisterCpsdReqProto();
  virtual ~CRegisterCpsdReqProto();

  CRegisterCpsdReqProto(const CRegisterCpsdReqProto& from);

  inline CRegisterCpsdReqProto& operator=(const CRegisterCpsdReqProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CRegisterCpsdReqProto& default_instance();

  void Swap(CRegisterCpsdReqProto* other);

  // implements Message ----------------------------------------------

  inline CRegisterCpsdReqProto* New() const { return New(NULL); }

  CRegisterCpsdReqProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CRegisterCpsdReqProto& from);
  void MergeFrom(const CRegisterCpsdReqProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CRegisterCpsdReqProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 seq = 1;
  bool has_seq() const;
  void clear_seq();
  static const int kSeqFieldNumber = 1;
  ::google::protobuf::uint32 seq() const;
  void set_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CRegisterCpsdReqProto)
 private:
  inline void set_has_seq();
  inline void clear_has_seq();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 seq_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static CRegisterCpsdReqProto* default_instance_;
};
// -------------------------------------------------------------------

class SRegisterCpsdRepProto : public ::google::protobuf::Message {
 public:
  SRegisterCpsdRepProto();
  virtual ~SRegisterCpsdRepProto();

  SRegisterCpsdRepProto(const SRegisterCpsdRepProto& from);

  inline SRegisterCpsdRepProto& operator=(const SRegisterCpsdRepProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SRegisterCpsdRepProto& default_instance();

  void Swap(SRegisterCpsdRepProto* other);

  // implements Message ----------------------------------------------

  inline SRegisterCpsdRepProto* New() const { return New(NULL); }

  SRegisterCpsdRepProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SRegisterCpsdRepProto& from);
  void MergeFrom(const SRegisterCpsdRepProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SRegisterCpsdRepProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRegisterCpsdRepProto)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static SRegisterCpsdRepProto* default_instance_;
};
// -------------------------------------------------------------------

class CRegisterClientReqProto : public ::google::protobuf::Message {
 public:
  CRegisterClientReqProto();
  virtual ~CRegisterClientReqProto();

  CRegisterClientReqProto(const CRegisterClientReqProto& from);

  inline CRegisterClientReqProto& operator=(const CRegisterClientReqProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CRegisterClientReqProto& default_instance();

  void Swap(CRegisterClientReqProto* other);

  // implements Message ----------------------------------------------

  inline CRegisterClientReqProto* New() const { return New(NULL); }

  CRegisterClientReqProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CRegisterClientReqProto& from);
  void MergeFrom(const CRegisterClientReqProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CRegisterClientReqProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 seq = 1;
  bool has_seq() const;
  void clear_seq();
  static const int kSeqFieldNumber = 1;
  ::google::protobuf::uint32 seq() const;
  void set_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CRegisterClientReqProto)
 private:
  inline void set_has_seq();
  inline void clear_has_seq();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 seq_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static CRegisterClientReqProto* default_instance_;
};
// -------------------------------------------------------------------

class SRegisterClientRepProto : public ::google::protobuf::Message {
 public:
  SRegisterClientRepProto();
  virtual ~SRegisterClientRepProto();

  SRegisterClientRepProto(const SRegisterClientRepProto& from);

  inline SRegisterClientRepProto& operator=(const SRegisterClientRepProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SRegisterClientRepProto& default_instance();

  void Swap(SRegisterClientRepProto* other);

  // implements Message ----------------------------------------------

  inline SRegisterClientRepProto* New() const { return New(NULL); }

  SRegisterClientRepProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SRegisterClientRepProto& from);
  void MergeFrom(const SRegisterClientRepProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SRegisterClientRepProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // required int32 samples_count = 2;
  bool has_samples_count() const;
  void clear_samples_count();
  static const int kSamplesCountFieldNumber = 2;
  ::google::protobuf::int32 samples_count() const;
  void set_samples_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SRegisterClientRepProto)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_samples_count();
  inline void clear_has_samples_count();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::int32 samples_count_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static SRegisterClientRepProto* default_instance_;
};
// -------------------------------------------------------------------

class FValidatePosReqpProto : public ::google::protobuf::Message {
 public:
  FValidatePosReqpProto();
  virtual ~FValidatePosReqpProto();

  FValidatePosReqpProto(const FValidatePosReqpProto& from);

  inline FValidatePosReqpProto& operator=(const FValidatePosReqpProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FValidatePosReqpProto& default_instance();

  void Swap(FValidatePosReqpProto* other);

  // implements Message ----------------------------------------------

  inline FValidatePosReqpProto* New() const { return New(NULL); }

  FValidatePosReqpProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FValidatePosReqpProto& from);
  void MergeFrom(const FValidatePosReqpProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FValidatePosReqpProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // required string image_path = 2;
  bool has_image_path() const;
  void clear_image_path();
  static const int kImagePathFieldNumber = 2;
  const ::std::string& image_path() const;
  void set_image_path(const ::std::string& value);
  void set_image_path(const char* value);
  void set_image_path(const char* value, size_t size);
  ::std::string* mutable_image_path();
  ::std::string* release_image_path();
  void set_allocated_image_path(::std::string* image_path);

  // @@protoc_insertion_point(class_scope:FValidatePosReqpProto)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_image_path();
  inline void clear_has_image_path();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr image_path_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static FValidatePosReqpProto* default_instance_;
};
// -------------------------------------------------------------------

class CProcessFeatureReqProto : public ::google::protobuf::Message {
 public:
  CProcessFeatureReqProto();
  virtual ~CProcessFeatureReqProto();

  CProcessFeatureReqProto(const CProcessFeatureReqProto& from);

  inline CProcessFeatureReqProto& operator=(const CProcessFeatureReqProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CProcessFeatureReqProto& default_instance();

  void Swap(CProcessFeatureReqProto* other);

  // implements Message ----------------------------------------------

  inline CProcessFeatureReqProto* New() const { return New(NULL); }

  CProcessFeatureReqProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CProcessFeatureReqProto& from);
  void MergeFrom(const CProcessFeatureReqProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CProcessFeatureReqProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required double AvgSaturation = 2;
  bool has_avgsaturation() const;
  void clear_avgsaturation();
  static const int kAvgSaturationFieldNumber = 2;
  double avgsaturation() const;
  void set_avgsaturation(double value);

  // required double AvgHue = 3;
  bool has_avghue() const;
  void clear_avghue();
  static const int kAvgHueFieldNumber = 3;
  double avghue() const;
  void set_avghue(double value);

  // required double AvgIntensity = 4;
  bool has_avgintensity() const;
  void clear_avgintensity();
  static const int kAvgIntensityFieldNumber = 4;
  double avgintensity() const;
  void set_avgintensity(double value);

  // required double DeviationSaturation = 5;
  bool has_deviationsaturation() const;
  void clear_deviationsaturation();
  static const int kDeviationSaturationFieldNumber = 5;
  double deviationsaturation() const;
  void set_deviationsaturation(double value);

  // required double DeviationHue = 6;
  bool has_deviationhue() const;
  void clear_deviationhue();
  static const int kDeviationHueFieldNumber = 6;
  double deviationhue() const;
  void set_deviationhue(double value);

  // required double DeviationIntensity = 7;
  bool has_deviationintensity() const;
  void clear_deviationintensity();
  static const int kDeviationIntensityFieldNumber = 7;
  double deviationintensity() const;
  void set_deviationintensity(double value);

  // required double Length = 8;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 8;
  double length() const;
  void set_length(double value);

  // required double Width = 9;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 9;
  double width() const;
  void set_width(double value);

  // required double WidthLengthRatio = 10;
  bool has_widthlengthratio() const;
  void clear_widthlengthratio();
  static const int kWidthLengthRatioFieldNumber = 10;
  double widthlengthratio() const;
  void set_widthlengthratio(double value);

  // required double ApexAngle = 11;
  bool has_apexangle() const;
  void clear_apexangle();
  static const int kApexAngleFieldNumber = 11;
  double apexangle() const;
  void set_apexangle(double value);

  // required double Circularity = 12;
  bool has_circularity() const;
  void clear_circularity();
  static const int kCircularityFieldNumber = 12;
  double circularity() const;
  void set_circularity(double value);

  // required double Area = 13;
  bool has_area() const;
  void clear_area();
  static const int kAreaFieldNumber = 13;
  double area() const;
  void set_area(double value);

  // required double ThickMean = 14;
  bool has_thickmean() const;
  void clear_thickmean();
  static const int kThickMeanFieldNumber = 14;
  double thickmean() const;
  void set_thickmean(double value);

  // required double DefectRate = 15;
  bool has_defectrate() const;
  void clear_defectrate();
  static const int kDefectRateFieldNumber = 15;
  double defectrate() const;
  void set_defectrate(double value);

  // @@protoc_insertion_point(class_scope:CProcessFeatureReqProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_avgsaturation();
  inline void clear_has_avgsaturation();
  inline void set_has_avghue();
  inline void clear_has_avghue();
  inline void set_has_avgintensity();
  inline void clear_has_avgintensity();
  inline void set_has_deviationsaturation();
  inline void clear_has_deviationsaturation();
  inline void set_has_deviationhue();
  inline void clear_has_deviationhue();
  inline void set_has_deviationintensity();
  inline void clear_has_deviationintensity();
  inline void set_has_length();
  inline void clear_has_length();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_widthlengthratio();
  inline void clear_has_widthlengthratio();
  inline void set_has_apexangle();
  inline void clear_has_apexangle();
  inline void set_has_circularity();
  inline void clear_has_circularity();
  inline void set_has_area();
  inline void clear_has_area();
  inline void set_has_thickmean();
  inline void clear_has_thickmean();
  inline void set_has_defectrate();
  inline void clear_has_defectrate();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  double avgsaturation_;
  double avghue_;
  double avgintensity_;
  double deviationsaturation_;
  double deviationhue_;
  double deviationintensity_;
  double length_;
  double width_;
  double widthlengthratio_;
  double apexangle_;
  double circularity_;
  double area_;
  double thickmean_;
  double defectrate_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static CProcessFeatureReqProto* default_instance_;
};
// -------------------------------------------------------------------

class SProcessFeatureRepProto : public ::google::protobuf::Message {
 public:
  SProcessFeatureRepProto();
  virtual ~SProcessFeatureRepProto();

  SProcessFeatureRepProto(const SProcessFeatureRepProto& from);

  inline SProcessFeatureRepProto& operator=(const SProcessFeatureRepProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SProcessFeatureRepProto& default_instance();

  void Swap(SProcessFeatureRepProto* other);

  // implements Message ----------------------------------------------

  inline SProcessFeatureRepProto* New() const { return New(NULL); }

  SProcessFeatureRepProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SProcessFeatureRepProto& from);
  void MergeFrom(const SProcessFeatureRepProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SProcessFeatureRepProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SProcessFeatureRepProto)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static SProcessFeatureRepProto* default_instance_;
};
// -------------------------------------------------------------------

class SProcessResultProto : public ::google::protobuf::Message {
 public:
  SProcessResultProto();
  virtual ~SProcessResultProto();

  SProcessResultProto(const SProcessResultProto& from);

  inline SProcessResultProto& operator=(const SProcessResultProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SProcessResultProto& default_instance();

  void Swap(SProcessResultProto* other);

  // implements Message ----------------------------------------------

  inline SProcessResultProto* New() const { return New(NULL); }

  SProcessResultProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SProcessResultProto& from);
  void MergeFrom(const SProcessResultProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SProcessResultProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // required int32 group = 2;
  bool has_group() const;
  void clear_group();
  static const int kGroupFieldNumber = 2;
  ::google::protobuf::int32 group() const;
  void set_group(::google::protobuf::int32 value);

  // required int32 rank = 3;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 3;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SProcessResultProto)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_rank();
  inline void clear_has_rank();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 rank_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static SProcessResultProto* default_instance_;
};
// -------------------------------------------------------------------

class CSetProcessStateReqProto : public ::google::protobuf::Message {
 public:
  CSetProcessStateReqProto();
  virtual ~CSetProcessStateReqProto();

  CSetProcessStateReqProto(const CSetProcessStateReqProto& from);

  inline CSetProcessStateReqProto& operator=(const CSetProcessStateReqProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSetProcessStateReqProto& default_instance();

  void Swap(CSetProcessStateReqProto* other);

  // implements Message ----------------------------------------------

  inline CSetProcessStateReqProto* New() const { return New(NULL); }

  CSetProcessStateReqProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSetProcessStateReqProto& from);
  void MergeFrom(const CSetProcessStateReqProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSetProcessStateReqProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 state = 1;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CSetProcessStateReqProto)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static CSetProcessStateReqProto* default_instance_;
};
// -------------------------------------------------------------------

class SSetProcessStateRepProto : public ::google::protobuf::Message {
 public:
  SSetProcessStateRepProto();
  virtual ~SSetProcessStateRepProto();

  SSetProcessStateRepProto(const SSetProcessStateRepProto& from);

  inline SSetProcessStateRepProto& operator=(const SSetProcessStateRepProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SSetProcessStateRepProto& default_instance();

  void Swap(SSetProcessStateRepProto* other);

  // implements Message ----------------------------------------------

  inline SSetProcessStateRepProto* New() const { return New(NULL); }

  SSetProcessStateRepProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SSetProcessStateRepProto& from);
  void MergeFrom(const SSetProcessStateRepProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SSetProcessStateRepProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SSetProcessStateRepProto)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static SSetProcessStateRepProto* default_instance_;
};
// -------------------------------------------------------------------

class CEndBatchProcessReqProto : public ::google::protobuf::Message {
 public:
  CEndBatchProcessReqProto();
  virtual ~CEndBatchProcessReqProto();

  CEndBatchProcessReqProto(const CEndBatchProcessReqProto& from);

  inline CEndBatchProcessReqProto& operator=(const CEndBatchProcessReqProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CEndBatchProcessReqProto& default_instance();

  void Swap(CEndBatchProcessReqProto* other);

  // implements Message ----------------------------------------------

  inline CEndBatchProcessReqProto* New() const { return New(NULL); }

  CEndBatchProcessReqProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CEndBatchProcessReqProto& from);
  void MergeFrom(const CEndBatchProcessReqProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CEndBatchProcessReqProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 state = 1;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CEndBatchProcessReqProto)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static CEndBatchProcessReqProto* default_instance_;
};
// -------------------------------------------------------------------

class LeafGradeCount : public ::google::protobuf::Message {
 public:
  LeafGradeCount();
  virtual ~LeafGradeCount();

  LeafGradeCount(const LeafGradeCount& from);

  inline LeafGradeCount& operator=(const LeafGradeCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeafGradeCount& default_instance();

  void Swap(LeafGradeCount* other);

  // implements Message ----------------------------------------------

  inline LeafGradeCount* New() const { return New(NULL); }

  LeafGradeCount* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeafGradeCount& from);
  void MergeFrom(const LeafGradeCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeafGradeCount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 group = 1;
  bool has_group() const;
  void clear_group();
  static const int kGroupFieldNumber = 1;
  ::google::protobuf::int32 group() const;
  void set_group(::google::protobuf::int32 value);

  // required int32 rank = 2;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 2;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // required int32 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LeafGradeCount)
 private:
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_count();
  inline void clear_has_count();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 count_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static LeafGradeCount* default_instance_;
};
// -------------------------------------------------------------------

class SEndBatchProcessRepProto : public ::google::protobuf::Message {
 public:
  SEndBatchProcessRepProto();
  virtual ~SEndBatchProcessRepProto();

  SEndBatchProcessRepProto(const SEndBatchProcessRepProto& from);

  inline SEndBatchProcessRepProto& operator=(const SEndBatchProcessRepProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SEndBatchProcessRepProto& default_instance();

  void Swap(SEndBatchProcessRepProto* other);

  // implements Message ----------------------------------------------

  inline SEndBatchProcessRepProto* New() const { return New(NULL); }

  SEndBatchProcessRepProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SEndBatchProcessRepProto& from);
  void MergeFrom(const SEndBatchProcessRepProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SEndBatchProcessRepProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // repeated .LeafGradeCount leaf_grade_counts = 2;
  int leaf_grade_counts_size() const;
  void clear_leaf_grade_counts();
  static const int kLeafGradeCountsFieldNumber = 2;
  const ::LeafGradeCount& leaf_grade_counts(int index) const;
  ::LeafGradeCount* mutable_leaf_grade_counts(int index);
  ::LeafGradeCount* add_leaf_grade_counts();
  ::google::protobuf::RepeatedPtrField< ::LeafGradeCount >*
      mutable_leaf_grade_counts();
  const ::google::protobuf::RepeatedPtrField< ::LeafGradeCount >&
      leaf_grade_counts() const;

  // @@protoc_insertion_point(class_scope:SEndBatchProcessRepProto)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::LeafGradeCount > leaf_grade_counts_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static SEndBatchProcessRepProto* default_instance_;
};
// -------------------------------------------------------------------

class CLearnSampleReqProto : public ::google::protobuf::Message {
 public:
  CLearnSampleReqProto();
  virtual ~CLearnSampleReqProto();

  CLearnSampleReqProto(const CLearnSampleReqProto& from);

  inline CLearnSampleReqProto& operator=(const CLearnSampleReqProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLearnSampleReqProto& default_instance();

  void Swap(CLearnSampleReqProto* other);

  // implements Message ----------------------------------------------

  inline CLearnSampleReqProto* New() const { return New(NULL); }

  CLearnSampleReqProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CLearnSampleReqProto& from);
  void MergeFrom(const CLearnSampleReqProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CLearnSampleReqProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 group = 1;
  bool has_group() const;
  void clear_group();
  static const int kGroupFieldNumber = 1;
  ::google::protobuf::int32 group() const;
  void set_group(::google::protobuf::int32 value);

  // required int32 rank = 2;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 2;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CLearnSampleReqProto)
 private:
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_rank();
  inline void clear_has_rank();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 rank_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static CLearnSampleReqProto* default_instance_;
};
// -------------------------------------------------------------------

class SLearnSampleRepProto : public ::google::protobuf::Message {
 public:
  SLearnSampleRepProto();
  virtual ~SLearnSampleRepProto();

  SLearnSampleRepProto(const SLearnSampleRepProto& from);

  inline SLearnSampleRepProto& operator=(const SLearnSampleRepProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLearnSampleRepProto& default_instance();

  void Swap(SLearnSampleRepProto* other);

  // implements Message ----------------------------------------------

  inline SLearnSampleRepProto* New() const { return New(NULL); }

  SLearnSampleRepProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLearnSampleRepProto& from);
  void MergeFrom(const SLearnSampleRepProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLearnSampleRepProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // required int32 group = 2;
  bool has_group() const;
  void clear_group();
  static const int kGroupFieldNumber = 2;
  ::google::protobuf::int32 group() const;
  void set_group(::google::protobuf::int32 value);

  // required int32 rank = 3;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 3;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SLearnSampleRepProto)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_rank();
  inline void clear_has_rank();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 rank_;
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();

  void InitAsDefaultInstance();
  static SLearnSampleRepProto* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CProto

// required int32 id = 1;
inline bool CProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CProto::id() const {
  // @@protoc_insertion_point(field_get:CProto.id)
  return id_;
}
inline void CProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CProto.id)
}

// required bytes body = 2;
inline bool CProto::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CProto::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CProto::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CProto::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
inline const ::std::string& CProto::body() const {
  // @@protoc_insertion_point(field_get:CProto.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CProto::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CProto.body)
}
inline void CProto::set_body(const char* value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CProto.body)
}
inline void CProto::set_body(const void* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CProto.body)
}
inline ::std::string* CProto::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:CProto.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CProto::release_body() {
  clear_has_body();
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CProto::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:CProto.body)
}

// -------------------------------------------------------------------

// CP1

// required int32 a = 1;
inline bool CP1::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CP1::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CP1::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CP1::clear_a() {
  a_ = 0;
  clear_has_a();
}
inline ::google::protobuf::int32 CP1::a() const {
  // @@protoc_insertion_point(field_get:CP1.a)
  return a_;
}
inline void CP1::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:CP1.a)
}

// required int64 b = 2;
inline bool CP1::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CP1::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CP1::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CP1::clear_b() {
  b_ = GOOGLE_LONGLONG(0);
  clear_has_b();
}
inline ::google::protobuf::int64 CP1::b() const {
  // @@protoc_insertion_point(field_get:CP1.b)
  return b_;
}
inline void CP1::set_b(::google::protobuf::int64 value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:CP1.b)
}

// required string c = 3;
inline bool CP1::has_c() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CP1::set_has_c() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CP1::clear_has_c() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CP1::clear_c() {
  c_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_c();
}
inline const ::std::string& CP1::c() const {
  // @@protoc_insertion_point(field_get:CP1.c)
  return c_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CP1::set_c(const ::std::string& value) {
  set_has_c();
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CP1.c)
}
inline void CP1::set_c(const char* value) {
  set_has_c();
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CP1.c)
}
inline void CP1::set_c(const char* value, size_t size) {
  set_has_c();
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CP1.c)
}
inline ::std::string* CP1::mutable_c() {
  set_has_c();
  // @@protoc_insertion_point(field_mutable:CP1.c)
  return c_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CP1::release_c() {
  clear_has_c();
  return c_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CP1::set_allocated_c(::std::string* c) {
  if (c != NULL) {
    set_has_c();
  } else {
    clear_has_c();
  }
  c_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), c);
  // @@protoc_insertion_point(field_set_allocated:CP1.c)
}

// -------------------------------------------------------------------

// CP2

// required string a = 1;
inline bool CP2::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CP2::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CP2::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CP2::clear_a() {
  a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_a();
}
inline const ::std::string& CP2::a() const {
  // @@protoc_insertion_point(field_get:CP2.a)
  return a_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CP2::set_a(const ::std::string& value) {
  set_has_a();
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CP2.a)
}
inline void CP2::set_a(const char* value) {
  set_has_a();
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CP2.a)
}
inline void CP2::set_a(const char* value, size_t size) {
  set_has_a();
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CP2.a)
}
inline ::std::string* CP2::mutable_a() {
  set_has_a();
  // @@protoc_insertion_point(field_mutable:CP2.a)
  return a_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CP2::release_a() {
  clear_has_a();
  return a_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CP2::set_allocated_a(::std::string* a) {
  if (a != NULL) {
    set_has_a();
  } else {
    clear_has_a();
  }
  a_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), a);
  // @@protoc_insertion_point(field_set_allocated:CP2.a)
}

// required string b = 2;
inline bool CP2::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CP2::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CP2::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CP2::clear_b() {
  b_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_b();
}
inline const ::std::string& CP2::b() const {
  // @@protoc_insertion_point(field_get:CP2.b)
  return b_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CP2::set_b(const ::std::string& value) {
  set_has_b();
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CP2.b)
}
inline void CP2::set_b(const char* value) {
  set_has_b();
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CP2.b)
}
inline void CP2::set_b(const char* value, size_t size) {
  set_has_b();
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CP2.b)
}
inline ::std::string* CP2::mutable_b() {
  set_has_b();
  // @@protoc_insertion_point(field_mutable:CP2.b)
  return b_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CP2::release_b() {
  clear_has_b();
  return b_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CP2::set_allocated_b(::std::string* b) {
  if (b != NULL) {
    set_has_b();
  } else {
    clear_has_b();
  }
  b_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), b);
  // @@protoc_insertion_point(field_set_allocated:CP2.b)
}

// required int64 c = 3;
inline bool CP2::has_c() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CP2::set_has_c() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CP2::clear_has_c() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CP2::clear_c() {
  c_ = GOOGLE_LONGLONG(0);
  clear_has_c();
}
inline ::google::protobuf::int64 CP2::c() const {
  // @@protoc_insertion_point(field_get:CP2.c)
  return c_;
}
inline void CP2::set_c(::google::protobuf::int64 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:CP2.c)
}

// -------------------------------------------------------------------

// EchoProto

// required string data = 1;
inline bool EchoProto::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EchoProto::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EchoProto::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EchoProto::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& EchoProto::data() const {
  // @@protoc_insertion_point(field_get:EchoProto.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EchoProto::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EchoProto.data)
}
inline void EchoProto::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EchoProto.data)
}
inline void EchoProto::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EchoProto.data)
}
inline ::std::string* EchoProto::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:EchoProto.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EchoProto::release_data() {
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EchoProto::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:EchoProto.data)
}

// -------------------------------------------------------------------

// CSetCamaraSeqReqProto

// required uint32 seq = 1;
inline bool CSetCamaraSeqReqProto::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSetCamaraSeqReqProto::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSetCamaraSeqReqProto::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSetCamaraSeqReqProto::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 CSetCamaraSeqReqProto::seq() const {
  // @@protoc_insertion_point(field_get:CSetCamaraSeqReqProto.seq)
  return seq_;
}
inline void CSetCamaraSeqReqProto::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:CSetCamaraSeqReqProto.seq)
}

// -------------------------------------------------------------------

// SSetCamaraSeqRepProto

// required uint32 result = 1;
inline bool SSetCamaraSeqRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SSetCamaraSeqRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SSetCamaraSeqRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SSetCamaraSeqRepProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 SSetCamaraSeqRepProto::result() const {
  // @@protoc_insertion_point(field_get:SSetCamaraSeqRepProto.result)
  return result_;
}
inline void SSetCamaraSeqRepProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SSetCamaraSeqRepProto.result)
}

// -------------------------------------------------------------------

// CSendImageProcessDataReqProto

// required string ic_card_no = 1;
inline bool CSendImageProcessDataReqProto::has_ic_card_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSendImageProcessDataReqProto::set_has_ic_card_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSendImageProcessDataReqProto::clear_has_ic_card_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSendImageProcessDataReqProto::clear_ic_card_no() {
  ic_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ic_card_no();
}
inline const ::std::string& CSendImageProcessDataReqProto::ic_card_no() const {
  // @@protoc_insertion_point(field_get:CSendImageProcessDataReqProto.ic_card_no)
  return ic_card_no_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSendImageProcessDataReqProto::set_ic_card_no(const ::std::string& value) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSendImageProcessDataReqProto.ic_card_no)
}
inline void CSendImageProcessDataReqProto::set_ic_card_no(const char* value) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSendImageProcessDataReqProto.ic_card_no)
}
inline void CSendImageProcessDataReqProto::set_ic_card_no(const char* value, size_t size) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSendImageProcessDataReqProto.ic_card_no)
}
inline ::std::string* CSendImageProcessDataReqProto::mutable_ic_card_no() {
  set_has_ic_card_no();
  // @@protoc_insertion_point(field_mutable:CSendImageProcessDataReqProto.ic_card_no)
  return ic_card_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSendImageProcessDataReqProto::release_ic_card_no() {
  clear_has_ic_card_no();
  return ic_card_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSendImageProcessDataReqProto::set_allocated_ic_card_no(::std::string* ic_card_no) {
  if (ic_card_no != NULL) {
    set_has_ic_card_no();
  } else {
    clear_has_ic_card_no();
  }
  ic_card_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ic_card_no);
  // @@protoc_insertion_point(field_set_allocated:CSendImageProcessDataReqProto.ic_card_no)
}

// required int32 image_seq = 2;
inline bool CSendImageProcessDataReqProto::has_image_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSendImageProcessDataReqProto::set_has_image_seq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSendImageProcessDataReqProto::clear_has_image_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSendImageProcessDataReqProto::clear_image_seq() {
  image_seq_ = 0;
  clear_has_image_seq();
}
inline ::google::protobuf::int32 CSendImageProcessDataReqProto::image_seq() const {
  // @@protoc_insertion_point(field_get:CSendImageProcessDataReqProto.image_seq)
  return image_seq_;
}
inline void CSendImageProcessDataReqProto::set_image_seq(::google::protobuf::int32 value) {
  set_has_image_seq();
  image_seq_ = value;
  // @@protoc_insertion_point(field_set:CSendImageProcessDataReqProto.image_seq)
}

// required int32 x = 3;
inline bool CSendImageProcessDataReqProto::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSendImageProcessDataReqProto::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSendImageProcessDataReqProto::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSendImageProcessDataReqProto::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 CSendImageProcessDataReqProto::x() const {
  // @@protoc_insertion_point(field_get:CSendImageProcessDataReqProto.x)
  return x_;
}
inline void CSendImageProcessDataReqProto::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:CSendImageProcessDataReqProto.x)
}

// required int32 y = 4;
inline bool CSendImageProcessDataReqProto::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSendImageProcessDataReqProto::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSendImageProcessDataReqProto::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSendImageProcessDataReqProto::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 CSendImageProcessDataReqProto::y() const {
  // @@protoc_insertion_point(field_get:CSendImageProcessDataReqProto.y)
  return y_;
}
inline void CSendImageProcessDataReqProto::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:CSendImageProcessDataReqProto.y)
}

// required bytes data = 5;
inline bool CSendImageProcessDataReqProto::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSendImageProcessDataReqProto::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSendImageProcessDataReqProto::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSendImageProcessDataReqProto::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& CSendImageProcessDataReqProto::data() const {
  // @@protoc_insertion_point(field_get:CSendImageProcessDataReqProto.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSendImageProcessDataReqProto::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSendImageProcessDataReqProto.data)
}
inline void CSendImageProcessDataReqProto::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSendImageProcessDataReqProto.data)
}
inline void CSendImageProcessDataReqProto::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSendImageProcessDataReqProto.data)
}
inline ::std::string* CSendImageProcessDataReqProto::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:CSendImageProcessDataReqProto.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSendImageProcessDataReqProto::release_data() {
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSendImageProcessDataReqProto::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:CSendImageProcessDataReqProto.data)
}

// -------------------------------------------------------------------

// SSendImageProcessDataRepProto

// required string ic_card_no = 1;
inline bool SSendImageProcessDataRepProto::has_ic_card_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SSendImageProcessDataRepProto::set_has_ic_card_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SSendImageProcessDataRepProto::clear_has_ic_card_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SSendImageProcessDataRepProto::clear_ic_card_no() {
  ic_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ic_card_no();
}
inline const ::std::string& SSendImageProcessDataRepProto::ic_card_no() const {
  // @@protoc_insertion_point(field_get:SSendImageProcessDataRepProto.ic_card_no)
  return ic_card_no_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SSendImageProcessDataRepProto::set_ic_card_no(const ::std::string& value) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SSendImageProcessDataRepProto.ic_card_no)
}
inline void SSendImageProcessDataRepProto::set_ic_card_no(const char* value) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SSendImageProcessDataRepProto.ic_card_no)
}
inline void SSendImageProcessDataRepProto::set_ic_card_no(const char* value, size_t size) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SSendImageProcessDataRepProto.ic_card_no)
}
inline ::std::string* SSendImageProcessDataRepProto::mutable_ic_card_no() {
  set_has_ic_card_no();
  // @@protoc_insertion_point(field_mutable:SSendImageProcessDataRepProto.ic_card_no)
  return ic_card_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SSendImageProcessDataRepProto::release_ic_card_no() {
  clear_has_ic_card_no();
  return ic_card_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SSendImageProcessDataRepProto::set_allocated_ic_card_no(::std::string* ic_card_no) {
  if (ic_card_no != NULL) {
    set_has_ic_card_no();
  } else {
    clear_has_ic_card_no();
  }
  ic_card_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ic_card_no);
  // @@protoc_insertion_point(field_set_allocated:SSendImageProcessDataRepProto.ic_card_no)
}

// required int32 image_seq = 2;
inline bool SSendImageProcessDataRepProto::has_image_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SSendImageProcessDataRepProto::set_has_image_seq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SSendImageProcessDataRepProto::clear_has_image_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SSendImageProcessDataRepProto::clear_image_seq() {
  image_seq_ = 0;
  clear_has_image_seq();
}
inline ::google::protobuf::int32 SSendImageProcessDataRepProto::image_seq() const {
  // @@protoc_insertion_point(field_get:SSendImageProcessDataRepProto.image_seq)
  return image_seq_;
}
inline void SSendImageProcessDataRepProto::set_image_seq(::google::protobuf::int32 value) {
  set_has_image_seq();
  image_seq_ = value;
  // @@protoc_insertion_point(field_set:SSendImageProcessDataRepProto.image_seq)
}

// required int32 result = 3;
inline bool SSendImageProcessDataRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SSendImageProcessDataRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SSendImageProcessDataRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SSendImageProcessDataRepProto::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SSendImageProcessDataRepProto::result() const {
  // @@protoc_insertion_point(field_get:SSendImageProcessDataRepProto.result)
  return result_;
}
inline void SSendImageProcessDataRepProto::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SSendImageProcessDataRepProto.result)
}

// -------------------------------------------------------------------

// CRegisterCpsdReqProto

// required uint32 seq = 1;
inline bool CRegisterCpsdReqProto::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CRegisterCpsdReqProto::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CRegisterCpsdReqProto::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CRegisterCpsdReqProto::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 CRegisterCpsdReqProto::seq() const {
  // @@protoc_insertion_point(field_get:CRegisterCpsdReqProto.seq)
  return seq_;
}
inline void CRegisterCpsdReqProto::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:CRegisterCpsdReqProto.seq)
}

// -------------------------------------------------------------------

// SRegisterCpsdRepProto

// required uint32 result = 1;
inline bool SRegisterCpsdRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SRegisterCpsdRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SRegisterCpsdRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SRegisterCpsdRepProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 SRegisterCpsdRepProto::result() const {
  // @@protoc_insertion_point(field_get:SRegisterCpsdRepProto.result)
  return result_;
}
inline void SRegisterCpsdRepProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SRegisterCpsdRepProto.result)
}

// -------------------------------------------------------------------

// CRegisterClientReqProto

// required uint32 seq = 1;
inline bool CRegisterClientReqProto::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CRegisterClientReqProto::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CRegisterClientReqProto::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CRegisterClientReqProto::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 CRegisterClientReqProto::seq() const {
  // @@protoc_insertion_point(field_get:CRegisterClientReqProto.seq)
  return seq_;
}
inline void CRegisterClientReqProto::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:CRegisterClientReqProto.seq)
}

// -------------------------------------------------------------------

// SRegisterClientRepProto

// required uint32 result = 1;
inline bool SRegisterClientRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SRegisterClientRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SRegisterClientRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SRegisterClientRepProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 SRegisterClientRepProto::result() const {
  // @@protoc_insertion_point(field_get:SRegisterClientRepProto.result)
  return result_;
}
inline void SRegisterClientRepProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SRegisterClientRepProto.result)
}

// required int32 samples_count = 2;
inline bool SRegisterClientRepProto::has_samples_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SRegisterClientRepProto::set_has_samples_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SRegisterClientRepProto::clear_has_samples_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SRegisterClientRepProto::clear_samples_count() {
  samples_count_ = 0;
  clear_has_samples_count();
}
inline ::google::protobuf::int32 SRegisterClientRepProto::samples_count() const {
  // @@protoc_insertion_point(field_get:SRegisterClientRepProto.samples_count)
  return samples_count_;
}
inline void SRegisterClientRepProto::set_samples_count(::google::protobuf::int32 value) {
  set_has_samples_count();
  samples_count_ = value;
  // @@protoc_insertion_point(field_set:SRegisterClientRepProto.samples_count)
}

// -------------------------------------------------------------------

// FValidatePosReqpProto

// required uint32 result = 1;
inline bool FValidatePosReqpProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FValidatePosReqpProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FValidatePosReqpProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FValidatePosReqpProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 FValidatePosReqpProto::result() const {
  // @@protoc_insertion_point(field_get:FValidatePosReqpProto.result)
  return result_;
}
inline void FValidatePosReqpProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:FValidatePosReqpProto.result)
}

// required string image_path = 2;
inline bool FValidatePosReqpProto::has_image_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FValidatePosReqpProto::set_has_image_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FValidatePosReqpProto::clear_has_image_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FValidatePosReqpProto::clear_image_path() {
  image_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_image_path();
}
inline const ::std::string& FValidatePosReqpProto::image_path() const {
  // @@protoc_insertion_point(field_get:FValidatePosReqpProto.image_path)
  return image_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FValidatePosReqpProto::set_image_path(const ::std::string& value) {
  set_has_image_path();
  image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FValidatePosReqpProto.image_path)
}
inline void FValidatePosReqpProto::set_image_path(const char* value) {
  set_has_image_path();
  image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FValidatePosReqpProto.image_path)
}
inline void FValidatePosReqpProto::set_image_path(const char* value, size_t size) {
  set_has_image_path();
  image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FValidatePosReqpProto.image_path)
}
inline ::std::string* FValidatePosReqpProto::mutable_image_path() {
  set_has_image_path();
  // @@protoc_insertion_point(field_mutable:FValidatePosReqpProto.image_path)
  return image_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FValidatePosReqpProto::release_image_path() {
  clear_has_image_path();
  return image_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FValidatePosReqpProto::set_allocated_image_path(::std::string* image_path) {
  if (image_path != NULL) {
    set_has_image_path();
  } else {
    clear_has_image_path();
  }
  image_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_path);
  // @@protoc_insertion_point(field_set_allocated:FValidatePosReqpProto.image_path)
}

// -------------------------------------------------------------------

// CProcessFeatureReqProto

// required string id = 1;
inline bool CProcessFeatureReqProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CProcessFeatureReqProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CProcessFeatureReqProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CProcessFeatureReqProto::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CProcessFeatureReqProto::id() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CProcessFeatureReqProto::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.id)
}
inline void CProcessFeatureReqProto::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CProcessFeatureReqProto.id)
}
inline void CProcessFeatureReqProto::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CProcessFeatureReqProto.id)
}
inline ::std::string* CProcessFeatureReqProto::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:CProcessFeatureReqProto.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CProcessFeatureReqProto::release_id() {
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CProcessFeatureReqProto::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:CProcessFeatureReqProto.id)
}

// required double AvgSaturation = 2;
inline bool CProcessFeatureReqProto::has_avgsaturation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CProcessFeatureReqProto::set_has_avgsaturation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CProcessFeatureReqProto::clear_has_avgsaturation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CProcessFeatureReqProto::clear_avgsaturation() {
  avgsaturation_ = 0;
  clear_has_avgsaturation();
}
inline double CProcessFeatureReqProto::avgsaturation() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.AvgSaturation)
  return avgsaturation_;
}
inline void CProcessFeatureReqProto::set_avgsaturation(double value) {
  set_has_avgsaturation();
  avgsaturation_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.AvgSaturation)
}

// required double AvgHue = 3;
inline bool CProcessFeatureReqProto::has_avghue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CProcessFeatureReqProto::set_has_avghue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CProcessFeatureReqProto::clear_has_avghue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CProcessFeatureReqProto::clear_avghue() {
  avghue_ = 0;
  clear_has_avghue();
}
inline double CProcessFeatureReqProto::avghue() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.AvgHue)
  return avghue_;
}
inline void CProcessFeatureReqProto::set_avghue(double value) {
  set_has_avghue();
  avghue_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.AvgHue)
}

// required double AvgIntensity = 4;
inline bool CProcessFeatureReqProto::has_avgintensity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CProcessFeatureReqProto::set_has_avgintensity() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CProcessFeatureReqProto::clear_has_avgintensity() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CProcessFeatureReqProto::clear_avgintensity() {
  avgintensity_ = 0;
  clear_has_avgintensity();
}
inline double CProcessFeatureReqProto::avgintensity() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.AvgIntensity)
  return avgintensity_;
}
inline void CProcessFeatureReqProto::set_avgintensity(double value) {
  set_has_avgintensity();
  avgintensity_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.AvgIntensity)
}

// required double DeviationSaturation = 5;
inline bool CProcessFeatureReqProto::has_deviationsaturation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CProcessFeatureReqProto::set_has_deviationsaturation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CProcessFeatureReqProto::clear_has_deviationsaturation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CProcessFeatureReqProto::clear_deviationsaturation() {
  deviationsaturation_ = 0;
  clear_has_deviationsaturation();
}
inline double CProcessFeatureReqProto::deviationsaturation() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.DeviationSaturation)
  return deviationsaturation_;
}
inline void CProcessFeatureReqProto::set_deviationsaturation(double value) {
  set_has_deviationsaturation();
  deviationsaturation_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.DeviationSaturation)
}

// required double DeviationHue = 6;
inline bool CProcessFeatureReqProto::has_deviationhue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CProcessFeatureReqProto::set_has_deviationhue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CProcessFeatureReqProto::clear_has_deviationhue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CProcessFeatureReqProto::clear_deviationhue() {
  deviationhue_ = 0;
  clear_has_deviationhue();
}
inline double CProcessFeatureReqProto::deviationhue() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.DeviationHue)
  return deviationhue_;
}
inline void CProcessFeatureReqProto::set_deviationhue(double value) {
  set_has_deviationhue();
  deviationhue_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.DeviationHue)
}

// required double DeviationIntensity = 7;
inline bool CProcessFeatureReqProto::has_deviationintensity() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CProcessFeatureReqProto::set_has_deviationintensity() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CProcessFeatureReqProto::clear_has_deviationintensity() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CProcessFeatureReqProto::clear_deviationintensity() {
  deviationintensity_ = 0;
  clear_has_deviationintensity();
}
inline double CProcessFeatureReqProto::deviationintensity() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.DeviationIntensity)
  return deviationintensity_;
}
inline void CProcessFeatureReqProto::set_deviationintensity(double value) {
  set_has_deviationintensity();
  deviationintensity_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.DeviationIntensity)
}

// required double Length = 8;
inline bool CProcessFeatureReqProto::has_length() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CProcessFeatureReqProto::set_has_length() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CProcessFeatureReqProto::clear_has_length() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CProcessFeatureReqProto::clear_length() {
  length_ = 0;
  clear_has_length();
}
inline double CProcessFeatureReqProto::length() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.Length)
  return length_;
}
inline void CProcessFeatureReqProto::set_length(double value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.Length)
}

// required double Width = 9;
inline bool CProcessFeatureReqProto::has_width() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CProcessFeatureReqProto::set_has_width() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CProcessFeatureReqProto::clear_has_width() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CProcessFeatureReqProto::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline double CProcessFeatureReqProto::width() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.Width)
  return width_;
}
inline void CProcessFeatureReqProto::set_width(double value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.Width)
}

// required double WidthLengthRatio = 10;
inline bool CProcessFeatureReqProto::has_widthlengthratio() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CProcessFeatureReqProto::set_has_widthlengthratio() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CProcessFeatureReqProto::clear_has_widthlengthratio() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CProcessFeatureReqProto::clear_widthlengthratio() {
  widthlengthratio_ = 0;
  clear_has_widthlengthratio();
}
inline double CProcessFeatureReqProto::widthlengthratio() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.WidthLengthRatio)
  return widthlengthratio_;
}
inline void CProcessFeatureReqProto::set_widthlengthratio(double value) {
  set_has_widthlengthratio();
  widthlengthratio_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.WidthLengthRatio)
}

// required double ApexAngle = 11;
inline bool CProcessFeatureReqProto::has_apexangle() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CProcessFeatureReqProto::set_has_apexangle() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CProcessFeatureReqProto::clear_has_apexangle() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CProcessFeatureReqProto::clear_apexangle() {
  apexangle_ = 0;
  clear_has_apexangle();
}
inline double CProcessFeatureReqProto::apexangle() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.ApexAngle)
  return apexangle_;
}
inline void CProcessFeatureReqProto::set_apexangle(double value) {
  set_has_apexangle();
  apexangle_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.ApexAngle)
}

// required double Circularity = 12;
inline bool CProcessFeatureReqProto::has_circularity() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CProcessFeatureReqProto::set_has_circularity() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CProcessFeatureReqProto::clear_has_circularity() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CProcessFeatureReqProto::clear_circularity() {
  circularity_ = 0;
  clear_has_circularity();
}
inline double CProcessFeatureReqProto::circularity() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.Circularity)
  return circularity_;
}
inline void CProcessFeatureReqProto::set_circularity(double value) {
  set_has_circularity();
  circularity_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.Circularity)
}

// required double Area = 13;
inline bool CProcessFeatureReqProto::has_area() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CProcessFeatureReqProto::set_has_area() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CProcessFeatureReqProto::clear_has_area() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CProcessFeatureReqProto::clear_area() {
  area_ = 0;
  clear_has_area();
}
inline double CProcessFeatureReqProto::area() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.Area)
  return area_;
}
inline void CProcessFeatureReqProto::set_area(double value) {
  set_has_area();
  area_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.Area)
}

// required double ThickMean = 14;
inline bool CProcessFeatureReqProto::has_thickmean() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CProcessFeatureReqProto::set_has_thickmean() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CProcessFeatureReqProto::clear_has_thickmean() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CProcessFeatureReqProto::clear_thickmean() {
  thickmean_ = 0;
  clear_has_thickmean();
}
inline double CProcessFeatureReqProto::thickmean() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.ThickMean)
  return thickmean_;
}
inline void CProcessFeatureReqProto::set_thickmean(double value) {
  set_has_thickmean();
  thickmean_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.ThickMean)
}

// required double DefectRate = 15;
inline bool CProcessFeatureReqProto::has_defectrate() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CProcessFeatureReqProto::set_has_defectrate() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CProcessFeatureReqProto::clear_has_defectrate() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CProcessFeatureReqProto::clear_defectrate() {
  defectrate_ = 0;
  clear_has_defectrate();
}
inline double CProcessFeatureReqProto::defectrate() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.DefectRate)
  return defectrate_;
}
inline void CProcessFeatureReqProto::set_defectrate(double value) {
  set_has_defectrate();
  defectrate_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.DefectRate)
}

// -------------------------------------------------------------------

// SProcessFeatureRepProto

// required uint32 result = 1;
inline bool SProcessFeatureRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SProcessFeatureRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SProcessFeatureRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SProcessFeatureRepProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 SProcessFeatureRepProto::result() const {
  // @@protoc_insertion_point(field_get:SProcessFeatureRepProto.result)
  return result_;
}
inline void SProcessFeatureRepProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SProcessFeatureRepProto.result)
}

// -------------------------------------------------------------------

// SProcessResultProto

// required uint32 result = 1;
inline bool SProcessResultProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SProcessResultProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SProcessResultProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SProcessResultProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 SProcessResultProto::result() const {
  // @@protoc_insertion_point(field_get:SProcessResultProto.result)
  return result_;
}
inline void SProcessResultProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SProcessResultProto.result)
}

// required int32 group = 2;
inline bool SProcessResultProto::has_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SProcessResultProto::set_has_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SProcessResultProto::clear_has_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SProcessResultProto::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 SProcessResultProto::group() const {
  // @@protoc_insertion_point(field_get:SProcessResultProto.group)
  return group_;
}
inline void SProcessResultProto::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
  // @@protoc_insertion_point(field_set:SProcessResultProto.group)
}

// required int32 rank = 3;
inline bool SProcessResultProto::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SProcessResultProto::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SProcessResultProto::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SProcessResultProto::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 SProcessResultProto::rank() const {
  // @@protoc_insertion_point(field_get:SProcessResultProto.rank)
  return rank_;
}
inline void SProcessResultProto::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:SProcessResultProto.rank)
}

// -------------------------------------------------------------------

// CSetProcessStateReqProto

// required int32 state = 1;
inline bool CSetProcessStateReqProto::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSetProcessStateReqProto::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSetProcessStateReqProto::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSetProcessStateReqProto::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 CSetProcessStateReqProto::state() const {
  // @@protoc_insertion_point(field_get:CSetProcessStateReqProto.state)
  return state_;
}
inline void CSetProcessStateReqProto::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CSetProcessStateReqProto.state)
}

// -------------------------------------------------------------------

// SSetProcessStateRepProto

// required uint32 result = 1;
inline bool SSetProcessStateRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SSetProcessStateRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SSetProcessStateRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SSetProcessStateRepProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 SSetProcessStateRepProto::result() const {
  // @@protoc_insertion_point(field_get:SSetProcessStateRepProto.result)
  return result_;
}
inline void SSetProcessStateRepProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SSetProcessStateRepProto.result)
}

// -------------------------------------------------------------------

// CEndBatchProcessReqProto

// required int32 state = 1;
inline bool CEndBatchProcessReqProto::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CEndBatchProcessReqProto::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CEndBatchProcessReqProto::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CEndBatchProcessReqProto::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 CEndBatchProcessReqProto::state() const {
  // @@protoc_insertion_point(field_get:CEndBatchProcessReqProto.state)
  return state_;
}
inline void CEndBatchProcessReqProto::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CEndBatchProcessReqProto.state)
}

// -------------------------------------------------------------------

// LeafGradeCount

// required int32 group = 1;
inline bool LeafGradeCount::has_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeafGradeCount::set_has_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeafGradeCount::clear_has_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeafGradeCount::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 LeafGradeCount::group() const {
  // @@protoc_insertion_point(field_get:LeafGradeCount.group)
  return group_;
}
inline void LeafGradeCount::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
  // @@protoc_insertion_point(field_set:LeafGradeCount.group)
}

// required int32 rank = 2;
inline bool LeafGradeCount::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LeafGradeCount::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LeafGradeCount::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LeafGradeCount::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 LeafGradeCount::rank() const {
  // @@protoc_insertion_point(field_get:LeafGradeCount.rank)
  return rank_;
}
inline void LeafGradeCount::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:LeafGradeCount.rank)
}

// required int32 count = 3;
inline bool LeafGradeCount::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LeafGradeCount::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LeafGradeCount::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LeafGradeCount::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 LeafGradeCount::count() const {
  // @@protoc_insertion_point(field_get:LeafGradeCount.count)
  return count_;
}
inline void LeafGradeCount::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:LeafGradeCount.count)
}

// -------------------------------------------------------------------

// SEndBatchProcessRepProto

// required uint32 result = 1;
inline bool SEndBatchProcessRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SEndBatchProcessRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SEndBatchProcessRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SEndBatchProcessRepProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 SEndBatchProcessRepProto::result() const {
  // @@protoc_insertion_point(field_get:SEndBatchProcessRepProto.result)
  return result_;
}
inline void SEndBatchProcessRepProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SEndBatchProcessRepProto.result)
}

// repeated .LeafGradeCount leaf_grade_counts = 2;
inline int SEndBatchProcessRepProto::leaf_grade_counts_size() const {
  return leaf_grade_counts_.size();
}
inline void SEndBatchProcessRepProto::clear_leaf_grade_counts() {
  leaf_grade_counts_.Clear();
}
inline const ::LeafGradeCount& SEndBatchProcessRepProto::leaf_grade_counts(int index) const {
  // @@protoc_insertion_point(field_get:SEndBatchProcessRepProto.leaf_grade_counts)
  return leaf_grade_counts_.Get(index);
}
inline ::LeafGradeCount* SEndBatchProcessRepProto::mutable_leaf_grade_counts(int index) {
  // @@protoc_insertion_point(field_mutable:SEndBatchProcessRepProto.leaf_grade_counts)
  return leaf_grade_counts_.Mutable(index);
}
inline ::LeafGradeCount* SEndBatchProcessRepProto::add_leaf_grade_counts() {
  // @@protoc_insertion_point(field_add:SEndBatchProcessRepProto.leaf_grade_counts)
  return leaf_grade_counts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::LeafGradeCount >*
SEndBatchProcessRepProto::mutable_leaf_grade_counts() {
  // @@protoc_insertion_point(field_mutable_list:SEndBatchProcessRepProto.leaf_grade_counts)
  return &leaf_grade_counts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::LeafGradeCount >&
SEndBatchProcessRepProto::leaf_grade_counts() const {
  // @@protoc_insertion_point(field_list:SEndBatchProcessRepProto.leaf_grade_counts)
  return leaf_grade_counts_;
}

// -------------------------------------------------------------------

// CLearnSampleReqProto

// required int32 group = 1;
inline bool CLearnSampleReqProto::has_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CLearnSampleReqProto::set_has_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CLearnSampleReqProto::clear_has_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CLearnSampleReqProto::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 CLearnSampleReqProto::group() const {
  // @@protoc_insertion_point(field_get:CLearnSampleReqProto.group)
  return group_;
}
inline void CLearnSampleReqProto::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
  // @@protoc_insertion_point(field_set:CLearnSampleReqProto.group)
}

// required int32 rank = 2;
inline bool CLearnSampleReqProto::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CLearnSampleReqProto::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CLearnSampleReqProto::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CLearnSampleReqProto::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 CLearnSampleReqProto::rank() const {
  // @@protoc_insertion_point(field_get:CLearnSampleReqProto.rank)
  return rank_;
}
inline void CLearnSampleReqProto::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CLearnSampleReqProto.rank)
}

// -------------------------------------------------------------------

// SLearnSampleRepProto

// required uint32 result = 1;
inline bool SLearnSampleRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SLearnSampleRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SLearnSampleRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SLearnSampleRepProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 SLearnSampleRepProto::result() const {
  // @@protoc_insertion_point(field_get:SLearnSampleRepProto.result)
  return result_;
}
inline void SLearnSampleRepProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SLearnSampleRepProto.result)
}

// required int32 group = 2;
inline bool SLearnSampleRepProto::has_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SLearnSampleRepProto::set_has_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SLearnSampleRepProto::clear_has_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SLearnSampleRepProto::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 SLearnSampleRepProto::group() const {
  // @@protoc_insertion_point(field_get:SLearnSampleRepProto.group)
  return group_;
}
inline void SLearnSampleRepProto::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
  // @@protoc_insertion_point(field_set:SLearnSampleRepProto.group)
}

// required int32 rank = 3;
inline bool SLearnSampleRepProto::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SLearnSampleRepProto::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SLearnSampleRepProto::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SLearnSampleRepProto::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 SLearnSampleRepProto::rank() const {
  // @@protoc_insertion_point(field_get:SLearnSampleRepProto.rank)
  return rank_;
}
inline void SLearnSampleRepProto::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:SLearnSampleRepProto.rank)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_netmessage_2eproto__INCLUDED
