// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netmessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "netmessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CP1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CP1_reflection_ = NULL;
const ::google::protobuf::Descriptor* CP2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CP2_reflection_ = NULL;
const ::google::protobuf::Descriptor* EchoProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EchoProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSetCamaraSeqReqProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSetCamaraSeqReqProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SSetCamaraSeqRepProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SSetCamaraSeqRepProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSendImageProcessDataReqProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSendImageProcessDataReqProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SSendImageProcessDataRepProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SSendImageProcessDataRepProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CRegisterCpsdReqProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CRegisterCpsdReqProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SRegisterCpsdRepProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SRegisterCpsdRepProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CRegisterClientReqProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CRegisterClientReqProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SRegisterClientRepProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SRegisterClientRepProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* FValidatePosReqpProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FValidatePosReqpProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CProcessFeatureReqProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CProcessFeatureReqProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SProcessFeatureRepProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SProcessFeatureRepProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SProcessResultProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SProcessResultProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSetProcessStateReqProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSetProcessStateReqProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SSetProcessStateRepProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SSetProcessStateRepProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CEndBatchProcessReqProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CEndBatchProcessReqProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SEndBatchProcessRepProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SEndBatchProcessRepProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_netmessage_2eproto() {
  protobuf_AddDesc_netmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "netmessage.proto");
  GOOGLE_CHECK(file != NULL);
  CProto_descriptor_ = file->message_type(0);
  static const int CProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProto, body_),
  };
  CProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CProto_descriptor_,
      CProto::default_instance_,
      CProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(CProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProto, _internal_metadata_),
      -1);
  CP1_descriptor_ = file->message_type(1);
  static const int CP1_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP1, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP1, b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP1, c_),
  };
  CP1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CP1_descriptor_,
      CP1::default_instance_,
      CP1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP1, _has_bits_[0]),
      -1,
      -1,
      sizeof(CP1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP1, _internal_metadata_),
      -1);
  CP2_descriptor_ = file->message_type(2);
  static const int CP2_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP2, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP2, b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP2, c_),
  };
  CP2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CP2_descriptor_,
      CP2::default_instance_,
      CP2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP2, _has_bits_[0]),
      -1,
      -1,
      sizeof(CP2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP2, _internal_metadata_),
      -1);
  EchoProto_descriptor_ = file->message_type(3);
  static const int EchoProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoProto, data_),
  };
  EchoProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EchoProto_descriptor_,
      EchoProto::default_instance_,
      EchoProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(EchoProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoProto, _internal_metadata_),
      -1);
  CSetCamaraSeqReqProto_descriptor_ = file->message_type(4);
  static const int CSetCamaraSeqReqProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSetCamaraSeqReqProto, seq_),
  };
  CSetCamaraSeqReqProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CSetCamaraSeqReqProto_descriptor_,
      CSetCamaraSeqReqProto::default_instance_,
      CSetCamaraSeqReqProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSetCamaraSeqReqProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(CSetCamaraSeqReqProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSetCamaraSeqReqProto, _internal_metadata_),
      -1);
  SSetCamaraSeqRepProto_descriptor_ = file->message_type(5);
  static const int SSetCamaraSeqRepProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSetCamaraSeqRepProto, result_),
  };
  SSetCamaraSeqRepProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SSetCamaraSeqRepProto_descriptor_,
      SSetCamaraSeqRepProto::default_instance_,
      SSetCamaraSeqRepProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSetCamaraSeqRepProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(SSetCamaraSeqRepProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSetCamaraSeqRepProto, _internal_metadata_),
      -1);
  CSendImageProcessDataReqProto_descriptor_ = file->message_type(6);
  static const int CSendImageProcessDataReqProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSendImageProcessDataReqProto, ic_card_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSendImageProcessDataReqProto, image_seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSendImageProcessDataReqProto, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSendImageProcessDataReqProto, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSendImageProcessDataReqProto, data_),
  };
  CSendImageProcessDataReqProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CSendImageProcessDataReqProto_descriptor_,
      CSendImageProcessDataReqProto::default_instance_,
      CSendImageProcessDataReqProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSendImageProcessDataReqProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(CSendImageProcessDataReqProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSendImageProcessDataReqProto, _internal_metadata_),
      -1);
  SSendImageProcessDataRepProto_descriptor_ = file->message_type(7);
  static const int SSendImageProcessDataRepProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSendImageProcessDataRepProto, ic_card_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSendImageProcessDataRepProto, image_seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSendImageProcessDataRepProto, result_),
  };
  SSendImageProcessDataRepProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SSendImageProcessDataRepProto_descriptor_,
      SSendImageProcessDataRepProto::default_instance_,
      SSendImageProcessDataRepProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSendImageProcessDataRepProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(SSendImageProcessDataRepProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSendImageProcessDataRepProto, _internal_metadata_),
      -1);
  CRegisterCpsdReqProto_descriptor_ = file->message_type(8);
  static const int CRegisterCpsdReqProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRegisterCpsdReqProto, seq_),
  };
  CRegisterCpsdReqProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CRegisterCpsdReqProto_descriptor_,
      CRegisterCpsdReqProto::default_instance_,
      CRegisterCpsdReqProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRegisterCpsdReqProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(CRegisterCpsdReqProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRegisterCpsdReqProto, _internal_metadata_),
      -1);
  SRegisterCpsdRepProto_descriptor_ = file->message_type(9);
  static const int SRegisterCpsdRepProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRegisterCpsdRepProto, result_),
  };
  SRegisterCpsdRepProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SRegisterCpsdRepProto_descriptor_,
      SRegisterCpsdRepProto::default_instance_,
      SRegisterCpsdRepProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRegisterCpsdRepProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(SRegisterCpsdRepProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRegisterCpsdRepProto, _internal_metadata_),
      -1);
  CRegisterClientReqProto_descriptor_ = file->message_type(10);
  static const int CRegisterClientReqProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRegisterClientReqProto, seq_),
  };
  CRegisterClientReqProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CRegisterClientReqProto_descriptor_,
      CRegisterClientReqProto::default_instance_,
      CRegisterClientReqProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRegisterClientReqProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(CRegisterClientReqProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRegisterClientReqProto, _internal_metadata_),
      -1);
  SRegisterClientRepProto_descriptor_ = file->message_type(11);
  static const int SRegisterClientRepProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRegisterClientRepProto, result_),
  };
  SRegisterClientRepProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SRegisterClientRepProto_descriptor_,
      SRegisterClientRepProto::default_instance_,
      SRegisterClientRepProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRegisterClientRepProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(SRegisterClientRepProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRegisterClientRepProto, _internal_metadata_),
      -1);
  FValidatePosReqpProto_descriptor_ = file->message_type(12);
  static const int FValidatePosReqpProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FValidatePosReqpProto, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FValidatePosReqpProto, image_path_),
  };
  FValidatePosReqpProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FValidatePosReqpProto_descriptor_,
      FValidatePosReqpProto::default_instance_,
      FValidatePosReqpProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FValidatePosReqpProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(FValidatePosReqpProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FValidatePosReqpProto, _internal_metadata_),
      -1);
  CProcessFeatureReqProto_descriptor_ = file->message_type(13);
  static const int CProcessFeatureReqProto_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, avgsaturation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, avghue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, avgintensity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, deviationsaturation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, deviationhue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, deviationintensity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, widthlengthratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, apexangle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, circularity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, area_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, thickmean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, defectrate_),
  };
  CProcessFeatureReqProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CProcessFeatureReqProto_descriptor_,
      CProcessFeatureReqProto::default_instance_,
      CProcessFeatureReqProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(CProcessFeatureReqProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProcessFeatureReqProto, _internal_metadata_),
      -1);
  SProcessFeatureRepProto_descriptor_ = file->message_type(14);
  static const int SProcessFeatureRepProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SProcessFeatureRepProto, result_),
  };
  SProcessFeatureRepProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SProcessFeatureRepProto_descriptor_,
      SProcessFeatureRepProto::default_instance_,
      SProcessFeatureRepProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SProcessFeatureRepProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(SProcessFeatureRepProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SProcessFeatureRepProto, _internal_metadata_),
      -1);
  SProcessResultProto_descriptor_ = file->message_type(15);
  static const int SProcessResultProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SProcessResultProto, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SProcessResultProto, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SProcessResultProto, data_),
  };
  SProcessResultProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SProcessResultProto_descriptor_,
      SProcessResultProto::default_instance_,
      SProcessResultProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SProcessResultProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(SProcessResultProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SProcessResultProto, _internal_metadata_),
      -1);
  CSetProcessStateReqProto_descriptor_ = file->message_type(16);
  static const int CSetProcessStateReqProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSetProcessStateReqProto, state_),
  };
  CSetProcessStateReqProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CSetProcessStateReqProto_descriptor_,
      CSetProcessStateReqProto::default_instance_,
      CSetProcessStateReqProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSetProcessStateReqProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(CSetProcessStateReqProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSetProcessStateReqProto, _internal_metadata_),
      -1);
  SSetProcessStateRepProto_descriptor_ = file->message_type(17);
  static const int SSetProcessStateRepProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSetProcessStateRepProto, result_),
  };
  SSetProcessStateRepProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SSetProcessStateRepProto_descriptor_,
      SSetProcessStateRepProto::default_instance_,
      SSetProcessStateRepProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSetProcessStateRepProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(SSetProcessStateRepProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSetProcessStateRepProto, _internal_metadata_),
      -1);
  CEndBatchProcessReqProto_descriptor_ = file->message_type(18);
  static const int CEndBatchProcessReqProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEndBatchProcessReqProto, state_),
  };
  CEndBatchProcessReqProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CEndBatchProcessReqProto_descriptor_,
      CEndBatchProcessReqProto::default_instance_,
      CEndBatchProcessReqProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEndBatchProcessReqProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(CEndBatchProcessReqProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEndBatchProcessReqProto, _internal_metadata_),
      -1);
  SEndBatchProcessRepProto_descriptor_ = file->message_type(19);
  static const int SEndBatchProcessRepProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SEndBatchProcessRepProto, result_),
  };
  SEndBatchProcessRepProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SEndBatchProcessRepProto_descriptor_,
      SEndBatchProcessRepProto::default_instance_,
      SEndBatchProcessRepProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SEndBatchProcessRepProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(SEndBatchProcessRepProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SEndBatchProcessRepProto, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_netmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CProto_descriptor_, &CProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CP1_descriptor_, &CP1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CP2_descriptor_, &CP2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EchoProto_descriptor_, &EchoProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CSetCamaraSeqReqProto_descriptor_, &CSetCamaraSeqReqProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SSetCamaraSeqRepProto_descriptor_, &SSetCamaraSeqRepProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CSendImageProcessDataReqProto_descriptor_, &CSendImageProcessDataReqProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SSendImageProcessDataRepProto_descriptor_, &SSendImageProcessDataRepProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CRegisterCpsdReqProto_descriptor_, &CRegisterCpsdReqProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SRegisterCpsdRepProto_descriptor_, &SRegisterCpsdRepProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CRegisterClientReqProto_descriptor_, &CRegisterClientReqProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SRegisterClientRepProto_descriptor_, &SRegisterClientRepProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FValidatePosReqpProto_descriptor_, &FValidatePosReqpProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CProcessFeatureReqProto_descriptor_, &CProcessFeatureReqProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SProcessFeatureRepProto_descriptor_, &SProcessFeatureRepProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SProcessResultProto_descriptor_, &SProcessResultProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CSetProcessStateReqProto_descriptor_, &CSetProcessStateReqProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SSetProcessStateRepProto_descriptor_, &SSetProcessStateRepProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CEndBatchProcessReqProto_descriptor_, &CEndBatchProcessReqProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SEndBatchProcessRepProto_descriptor_, &SEndBatchProcessRepProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_netmessage_2eproto() {
  delete CProto::default_instance_;
  delete CProto_reflection_;
  delete CP1::default_instance_;
  delete CP1_reflection_;
  delete CP2::default_instance_;
  delete CP2_reflection_;
  delete EchoProto::default_instance_;
  delete EchoProto_reflection_;
  delete CSetCamaraSeqReqProto::default_instance_;
  delete CSetCamaraSeqReqProto_reflection_;
  delete SSetCamaraSeqRepProto::default_instance_;
  delete SSetCamaraSeqRepProto_reflection_;
  delete CSendImageProcessDataReqProto::default_instance_;
  delete CSendImageProcessDataReqProto_reflection_;
  delete SSendImageProcessDataRepProto::default_instance_;
  delete SSendImageProcessDataRepProto_reflection_;
  delete CRegisterCpsdReqProto::default_instance_;
  delete CRegisterCpsdReqProto_reflection_;
  delete SRegisterCpsdRepProto::default_instance_;
  delete SRegisterCpsdRepProto_reflection_;
  delete CRegisterClientReqProto::default_instance_;
  delete CRegisterClientReqProto_reflection_;
  delete SRegisterClientRepProto::default_instance_;
  delete SRegisterClientRepProto_reflection_;
  delete FValidatePosReqpProto::default_instance_;
  delete FValidatePosReqpProto_reflection_;
  delete CProcessFeatureReqProto::default_instance_;
  delete CProcessFeatureReqProto_reflection_;
  delete SProcessFeatureRepProto::default_instance_;
  delete SProcessFeatureRepProto_reflection_;
  delete SProcessResultProto::default_instance_;
  delete SProcessResultProto_reflection_;
  delete CSetProcessStateReqProto::default_instance_;
  delete CSetProcessStateReqProto_reflection_;
  delete SSetProcessStateRepProto::default_instance_;
  delete SSetProcessStateRepProto_reflection_;
  delete CEndBatchProcessReqProto::default_instance_;
  delete CEndBatchProcessReqProto_reflection_;
  delete SEndBatchProcessRepProto::default_instance_;
  delete SEndBatchProcessRepProto_reflection_;
}

void protobuf_AddDesc_netmessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020netmessage.proto\"\"\n\006CProto\022\n\n\002id\030\001 \002(\005"
    "\022\014\n\004body\030\002 \002(\t\"&\n\003CP1\022\t\n\001a\030\001 \002(\005\022\t\n\001b\030\002 "
    "\002(\003\022\t\n\001c\030\003 \002(\t\"&\n\003CP2\022\t\n\001a\030\001 \002(\t\022\t\n\001b\030\002 "
    "\002(\t\022\t\n\001c\030\003 \002(\003\"\031\n\tEchoProto\022\014\n\004data\030\001 \002("
    "\t\"$\n\025CSetCamaraSeqReqProto\022\013\n\003seq\030\001 \002(\r\""
    "\'\n\025SSetCamaraSeqRepProto\022\016\n\006result\030\001 \002(\r"
    "\"j\n\035CSendImageProcessDataReqProto\022\022\n\nic_"
    "card_no\030\001 \002(\t\022\021\n\timage_seq\030\002 \002(\005\022\t\n\001x\030\003 "
    "\002(\005\022\t\n\001y\030\004 \002(\005\022\014\n\004data\030\005 \002(\014\"V\n\035SSendIma"
    "geProcessDataRepProto\022\022\n\nic_card_no\030\001 \002("
    "\t\022\021\n\timage_seq\030\002 \002(\005\022\016\n\006result\030\003 \002(\005\"$\n\025"
    "CRegisterCpsdReqProto\022\013\n\003seq\030\001 \002(\r\"\'\n\025SR"
    "egisterCpsdRepProto\022\016\n\006result\030\001 \002(\r\"&\n\027C"
    "RegisterClientReqProto\022\013\n\003seq\030\001 \002(\r\")\n\027S"
    "RegisterClientRepProto\022\016\n\006result\030\001 \002(\r\";"
    "\n\025FValidatePosReqpProto\022\016\n\006result\030\001 \002(\r\022"
    "\022\n\nimage_path\030\002 \002(\t\"\307\002\n\027CProcessFeatureR"
    "eqProto\022\n\n\002id\030\001 \002(\t\022\025\n\rAvgSaturation\030\002 \002"
    "(\001\022\016\n\006AvgHue\030\003 \002(\001\022\024\n\014AvgIntensity\030\004 \002(\001"
    "\022\033\n\023DeviationSaturation\030\005 \002(\001\022\024\n\014Deviati"
    "onHue\030\006 \002(\001\022\032\n\022DeviationIntensity\030\007 \002(\001\022"
    "\016\n\006Length\030\010 \002(\001\022\r\n\005Width\030\t \002(\001\022\030\n\020WidthL"
    "engthRatio\030\n \002(\001\022\021\n\tApexAngle\030\013 \002(\001\022\023\n\013C"
    "ircularity\030\014 \002(\001\022\014\n\004Area\030\r \002(\001\022\021\n\tThickM"
    "ean\030\016 \002(\001\022\022\n\nDefectRate\030\017 \002(\001\")\n\027SProces"
    "sFeatureRepProto\022\016\n\006result\030\001 \002(\r\"B\n\023SPro"
    "cessResultProto\022\016\n\006result\030\001 \002(\r\022\r\n\005level"
    "\030\002 \002(\005\022\014\n\004data\030\003 \002(\014\")\n\030CSetProcessState"
    "ReqProto\022\r\n\005state\030\001 \002(\005\"*\n\030SSetProcessSt"
    "ateRepProto\022\016\n\006result\030\001 \002(\r\")\n\030CEndBatch"
    "ProcessReqProto\022\r\n\005state\030\001 \002(\005\"*\n\030SEndBa"
    "tchProcessRepProto\022\016\n\006result\030\001 \002(\r", 1274);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "netmessage.proto", &protobuf_RegisterTypes);
  CProto::default_instance_ = new CProto();
  CP1::default_instance_ = new CP1();
  CP2::default_instance_ = new CP2();
  EchoProto::default_instance_ = new EchoProto();
  CSetCamaraSeqReqProto::default_instance_ = new CSetCamaraSeqReqProto();
  SSetCamaraSeqRepProto::default_instance_ = new SSetCamaraSeqRepProto();
  CSendImageProcessDataReqProto::default_instance_ = new CSendImageProcessDataReqProto();
  SSendImageProcessDataRepProto::default_instance_ = new SSendImageProcessDataRepProto();
  CRegisterCpsdReqProto::default_instance_ = new CRegisterCpsdReqProto();
  SRegisterCpsdRepProto::default_instance_ = new SRegisterCpsdRepProto();
  CRegisterClientReqProto::default_instance_ = new CRegisterClientReqProto();
  SRegisterClientRepProto::default_instance_ = new SRegisterClientRepProto();
  FValidatePosReqpProto::default_instance_ = new FValidatePosReqpProto();
  CProcessFeatureReqProto::default_instance_ = new CProcessFeatureReqProto();
  SProcessFeatureRepProto::default_instance_ = new SProcessFeatureRepProto();
  SProcessResultProto::default_instance_ = new SProcessResultProto();
  CSetProcessStateReqProto::default_instance_ = new CSetProcessStateReqProto();
  SSetProcessStateRepProto::default_instance_ = new SSetProcessStateRepProto();
  CEndBatchProcessReqProto::default_instance_ = new CEndBatchProcessReqProto();
  SEndBatchProcessRepProto::default_instance_ = new SEndBatchProcessRepProto();
  CProto::default_instance_->InitAsDefaultInstance();
  CP1::default_instance_->InitAsDefaultInstance();
  CP2::default_instance_->InitAsDefaultInstance();
  EchoProto::default_instance_->InitAsDefaultInstance();
  CSetCamaraSeqReqProto::default_instance_->InitAsDefaultInstance();
  SSetCamaraSeqRepProto::default_instance_->InitAsDefaultInstance();
  CSendImageProcessDataReqProto::default_instance_->InitAsDefaultInstance();
  SSendImageProcessDataRepProto::default_instance_->InitAsDefaultInstance();
  CRegisterCpsdReqProto::default_instance_->InitAsDefaultInstance();
  SRegisterCpsdRepProto::default_instance_->InitAsDefaultInstance();
  CRegisterClientReqProto::default_instance_->InitAsDefaultInstance();
  SRegisterClientRepProto::default_instance_->InitAsDefaultInstance();
  FValidatePosReqpProto::default_instance_->InitAsDefaultInstance();
  CProcessFeatureReqProto::default_instance_->InitAsDefaultInstance();
  SProcessFeatureRepProto::default_instance_->InitAsDefaultInstance();
  SProcessResultProto::default_instance_->InitAsDefaultInstance();
  CSetProcessStateReqProto::default_instance_->InitAsDefaultInstance();
  SSetProcessStateRepProto::default_instance_->InitAsDefaultInstance();
  CEndBatchProcessReqProto::default_instance_->InitAsDefaultInstance();
  SEndBatchProcessRepProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_netmessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_netmessage_2eproto {
  StaticDescriptorInitializer_netmessage_2eproto() {
    protobuf_AddDesc_netmessage_2eproto();
  }
} static_descriptor_initializer_netmessage_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProto::kIdFieldNumber;
const int CProto::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProto::CProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProto)
}

void CProto::InitAsDefaultInstance() {
}

CProto::CProto(const CProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CProto)
}

void CProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CProto::~CProto() {
  // @@protoc_insertion_point(destructor:CProto)
  SharedDtor();
}

void CProto::SharedDtor() {
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CProto_descriptor_;
}

const CProto& CProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

CProto* CProto::default_instance_ = NULL;

CProto* CProto::New(::google::protobuf::Arena* arena) const {
  CProto* n = new CProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProto::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    id_ = 0;
    if (has_body()) {
      body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_body;
        break;
      }

      // required string body = 2;
      case 2: {
        if (tag == 18) {
         parse_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body().data(), this->body().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CProto.body");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProto)
  return false;
#undef DO_
}

void CProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProto)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string body = 2;
  if (has_body()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body().data(), this->body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CProto.body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProto)
}

::google::protobuf::uint8* CProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CProto)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string body = 2;
  if (has_body()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body().data(), this->body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CProto.body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProto)
  return target;
}

int CProto::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_body()) {
    // required string body = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body());
  }

  return total_size;
}
int CProto::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required string body = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CProto::MergeFrom(const CProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_body()) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProto::CopyFrom(const CProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CProto::Swap(CProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProto::InternalSwap(CProto* other) {
  std::swap(id_, other->id_);
  body_.Swap(&other->body_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CProto_descriptor_;
  metadata.reflection = CProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProto

// required int32 id = 1;
bool CProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 CProto::id() const {
  // @@protoc_insertion_point(field_get:CProto.id)
  return id_;
}
 void CProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CProto.id)
}

// required string body = 2;
bool CProto::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CProto::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
void CProto::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
void CProto::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
 const ::std::string& CProto::body() const {
  // @@protoc_insertion_point(field_get:CProto.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CProto::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CProto.body)
}
 void CProto::set_body(const char* value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CProto.body)
}
 void CProto::set_body(const char* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CProto.body)
}
 ::std::string* CProto::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:CProto.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CProto::release_body() {
  clear_has_body();
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CProto::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:CProto.body)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CP1::kAFieldNumber;
const int CP1::kBFieldNumber;
const int CP1::kCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CP1::CP1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CP1)
}

void CP1::InitAsDefaultInstance() {
}

CP1::CP1(const CP1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CP1)
}

void CP1::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  a_ = 0;
  b_ = GOOGLE_LONGLONG(0);
  c_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CP1::~CP1() {
  // @@protoc_insertion_point(destructor:CP1)
  SharedDtor();
}

void CP1::SharedDtor() {
  c_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CP1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CP1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CP1_descriptor_;
}

const CP1& CP1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

CP1* CP1::default_instance_ = NULL;

CP1* CP1::New(::google::protobuf::Arena* arena) const {
  CP1* n = new CP1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CP1::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    a_ = 0;
    b_ = GOOGLE_LONGLONG(0);
    if (has_c()) {
      c_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CP1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CP1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 a = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_b;
        break;
      }

      // required int64 b = 2;
      case 2: {
        if (tag == 16) {
         parse_b:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &b_)));
          set_has_b();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_c;
        break;
      }

      // required string c = 3;
      case 3: {
        if (tag == 26) {
         parse_c:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_c()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->c().data(), this->c().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CP1.c");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CP1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CP1)
  return false;
#undef DO_
}

void CP1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CP1)
  // required int32 a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // required int64 b = 2;
  if (has_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->b(), output);
  }

  // required string c = 3;
  if (has_c()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->c().data(), this->c().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CP1.c");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->c(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CP1)
}

::google::protobuf::uint8* CP1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CP1)
  // required int32 a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // required int64 b = 2;
  if (has_b()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->b(), target);
  }

  // required string c = 3;
  if (has_c()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->c().data(), this->c().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CP1.c");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->c(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CP1)
  return target;
}

int CP1::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_a()) {
    // required int32 a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  if (has_b()) {
    // required int64 b = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->b());
  }

  if (has_c()) {
    // required string c = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->c());
  }

  return total_size;
}
int CP1::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());

    // required int64 b = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->b());

    // required string c = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->c());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CP1::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CP1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CP1>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CP1::MergeFrom(const CP1& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_b()) {
      set_b(from.b());
    }
    if (from.has_c()) {
      set_has_c();
      c_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.c_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CP1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CP1::CopyFrom(const CP1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CP1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void CP1::Swap(CP1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CP1::InternalSwap(CP1* other) {
  std::swap(a_, other->a_);
  std::swap(b_, other->b_);
  c_.Swap(&other->c_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CP1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CP1_descriptor_;
  metadata.reflection = CP1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CP1

// required int32 a = 1;
bool CP1::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CP1::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void CP1::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void CP1::clear_a() {
  a_ = 0;
  clear_has_a();
}
 ::google::protobuf::int32 CP1::a() const {
  // @@protoc_insertion_point(field_get:CP1.a)
  return a_;
}
 void CP1::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:CP1.a)
}

// required int64 b = 2;
bool CP1::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CP1::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
void CP1::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
void CP1::clear_b() {
  b_ = GOOGLE_LONGLONG(0);
  clear_has_b();
}
 ::google::protobuf::int64 CP1::b() const {
  // @@protoc_insertion_point(field_get:CP1.b)
  return b_;
}
 void CP1::set_b(::google::protobuf::int64 value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:CP1.b)
}

// required string c = 3;
bool CP1::has_c() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CP1::set_has_c() {
  _has_bits_[0] |= 0x00000004u;
}
void CP1::clear_has_c() {
  _has_bits_[0] &= ~0x00000004u;
}
void CP1::clear_c() {
  c_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_c();
}
 const ::std::string& CP1::c() const {
  // @@protoc_insertion_point(field_get:CP1.c)
  return c_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CP1::set_c(const ::std::string& value) {
  set_has_c();
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CP1.c)
}
 void CP1::set_c(const char* value) {
  set_has_c();
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CP1.c)
}
 void CP1::set_c(const char* value, size_t size) {
  set_has_c();
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CP1.c)
}
 ::std::string* CP1::mutable_c() {
  set_has_c();
  // @@protoc_insertion_point(field_mutable:CP1.c)
  return c_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CP1::release_c() {
  clear_has_c();
  return c_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CP1::set_allocated_c(::std::string* c) {
  if (c != NULL) {
    set_has_c();
  } else {
    clear_has_c();
  }
  c_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), c);
  // @@protoc_insertion_point(field_set_allocated:CP1.c)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CP2::kAFieldNumber;
const int CP2::kBFieldNumber;
const int CP2::kCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CP2::CP2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CP2)
}

void CP2::InitAsDefaultInstance() {
}

CP2::CP2(const CP2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CP2)
}

void CP2::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  b_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  c_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CP2::~CP2() {
  // @@protoc_insertion_point(destructor:CP2)
  SharedDtor();
}

void CP2::SharedDtor() {
  a_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  b_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CP2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CP2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CP2_descriptor_;
}

const CP2& CP2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

CP2* CP2::default_instance_ = NULL;

CP2* CP2::New(::google::protobuf::Arena* arena) const {
  CP2* n = new CP2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CP2::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_a()) {
      a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_b()) {
      b_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    c_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CP2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CP2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string a = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_a()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->a().data(), this->a().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CP2.a");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_b;
        break;
      }

      // required string b = 2;
      case 2: {
        if (tag == 18) {
         parse_b:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_b()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->b().data(), this->b().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CP2.b");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_c;
        break;
      }

      // required int64 c = 3;
      case 3: {
        if (tag == 24) {
         parse_c:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &c_)));
          set_has_c();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CP2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CP2)
  return false;
#undef DO_
}

void CP2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CP2)
  // required string a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a().data(), this->a().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CP2.a");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->a(), output);
  }

  // required string b = 2;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CP2.b");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->b(), output);
  }

  // required int64 c = 3;
  if (has_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->c(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CP2)
}

::google::protobuf::uint8* CP2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CP2)
  // required string a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a().data(), this->a().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CP2.a");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->a(), target);
  }

  // required string b = 2;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CP2.b");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->b(), target);
  }

  // required int64 c = 3;
  if (has_c()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->c(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CP2)
  return target;
}

int CP2::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_a()) {
    // required string a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->a());
  }

  if (has_b()) {
    // required string b = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->b());
  }

  if (has_c()) {
    // required int64 c = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->c());
  }

  return total_size;
}
int CP2::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->a());

    // required string b = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->b());

    // required int64 c = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->c());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CP2::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CP2* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CP2>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CP2::MergeFrom(const CP2& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_has_a();
      a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_);
    }
    if (from.has_b()) {
      set_has_b();
      b_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.b_);
    }
    if (from.has_c()) {
      set_c(from.c());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CP2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CP2::CopyFrom(const CP2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CP2::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void CP2::Swap(CP2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CP2::InternalSwap(CP2* other) {
  a_.Swap(&other->a_);
  b_.Swap(&other->b_);
  std::swap(c_, other->c_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CP2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CP2_descriptor_;
  metadata.reflection = CP2_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CP2

// required string a = 1;
bool CP2::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CP2::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void CP2::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void CP2::clear_a() {
  a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_a();
}
 const ::std::string& CP2::a() const {
  // @@protoc_insertion_point(field_get:CP2.a)
  return a_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CP2::set_a(const ::std::string& value) {
  set_has_a();
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CP2.a)
}
 void CP2::set_a(const char* value) {
  set_has_a();
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CP2.a)
}
 void CP2::set_a(const char* value, size_t size) {
  set_has_a();
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CP2.a)
}
 ::std::string* CP2::mutable_a() {
  set_has_a();
  // @@protoc_insertion_point(field_mutable:CP2.a)
  return a_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CP2::release_a() {
  clear_has_a();
  return a_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CP2::set_allocated_a(::std::string* a) {
  if (a != NULL) {
    set_has_a();
  } else {
    clear_has_a();
  }
  a_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), a);
  // @@protoc_insertion_point(field_set_allocated:CP2.a)
}

// required string b = 2;
bool CP2::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CP2::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
void CP2::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
void CP2::clear_b() {
  b_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_b();
}
 const ::std::string& CP2::b() const {
  // @@protoc_insertion_point(field_get:CP2.b)
  return b_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CP2::set_b(const ::std::string& value) {
  set_has_b();
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CP2.b)
}
 void CP2::set_b(const char* value) {
  set_has_b();
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CP2.b)
}
 void CP2::set_b(const char* value, size_t size) {
  set_has_b();
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CP2.b)
}
 ::std::string* CP2::mutable_b() {
  set_has_b();
  // @@protoc_insertion_point(field_mutable:CP2.b)
  return b_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CP2::release_b() {
  clear_has_b();
  return b_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CP2::set_allocated_b(::std::string* b) {
  if (b != NULL) {
    set_has_b();
  } else {
    clear_has_b();
  }
  b_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), b);
  // @@protoc_insertion_point(field_set_allocated:CP2.b)
}

// required int64 c = 3;
bool CP2::has_c() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CP2::set_has_c() {
  _has_bits_[0] |= 0x00000004u;
}
void CP2::clear_has_c() {
  _has_bits_[0] &= ~0x00000004u;
}
void CP2::clear_c() {
  c_ = GOOGLE_LONGLONG(0);
  clear_has_c();
}
 ::google::protobuf::int64 CP2::c() const {
  // @@protoc_insertion_point(field_get:CP2.c)
  return c_;
}
 void CP2::set_c(::google::protobuf::int64 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:CP2.c)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EchoProto::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EchoProto::EchoProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EchoProto)
}

void EchoProto::InitAsDefaultInstance() {
}

EchoProto::EchoProto(const EchoProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EchoProto)
}

void EchoProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EchoProto::~EchoProto() {
  // @@protoc_insertion_point(destructor:EchoProto)
  SharedDtor();
}

void EchoProto::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EchoProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EchoProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EchoProto_descriptor_;
}

const EchoProto& EchoProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

EchoProto* EchoProto::default_instance_ = NULL;

EchoProto* EchoProto::New(::google::protobuf::Arena* arena) const {
  EchoProto* n = new EchoProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EchoProto::Clear() {
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EchoProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EchoProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "EchoProto.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EchoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EchoProto)
  return false;
#undef DO_
}

void EchoProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EchoProto)
  // required string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "EchoProto.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EchoProto)
}

::google::protobuf::uint8* EchoProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EchoProto)
  // required string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "EchoProto.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EchoProto)
  return target;
}

int EchoProto::ByteSize() const {
  int total_size = 0;

  // required string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EchoProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EchoProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EchoProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EchoProto::MergeFrom(const EchoProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EchoProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EchoProto::CopyFrom(const EchoProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void EchoProto::Swap(EchoProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EchoProto::InternalSwap(EchoProto* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EchoProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EchoProto_descriptor_;
  metadata.reflection = EchoProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EchoProto

// required string data = 1;
bool EchoProto::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EchoProto::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void EchoProto::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void EchoProto::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& EchoProto::data() const {
  // @@protoc_insertion_point(field_get:EchoProto.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EchoProto::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EchoProto.data)
}
 void EchoProto::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EchoProto.data)
}
 void EchoProto::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EchoProto.data)
}
 ::std::string* EchoProto::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:EchoProto.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EchoProto::release_data() {
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EchoProto::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:EchoProto.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSetCamaraSeqReqProto::kSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSetCamaraSeqReqProto::CSetCamaraSeqReqProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSetCamaraSeqReqProto)
}

void CSetCamaraSeqReqProto::InitAsDefaultInstance() {
}

CSetCamaraSeqReqProto::CSetCamaraSeqReqProto(const CSetCamaraSeqReqProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSetCamaraSeqReqProto)
}

void CSetCamaraSeqReqProto::SharedCtor() {
  _cached_size_ = 0;
  seq_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSetCamaraSeqReqProto::~CSetCamaraSeqReqProto() {
  // @@protoc_insertion_point(destructor:CSetCamaraSeqReqProto)
  SharedDtor();
}

void CSetCamaraSeqReqProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSetCamaraSeqReqProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSetCamaraSeqReqProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSetCamaraSeqReqProto_descriptor_;
}

const CSetCamaraSeqReqProto& CSetCamaraSeqReqProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

CSetCamaraSeqReqProto* CSetCamaraSeqReqProto::default_instance_ = NULL;

CSetCamaraSeqReqProto* CSetCamaraSeqReqProto::New(::google::protobuf::Arena* arena) const {
  CSetCamaraSeqReqProto* n = new CSetCamaraSeqReqProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSetCamaraSeqReqProto::Clear() {
  seq_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CSetCamaraSeqReqProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSetCamaraSeqReqProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seq = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_)));
          set_has_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSetCamaraSeqReqProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSetCamaraSeqReqProto)
  return false;
#undef DO_
}

void CSetCamaraSeqReqProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSetCamaraSeqReqProto)
  // required uint32 seq = 1;
  if (has_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seq(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSetCamaraSeqReqProto)
}

::google::protobuf::uint8* CSetCamaraSeqReqProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSetCamaraSeqReqProto)
  // required uint32 seq = 1;
  if (has_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seq(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSetCamaraSeqReqProto)
  return target;
}

int CSetCamaraSeqReqProto::ByteSize() const {
  int total_size = 0;

  // required uint32 seq = 1;
  if (has_seq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seq());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSetCamaraSeqReqProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CSetCamaraSeqReqProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CSetCamaraSeqReqProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSetCamaraSeqReqProto::MergeFrom(const CSetCamaraSeqReqProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seq()) {
      set_seq(from.seq());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CSetCamaraSeqReqProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSetCamaraSeqReqProto::CopyFrom(const CSetCamaraSeqReqProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSetCamaraSeqReqProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CSetCamaraSeqReqProto::Swap(CSetCamaraSeqReqProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSetCamaraSeqReqProto::InternalSwap(CSetCamaraSeqReqProto* other) {
  std::swap(seq_, other->seq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSetCamaraSeqReqProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSetCamaraSeqReqProto_descriptor_;
  metadata.reflection = CSetCamaraSeqReqProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CSetCamaraSeqReqProto

// required uint32 seq = 1;
bool CSetCamaraSeqReqProto::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CSetCamaraSeqReqProto::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
void CSetCamaraSeqReqProto::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
void CSetCamaraSeqReqProto::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
 ::google::protobuf::uint32 CSetCamaraSeqReqProto::seq() const {
  // @@protoc_insertion_point(field_get:CSetCamaraSeqReqProto.seq)
  return seq_;
}
 void CSetCamaraSeqReqProto::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:CSetCamaraSeqReqProto.seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SSetCamaraSeqRepProto::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SSetCamaraSeqRepProto::SSetCamaraSeqRepProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SSetCamaraSeqRepProto)
}

void SSetCamaraSeqRepProto::InitAsDefaultInstance() {
}

SSetCamaraSeqRepProto::SSetCamaraSeqRepProto(const SSetCamaraSeqRepProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SSetCamaraSeqRepProto)
}

void SSetCamaraSeqRepProto::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SSetCamaraSeqRepProto::~SSetCamaraSeqRepProto() {
  // @@protoc_insertion_point(destructor:SSetCamaraSeqRepProto)
  SharedDtor();
}

void SSetCamaraSeqRepProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SSetCamaraSeqRepProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SSetCamaraSeqRepProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SSetCamaraSeqRepProto_descriptor_;
}

const SSetCamaraSeqRepProto& SSetCamaraSeqRepProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

SSetCamaraSeqRepProto* SSetCamaraSeqRepProto::default_instance_ = NULL;

SSetCamaraSeqRepProto* SSetCamaraSeqRepProto::New(::google::protobuf::Arena* arena) const {
  SSetCamaraSeqRepProto* n = new SSetCamaraSeqRepProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SSetCamaraSeqRepProto::Clear() {
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SSetCamaraSeqRepProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SSetCamaraSeqRepProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SSetCamaraSeqRepProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SSetCamaraSeqRepProto)
  return false;
#undef DO_
}

void SSetCamaraSeqRepProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SSetCamaraSeqRepProto)
  // required uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SSetCamaraSeqRepProto)
}

::google::protobuf::uint8* SSetCamaraSeqRepProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSetCamaraSeqRepProto)
  // required uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSetCamaraSeqRepProto)
  return target;
}

int SSetCamaraSeqRepProto::ByteSize() const {
  int total_size = 0;

  // required uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SSetCamaraSeqRepProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SSetCamaraSeqRepProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SSetCamaraSeqRepProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SSetCamaraSeqRepProto::MergeFrom(const SSetCamaraSeqRepProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SSetCamaraSeqRepProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSetCamaraSeqRepProto::CopyFrom(const SSetCamaraSeqRepProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSetCamaraSeqRepProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SSetCamaraSeqRepProto::Swap(SSetCamaraSeqRepProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SSetCamaraSeqRepProto::InternalSwap(SSetCamaraSeqRepProto* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SSetCamaraSeqRepProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SSetCamaraSeqRepProto_descriptor_;
  metadata.reflection = SSetCamaraSeqRepProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SSetCamaraSeqRepProto

// required uint32 result = 1;
bool SSetCamaraSeqRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SSetCamaraSeqRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SSetCamaraSeqRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SSetCamaraSeqRepProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
 ::google::protobuf::uint32 SSetCamaraSeqRepProto::result() const {
  // @@protoc_insertion_point(field_get:SSetCamaraSeqRepProto.result)
  return result_;
}
 void SSetCamaraSeqRepProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SSetCamaraSeqRepProto.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSendImageProcessDataReqProto::kIcCardNoFieldNumber;
const int CSendImageProcessDataReqProto::kImageSeqFieldNumber;
const int CSendImageProcessDataReqProto::kXFieldNumber;
const int CSendImageProcessDataReqProto::kYFieldNumber;
const int CSendImageProcessDataReqProto::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSendImageProcessDataReqProto::CSendImageProcessDataReqProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSendImageProcessDataReqProto)
}

void CSendImageProcessDataReqProto::InitAsDefaultInstance() {
}

CSendImageProcessDataReqProto::CSendImageProcessDataReqProto(const CSendImageProcessDataReqProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSendImageProcessDataReqProto)
}

void CSendImageProcessDataReqProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ic_card_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_seq_ = 0;
  x_ = 0;
  y_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSendImageProcessDataReqProto::~CSendImageProcessDataReqProto() {
  // @@protoc_insertion_point(destructor:CSendImageProcessDataReqProto)
  SharedDtor();
}

void CSendImageProcessDataReqProto::SharedDtor() {
  ic_card_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CSendImageProcessDataReqProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSendImageProcessDataReqProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSendImageProcessDataReqProto_descriptor_;
}

const CSendImageProcessDataReqProto& CSendImageProcessDataReqProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

CSendImageProcessDataReqProto* CSendImageProcessDataReqProto::default_instance_ = NULL;

CSendImageProcessDataReqProto* CSendImageProcessDataReqProto::New(::google::protobuf::Arena* arena) const {
  CSendImageProcessDataReqProto* n = new CSendImageProcessDataReqProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSendImageProcessDataReqProto::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CSendImageProcessDataReqProto*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(image_seq_, x_);
    if (has_ic_card_no()) {
      ic_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    y_ = 0;
    if (has_data()) {
      data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CSendImageProcessDataReqProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSendImageProcessDataReqProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ic_card_no = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ic_card_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ic_card_no().data(), this->ic_card_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSendImageProcessDataReqProto.ic_card_no");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_image_seq;
        break;
      }

      // required int32 image_seq = 2;
      case 2: {
        if (tag == 16) {
         parse_image_seq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &image_seq_)));
          set_has_image_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_x;
        break;
      }

      // required int32 x = 3;
      case 3: {
        if (tag == 24) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_y;
        break;
      }

      // required int32 y = 4;
      case 4: {
        if (tag == 32) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_data;
        break;
      }

      // required bytes data = 5;
      case 5: {
        if (tag == 42) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSendImageProcessDataReqProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSendImageProcessDataReqProto)
  return false;
#undef DO_
}

void CSendImageProcessDataReqProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSendImageProcessDataReqProto)
  // required string ic_card_no = 1;
  if (has_ic_card_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ic_card_no().data(), this->ic_card_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSendImageProcessDataReqProto.ic_card_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ic_card_no(), output);
  }

  // required int32 image_seq = 2;
  if (has_image_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->image_seq(), output);
  }

  // required int32 x = 3;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->x(), output);
  }

  // required int32 y = 4;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->y(), output);
  }

  // required bytes data = 5;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSendImageProcessDataReqProto)
}

::google::protobuf::uint8* CSendImageProcessDataReqProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSendImageProcessDataReqProto)
  // required string ic_card_no = 1;
  if (has_ic_card_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ic_card_no().data(), this->ic_card_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSendImageProcessDataReqProto.ic_card_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ic_card_no(), target);
  }

  // required int32 image_seq = 2;
  if (has_image_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->image_seq(), target);
  }

  // required int32 x = 3;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->x(), target);
  }

  // required int32 y = 4;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->y(), target);
  }

  // required bytes data = 5;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSendImageProcessDataReqProto)
  return target;
}

int CSendImageProcessDataReqProto::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_ic_card_no()) {
    // required string ic_card_no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ic_card_no());
  }

  if (has_image_seq()) {
    // required int32 image_seq = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->image_seq());
  }

  if (has_x()) {
    // required int32 x = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  if (has_data()) {
    // required bytes data = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  return total_size;
}
int CSendImageProcessDataReqProto::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string ic_card_no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ic_card_no());

    // required int32 image_seq = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->image_seq());

    // required int32 x = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

    // required bytes data = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSendImageProcessDataReqProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CSendImageProcessDataReqProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CSendImageProcessDataReqProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSendImageProcessDataReqProto::MergeFrom(const CSendImageProcessDataReqProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ic_card_no()) {
      set_has_ic_card_no();
      ic_card_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ic_card_no_);
    }
    if (from.has_image_seq()) {
      set_image_seq(from.image_seq());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CSendImageProcessDataReqProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSendImageProcessDataReqProto::CopyFrom(const CSendImageProcessDataReqProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSendImageProcessDataReqProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void CSendImageProcessDataReqProto::Swap(CSendImageProcessDataReqProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSendImageProcessDataReqProto::InternalSwap(CSendImageProcessDataReqProto* other) {
  ic_card_no_.Swap(&other->ic_card_no_);
  std::swap(image_seq_, other->image_seq_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSendImageProcessDataReqProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSendImageProcessDataReqProto_descriptor_;
  metadata.reflection = CSendImageProcessDataReqProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CSendImageProcessDataReqProto

// required string ic_card_no = 1;
bool CSendImageProcessDataReqProto::has_ic_card_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CSendImageProcessDataReqProto::set_has_ic_card_no() {
  _has_bits_[0] |= 0x00000001u;
}
void CSendImageProcessDataReqProto::clear_has_ic_card_no() {
  _has_bits_[0] &= ~0x00000001u;
}
void CSendImageProcessDataReqProto::clear_ic_card_no() {
  ic_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ic_card_no();
}
 const ::std::string& CSendImageProcessDataReqProto::ic_card_no() const {
  // @@protoc_insertion_point(field_get:CSendImageProcessDataReqProto.ic_card_no)
  return ic_card_no_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSendImageProcessDataReqProto::set_ic_card_no(const ::std::string& value) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSendImageProcessDataReqProto.ic_card_no)
}
 void CSendImageProcessDataReqProto::set_ic_card_no(const char* value) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSendImageProcessDataReqProto.ic_card_no)
}
 void CSendImageProcessDataReqProto::set_ic_card_no(const char* value, size_t size) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSendImageProcessDataReqProto.ic_card_no)
}
 ::std::string* CSendImageProcessDataReqProto::mutable_ic_card_no() {
  set_has_ic_card_no();
  // @@protoc_insertion_point(field_mutable:CSendImageProcessDataReqProto.ic_card_no)
  return ic_card_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CSendImageProcessDataReqProto::release_ic_card_no() {
  clear_has_ic_card_no();
  return ic_card_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSendImageProcessDataReqProto::set_allocated_ic_card_no(::std::string* ic_card_no) {
  if (ic_card_no != NULL) {
    set_has_ic_card_no();
  } else {
    clear_has_ic_card_no();
  }
  ic_card_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ic_card_no);
  // @@protoc_insertion_point(field_set_allocated:CSendImageProcessDataReqProto.ic_card_no)
}

// required int32 image_seq = 2;
bool CSendImageProcessDataReqProto::has_image_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CSendImageProcessDataReqProto::set_has_image_seq() {
  _has_bits_[0] |= 0x00000002u;
}
void CSendImageProcessDataReqProto::clear_has_image_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
void CSendImageProcessDataReqProto::clear_image_seq() {
  image_seq_ = 0;
  clear_has_image_seq();
}
 ::google::protobuf::int32 CSendImageProcessDataReqProto::image_seq() const {
  // @@protoc_insertion_point(field_get:CSendImageProcessDataReqProto.image_seq)
  return image_seq_;
}
 void CSendImageProcessDataReqProto::set_image_seq(::google::protobuf::int32 value) {
  set_has_image_seq();
  image_seq_ = value;
  // @@protoc_insertion_point(field_set:CSendImageProcessDataReqProto.image_seq)
}

// required int32 x = 3;
bool CSendImageProcessDataReqProto::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CSendImageProcessDataReqProto::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
void CSendImageProcessDataReqProto::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
void CSendImageProcessDataReqProto::clear_x() {
  x_ = 0;
  clear_has_x();
}
 ::google::protobuf::int32 CSendImageProcessDataReqProto::x() const {
  // @@protoc_insertion_point(field_get:CSendImageProcessDataReqProto.x)
  return x_;
}
 void CSendImageProcessDataReqProto::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:CSendImageProcessDataReqProto.x)
}

// required int32 y = 4;
bool CSendImageProcessDataReqProto::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CSendImageProcessDataReqProto::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
void CSendImageProcessDataReqProto::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void CSendImageProcessDataReqProto::clear_y() {
  y_ = 0;
  clear_has_y();
}
 ::google::protobuf::int32 CSendImageProcessDataReqProto::y() const {
  // @@protoc_insertion_point(field_get:CSendImageProcessDataReqProto.y)
  return y_;
}
 void CSendImageProcessDataReqProto::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:CSendImageProcessDataReqProto.y)
}

// required bytes data = 5;
bool CSendImageProcessDataReqProto::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CSendImageProcessDataReqProto::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
void CSendImageProcessDataReqProto::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
void CSendImageProcessDataReqProto::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& CSendImageProcessDataReqProto::data() const {
  // @@protoc_insertion_point(field_get:CSendImageProcessDataReqProto.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSendImageProcessDataReqProto::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSendImageProcessDataReqProto.data)
}
 void CSendImageProcessDataReqProto::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSendImageProcessDataReqProto.data)
}
 void CSendImageProcessDataReqProto::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSendImageProcessDataReqProto.data)
}
 ::std::string* CSendImageProcessDataReqProto::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:CSendImageProcessDataReqProto.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CSendImageProcessDataReqProto::release_data() {
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSendImageProcessDataReqProto::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:CSendImageProcessDataReqProto.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SSendImageProcessDataRepProto::kIcCardNoFieldNumber;
const int SSendImageProcessDataRepProto::kImageSeqFieldNumber;
const int SSendImageProcessDataRepProto::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SSendImageProcessDataRepProto::SSendImageProcessDataRepProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SSendImageProcessDataRepProto)
}

void SSendImageProcessDataRepProto::InitAsDefaultInstance() {
}

SSendImageProcessDataRepProto::SSendImageProcessDataRepProto(const SSendImageProcessDataRepProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SSendImageProcessDataRepProto)
}

void SSendImageProcessDataRepProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ic_card_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_seq_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SSendImageProcessDataRepProto::~SSendImageProcessDataRepProto() {
  // @@protoc_insertion_point(destructor:SSendImageProcessDataRepProto)
  SharedDtor();
}

void SSendImageProcessDataRepProto::SharedDtor() {
  ic_card_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SSendImageProcessDataRepProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SSendImageProcessDataRepProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SSendImageProcessDataRepProto_descriptor_;
}

const SSendImageProcessDataRepProto& SSendImageProcessDataRepProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

SSendImageProcessDataRepProto* SSendImageProcessDataRepProto::default_instance_ = NULL;

SSendImageProcessDataRepProto* SSendImageProcessDataRepProto::New(::google::protobuf::Arena* arena) const {
  SSendImageProcessDataRepProto* n = new SSendImageProcessDataRepProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SSendImageProcessDataRepProto::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SSendImageProcessDataRepProto*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(image_seq_, result_);
    if (has_ic_card_no()) {
      ic_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SSendImageProcessDataRepProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SSendImageProcessDataRepProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ic_card_no = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ic_card_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ic_card_no().data(), this->ic_card_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SSendImageProcessDataRepProto.ic_card_no");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_image_seq;
        break;
      }

      // required int32 image_seq = 2;
      case 2: {
        if (tag == 16) {
         parse_image_seq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &image_seq_)));
          set_has_image_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_result;
        break;
      }

      // required int32 result = 3;
      case 3: {
        if (tag == 24) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SSendImageProcessDataRepProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SSendImageProcessDataRepProto)
  return false;
#undef DO_
}

void SSendImageProcessDataRepProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SSendImageProcessDataRepProto)
  // required string ic_card_no = 1;
  if (has_ic_card_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ic_card_no().data(), this->ic_card_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SSendImageProcessDataRepProto.ic_card_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ic_card_no(), output);
  }

  // required int32 image_seq = 2;
  if (has_image_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->image_seq(), output);
  }

  // required int32 result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SSendImageProcessDataRepProto)
}

::google::protobuf::uint8* SSendImageProcessDataRepProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSendImageProcessDataRepProto)
  // required string ic_card_no = 1;
  if (has_ic_card_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ic_card_no().data(), this->ic_card_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SSendImageProcessDataRepProto.ic_card_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ic_card_no(), target);
  }

  // required int32 image_seq = 2;
  if (has_image_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->image_seq(), target);
  }

  // required int32 result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSendImageProcessDataRepProto)
  return target;
}

int SSendImageProcessDataRepProto::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_ic_card_no()) {
    // required string ic_card_no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ic_card_no());
  }

  if (has_image_seq()) {
    // required int32 image_seq = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->image_seq());
  }

  if (has_result()) {
    // required int32 result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  return total_size;
}
int SSendImageProcessDataRepProto::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string ic_card_no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ic_card_no());

    // required int32 image_seq = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->image_seq());

    // required int32 result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SSendImageProcessDataRepProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SSendImageProcessDataRepProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SSendImageProcessDataRepProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SSendImageProcessDataRepProto::MergeFrom(const SSendImageProcessDataRepProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ic_card_no()) {
      set_has_ic_card_no();
      ic_card_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ic_card_no_);
    }
    if (from.has_image_seq()) {
      set_image_seq(from.image_seq());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SSendImageProcessDataRepProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSendImageProcessDataRepProto::CopyFrom(const SSendImageProcessDataRepProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSendImageProcessDataRepProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void SSendImageProcessDataRepProto::Swap(SSendImageProcessDataRepProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SSendImageProcessDataRepProto::InternalSwap(SSendImageProcessDataRepProto* other) {
  ic_card_no_.Swap(&other->ic_card_no_);
  std::swap(image_seq_, other->image_seq_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SSendImageProcessDataRepProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SSendImageProcessDataRepProto_descriptor_;
  metadata.reflection = SSendImageProcessDataRepProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SSendImageProcessDataRepProto

// required string ic_card_no = 1;
bool SSendImageProcessDataRepProto::has_ic_card_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SSendImageProcessDataRepProto::set_has_ic_card_no() {
  _has_bits_[0] |= 0x00000001u;
}
void SSendImageProcessDataRepProto::clear_has_ic_card_no() {
  _has_bits_[0] &= ~0x00000001u;
}
void SSendImageProcessDataRepProto::clear_ic_card_no() {
  ic_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ic_card_no();
}
 const ::std::string& SSendImageProcessDataRepProto::ic_card_no() const {
  // @@protoc_insertion_point(field_get:SSendImageProcessDataRepProto.ic_card_no)
  return ic_card_no_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SSendImageProcessDataRepProto::set_ic_card_no(const ::std::string& value) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SSendImageProcessDataRepProto.ic_card_no)
}
 void SSendImageProcessDataRepProto::set_ic_card_no(const char* value) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SSendImageProcessDataRepProto.ic_card_no)
}
 void SSendImageProcessDataRepProto::set_ic_card_no(const char* value, size_t size) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SSendImageProcessDataRepProto.ic_card_no)
}
 ::std::string* SSendImageProcessDataRepProto::mutable_ic_card_no() {
  set_has_ic_card_no();
  // @@protoc_insertion_point(field_mutable:SSendImageProcessDataRepProto.ic_card_no)
  return ic_card_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SSendImageProcessDataRepProto::release_ic_card_no() {
  clear_has_ic_card_no();
  return ic_card_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SSendImageProcessDataRepProto::set_allocated_ic_card_no(::std::string* ic_card_no) {
  if (ic_card_no != NULL) {
    set_has_ic_card_no();
  } else {
    clear_has_ic_card_no();
  }
  ic_card_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ic_card_no);
  // @@protoc_insertion_point(field_set_allocated:SSendImageProcessDataRepProto.ic_card_no)
}

// required int32 image_seq = 2;
bool SSendImageProcessDataRepProto::has_image_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SSendImageProcessDataRepProto::set_has_image_seq() {
  _has_bits_[0] |= 0x00000002u;
}
void SSendImageProcessDataRepProto::clear_has_image_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
void SSendImageProcessDataRepProto::clear_image_seq() {
  image_seq_ = 0;
  clear_has_image_seq();
}
 ::google::protobuf::int32 SSendImageProcessDataRepProto::image_seq() const {
  // @@protoc_insertion_point(field_get:SSendImageProcessDataRepProto.image_seq)
  return image_seq_;
}
 void SSendImageProcessDataRepProto::set_image_seq(::google::protobuf::int32 value) {
  set_has_image_seq();
  image_seq_ = value;
  // @@protoc_insertion_point(field_set:SSendImageProcessDataRepProto.image_seq)
}

// required int32 result = 3;
bool SSendImageProcessDataRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SSendImageProcessDataRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void SSendImageProcessDataRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void SSendImageProcessDataRepProto::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 SSendImageProcessDataRepProto::result() const {
  // @@protoc_insertion_point(field_get:SSendImageProcessDataRepProto.result)
  return result_;
}
 void SSendImageProcessDataRepProto::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SSendImageProcessDataRepProto.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CRegisterCpsdReqProto::kSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CRegisterCpsdReqProto::CRegisterCpsdReqProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CRegisterCpsdReqProto)
}

void CRegisterCpsdReqProto::InitAsDefaultInstance() {
}

CRegisterCpsdReqProto::CRegisterCpsdReqProto(const CRegisterCpsdReqProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CRegisterCpsdReqProto)
}

void CRegisterCpsdReqProto::SharedCtor() {
  _cached_size_ = 0;
  seq_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CRegisterCpsdReqProto::~CRegisterCpsdReqProto() {
  // @@protoc_insertion_point(destructor:CRegisterCpsdReqProto)
  SharedDtor();
}

void CRegisterCpsdReqProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CRegisterCpsdReqProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CRegisterCpsdReqProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CRegisterCpsdReqProto_descriptor_;
}

const CRegisterCpsdReqProto& CRegisterCpsdReqProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

CRegisterCpsdReqProto* CRegisterCpsdReqProto::default_instance_ = NULL;

CRegisterCpsdReqProto* CRegisterCpsdReqProto::New(::google::protobuf::Arena* arena) const {
  CRegisterCpsdReqProto* n = new CRegisterCpsdReqProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CRegisterCpsdReqProto::Clear() {
  seq_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CRegisterCpsdReqProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CRegisterCpsdReqProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seq = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_)));
          set_has_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CRegisterCpsdReqProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CRegisterCpsdReqProto)
  return false;
#undef DO_
}

void CRegisterCpsdReqProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CRegisterCpsdReqProto)
  // required uint32 seq = 1;
  if (has_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seq(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CRegisterCpsdReqProto)
}

::google::protobuf::uint8* CRegisterCpsdReqProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRegisterCpsdReqProto)
  // required uint32 seq = 1;
  if (has_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seq(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRegisterCpsdReqProto)
  return target;
}

int CRegisterCpsdReqProto::ByteSize() const {
  int total_size = 0;

  // required uint32 seq = 1;
  if (has_seq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seq());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CRegisterCpsdReqProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CRegisterCpsdReqProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CRegisterCpsdReqProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CRegisterCpsdReqProto::MergeFrom(const CRegisterCpsdReqProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seq()) {
      set_seq(from.seq());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CRegisterCpsdReqProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CRegisterCpsdReqProto::CopyFrom(const CRegisterCpsdReqProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CRegisterCpsdReqProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CRegisterCpsdReqProto::Swap(CRegisterCpsdReqProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CRegisterCpsdReqProto::InternalSwap(CRegisterCpsdReqProto* other) {
  std::swap(seq_, other->seq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CRegisterCpsdReqProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CRegisterCpsdReqProto_descriptor_;
  metadata.reflection = CRegisterCpsdReqProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CRegisterCpsdReqProto

// required uint32 seq = 1;
bool CRegisterCpsdReqProto::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CRegisterCpsdReqProto::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
void CRegisterCpsdReqProto::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
void CRegisterCpsdReqProto::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
 ::google::protobuf::uint32 CRegisterCpsdReqProto::seq() const {
  // @@protoc_insertion_point(field_get:CRegisterCpsdReqProto.seq)
  return seq_;
}
 void CRegisterCpsdReqProto::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:CRegisterCpsdReqProto.seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SRegisterCpsdRepProto::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SRegisterCpsdRepProto::SRegisterCpsdRepProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SRegisterCpsdRepProto)
}

void SRegisterCpsdRepProto::InitAsDefaultInstance() {
}

SRegisterCpsdRepProto::SRegisterCpsdRepProto(const SRegisterCpsdRepProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SRegisterCpsdRepProto)
}

void SRegisterCpsdRepProto::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SRegisterCpsdRepProto::~SRegisterCpsdRepProto() {
  // @@protoc_insertion_point(destructor:SRegisterCpsdRepProto)
  SharedDtor();
}

void SRegisterCpsdRepProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SRegisterCpsdRepProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SRegisterCpsdRepProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SRegisterCpsdRepProto_descriptor_;
}

const SRegisterCpsdRepProto& SRegisterCpsdRepProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

SRegisterCpsdRepProto* SRegisterCpsdRepProto::default_instance_ = NULL;

SRegisterCpsdRepProto* SRegisterCpsdRepProto::New(::google::protobuf::Arena* arena) const {
  SRegisterCpsdRepProto* n = new SRegisterCpsdRepProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SRegisterCpsdRepProto::Clear() {
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SRegisterCpsdRepProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SRegisterCpsdRepProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SRegisterCpsdRepProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SRegisterCpsdRepProto)
  return false;
#undef DO_
}

void SRegisterCpsdRepProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SRegisterCpsdRepProto)
  // required uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SRegisterCpsdRepProto)
}

::google::protobuf::uint8* SRegisterCpsdRepProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SRegisterCpsdRepProto)
  // required uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SRegisterCpsdRepProto)
  return target;
}

int SRegisterCpsdRepProto::ByteSize() const {
  int total_size = 0;

  // required uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SRegisterCpsdRepProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SRegisterCpsdRepProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SRegisterCpsdRepProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SRegisterCpsdRepProto::MergeFrom(const SRegisterCpsdRepProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SRegisterCpsdRepProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SRegisterCpsdRepProto::CopyFrom(const SRegisterCpsdRepProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SRegisterCpsdRepProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SRegisterCpsdRepProto::Swap(SRegisterCpsdRepProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SRegisterCpsdRepProto::InternalSwap(SRegisterCpsdRepProto* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SRegisterCpsdRepProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SRegisterCpsdRepProto_descriptor_;
  metadata.reflection = SRegisterCpsdRepProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SRegisterCpsdRepProto

// required uint32 result = 1;
bool SRegisterCpsdRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SRegisterCpsdRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SRegisterCpsdRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SRegisterCpsdRepProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
 ::google::protobuf::uint32 SRegisterCpsdRepProto::result() const {
  // @@protoc_insertion_point(field_get:SRegisterCpsdRepProto.result)
  return result_;
}
 void SRegisterCpsdRepProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SRegisterCpsdRepProto.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CRegisterClientReqProto::kSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CRegisterClientReqProto::CRegisterClientReqProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CRegisterClientReqProto)
}

void CRegisterClientReqProto::InitAsDefaultInstance() {
}

CRegisterClientReqProto::CRegisterClientReqProto(const CRegisterClientReqProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CRegisterClientReqProto)
}

void CRegisterClientReqProto::SharedCtor() {
  _cached_size_ = 0;
  seq_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CRegisterClientReqProto::~CRegisterClientReqProto() {
  // @@protoc_insertion_point(destructor:CRegisterClientReqProto)
  SharedDtor();
}

void CRegisterClientReqProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CRegisterClientReqProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CRegisterClientReqProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CRegisterClientReqProto_descriptor_;
}

const CRegisterClientReqProto& CRegisterClientReqProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

CRegisterClientReqProto* CRegisterClientReqProto::default_instance_ = NULL;

CRegisterClientReqProto* CRegisterClientReqProto::New(::google::protobuf::Arena* arena) const {
  CRegisterClientReqProto* n = new CRegisterClientReqProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CRegisterClientReqProto::Clear() {
  seq_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CRegisterClientReqProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CRegisterClientReqProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seq = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_)));
          set_has_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CRegisterClientReqProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CRegisterClientReqProto)
  return false;
#undef DO_
}

void CRegisterClientReqProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CRegisterClientReqProto)
  // required uint32 seq = 1;
  if (has_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seq(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CRegisterClientReqProto)
}

::google::protobuf::uint8* CRegisterClientReqProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRegisterClientReqProto)
  // required uint32 seq = 1;
  if (has_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seq(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRegisterClientReqProto)
  return target;
}

int CRegisterClientReqProto::ByteSize() const {
  int total_size = 0;

  // required uint32 seq = 1;
  if (has_seq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seq());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CRegisterClientReqProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CRegisterClientReqProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CRegisterClientReqProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CRegisterClientReqProto::MergeFrom(const CRegisterClientReqProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seq()) {
      set_seq(from.seq());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CRegisterClientReqProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CRegisterClientReqProto::CopyFrom(const CRegisterClientReqProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CRegisterClientReqProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CRegisterClientReqProto::Swap(CRegisterClientReqProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CRegisterClientReqProto::InternalSwap(CRegisterClientReqProto* other) {
  std::swap(seq_, other->seq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CRegisterClientReqProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CRegisterClientReqProto_descriptor_;
  metadata.reflection = CRegisterClientReqProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CRegisterClientReqProto

// required uint32 seq = 1;
bool CRegisterClientReqProto::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CRegisterClientReqProto::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
void CRegisterClientReqProto::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
void CRegisterClientReqProto::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
 ::google::protobuf::uint32 CRegisterClientReqProto::seq() const {
  // @@protoc_insertion_point(field_get:CRegisterClientReqProto.seq)
  return seq_;
}
 void CRegisterClientReqProto::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:CRegisterClientReqProto.seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SRegisterClientRepProto::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SRegisterClientRepProto::SRegisterClientRepProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SRegisterClientRepProto)
}

void SRegisterClientRepProto::InitAsDefaultInstance() {
}

SRegisterClientRepProto::SRegisterClientRepProto(const SRegisterClientRepProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SRegisterClientRepProto)
}

void SRegisterClientRepProto::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SRegisterClientRepProto::~SRegisterClientRepProto() {
  // @@protoc_insertion_point(destructor:SRegisterClientRepProto)
  SharedDtor();
}

void SRegisterClientRepProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SRegisterClientRepProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SRegisterClientRepProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SRegisterClientRepProto_descriptor_;
}

const SRegisterClientRepProto& SRegisterClientRepProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

SRegisterClientRepProto* SRegisterClientRepProto::default_instance_ = NULL;

SRegisterClientRepProto* SRegisterClientRepProto::New(::google::protobuf::Arena* arena) const {
  SRegisterClientRepProto* n = new SRegisterClientRepProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SRegisterClientRepProto::Clear() {
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SRegisterClientRepProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SRegisterClientRepProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SRegisterClientRepProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SRegisterClientRepProto)
  return false;
#undef DO_
}

void SRegisterClientRepProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SRegisterClientRepProto)
  // required uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SRegisterClientRepProto)
}

::google::protobuf::uint8* SRegisterClientRepProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SRegisterClientRepProto)
  // required uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SRegisterClientRepProto)
  return target;
}

int SRegisterClientRepProto::ByteSize() const {
  int total_size = 0;

  // required uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SRegisterClientRepProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SRegisterClientRepProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SRegisterClientRepProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SRegisterClientRepProto::MergeFrom(const SRegisterClientRepProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SRegisterClientRepProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SRegisterClientRepProto::CopyFrom(const SRegisterClientRepProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SRegisterClientRepProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SRegisterClientRepProto::Swap(SRegisterClientRepProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SRegisterClientRepProto::InternalSwap(SRegisterClientRepProto* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SRegisterClientRepProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SRegisterClientRepProto_descriptor_;
  metadata.reflection = SRegisterClientRepProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SRegisterClientRepProto

// required uint32 result = 1;
bool SRegisterClientRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SRegisterClientRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SRegisterClientRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SRegisterClientRepProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
 ::google::protobuf::uint32 SRegisterClientRepProto::result() const {
  // @@protoc_insertion_point(field_get:SRegisterClientRepProto.result)
  return result_;
}
 void SRegisterClientRepProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SRegisterClientRepProto.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FValidatePosReqpProto::kResultFieldNumber;
const int FValidatePosReqpProto::kImagePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FValidatePosReqpProto::FValidatePosReqpProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FValidatePosReqpProto)
}

void FValidatePosReqpProto::InitAsDefaultInstance() {
}

FValidatePosReqpProto::FValidatePosReqpProto(const FValidatePosReqpProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FValidatePosReqpProto)
}

void FValidatePosReqpProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0u;
  image_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FValidatePosReqpProto::~FValidatePosReqpProto() {
  // @@protoc_insertion_point(destructor:FValidatePosReqpProto)
  SharedDtor();
}

void FValidatePosReqpProto::SharedDtor() {
  image_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FValidatePosReqpProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FValidatePosReqpProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FValidatePosReqpProto_descriptor_;
}

const FValidatePosReqpProto& FValidatePosReqpProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

FValidatePosReqpProto* FValidatePosReqpProto::default_instance_ = NULL;

FValidatePosReqpProto* FValidatePosReqpProto::New(::google::protobuf::Arena* arena) const {
  FValidatePosReqpProto* n = new FValidatePosReqpProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FValidatePosReqpProto::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    result_ = 0u;
    if (has_image_path()) {
      image_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FValidatePosReqpProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FValidatePosReqpProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_image_path;
        break;
      }

      // required string image_path = 2;
      case 2: {
        if (tag == 18) {
         parse_image_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->image_path().data(), this->image_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "FValidatePosReqpProto.image_path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FValidatePosReqpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FValidatePosReqpProto)
  return false;
#undef DO_
}

void FValidatePosReqpProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FValidatePosReqpProto)
  // required uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // required string image_path = 2;
  if (has_image_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->image_path().data(), this->image_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FValidatePosReqpProto.image_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->image_path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FValidatePosReqpProto)
}

::google::protobuf::uint8* FValidatePosReqpProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FValidatePosReqpProto)
  // required uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // required string image_path = 2;
  if (has_image_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->image_path().data(), this->image_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FValidatePosReqpProto.image_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->image_path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FValidatePosReqpProto)
  return target;
}

int FValidatePosReqpProto::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_result()) {
    // required uint32 result = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  if (has_image_path()) {
    // required string image_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_path());
  }

  return total_size;
}
int FValidatePosReqpProto::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 result = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());

    // required string image_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_path());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FValidatePosReqpProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FValidatePosReqpProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FValidatePosReqpProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FValidatePosReqpProto::MergeFrom(const FValidatePosReqpProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_image_path()) {
      set_has_image_path();
      image_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_path_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void FValidatePosReqpProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FValidatePosReqpProto::CopyFrom(const FValidatePosReqpProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FValidatePosReqpProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void FValidatePosReqpProto::Swap(FValidatePosReqpProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FValidatePosReqpProto::InternalSwap(FValidatePosReqpProto* other) {
  std::swap(result_, other->result_);
  image_path_.Swap(&other->image_path_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FValidatePosReqpProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FValidatePosReqpProto_descriptor_;
  metadata.reflection = FValidatePosReqpProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FValidatePosReqpProto

// required uint32 result = 1;
bool FValidatePosReqpProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FValidatePosReqpProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void FValidatePosReqpProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void FValidatePosReqpProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
 ::google::protobuf::uint32 FValidatePosReqpProto::result() const {
  // @@protoc_insertion_point(field_get:FValidatePosReqpProto.result)
  return result_;
}
 void FValidatePosReqpProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:FValidatePosReqpProto.result)
}

// required string image_path = 2;
bool FValidatePosReqpProto::has_image_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FValidatePosReqpProto::set_has_image_path() {
  _has_bits_[0] |= 0x00000002u;
}
void FValidatePosReqpProto::clear_has_image_path() {
  _has_bits_[0] &= ~0x00000002u;
}
void FValidatePosReqpProto::clear_image_path() {
  image_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_image_path();
}
 const ::std::string& FValidatePosReqpProto::image_path() const {
  // @@protoc_insertion_point(field_get:FValidatePosReqpProto.image_path)
  return image_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FValidatePosReqpProto::set_image_path(const ::std::string& value) {
  set_has_image_path();
  image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FValidatePosReqpProto.image_path)
}
 void FValidatePosReqpProto::set_image_path(const char* value) {
  set_has_image_path();
  image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FValidatePosReqpProto.image_path)
}
 void FValidatePosReqpProto::set_image_path(const char* value, size_t size) {
  set_has_image_path();
  image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FValidatePosReqpProto.image_path)
}
 ::std::string* FValidatePosReqpProto::mutable_image_path() {
  set_has_image_path();
  // @@protoc_insertion_point(field_mutable:FValidatePosReqpProto.image_path)
  return image_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FValidatePosReqpProto::release_image_path() {
  clear_has_image_path();
  return image_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FValidatePosReqpProto::set_allocated_image_path(::std::string* image_path) {
  if (image_path != NULL) {
    set_has_image_path();
  } else {
    clear_has_image_path();
  }
  image_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_path);
  // @@protoc_insertion_point(field_set_allocated:FValidatePosReqpProto.image_path)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProcessFeatureReqProto::kIdFieldNumber;
const int CProcessFeatureReqProto::kAvgSaturationFieldNumber;
const int CProcessFeatureReqProto::kAvgHueFieldNumber;
const int CProcessFeatureReqProto::kAvgIntensityFieldNumber;
const int CProcessFeatureReqProto::kDeviationSaturationFieldNumber;
const int CProcessFeatureReqProto::kDeviationHueFieldNumber;
const int CProcessFeatureReqProto::kDeviationIntensityFieldNumber;
const int CProcessFeatureReqProto::kLengthFieldNumber;
const int CProcessFeatureReqProto::kWidthFieldNumber;
const int CProcessFeatureReqProto::kWidthLengthRatioFieldNumber;
const int CProcessFeatureReqProto::kApexAngleFieldNumber;
const int CProcessFeatureReqProto::kCircularityFieldNumber;
const int CProcessFeatureReqProto::kAreaFieldNumber;
const int CProcessFeatureReqProto::kThickMeanFieldNumber;
const int CProcessFeatureReqProto::kDefectRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProcessFeatureReqProto::CProcessFeatureReqProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProcessFeatureReqProto)
}

void CProcessFeatureReqProto::InitAsDefaultInstance() {
}

CProcessFeatureReqProto::CProcessFeatureReqProto(const CProcessFeatureReqProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CProcessFeatureReqProto)
}

void CProcessFeatureReqProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avgsaturation_ = 0;
  avghue_ = 0;
  avgintensity_ = 0;
  deviationsaturation_ = 0;
  deviationhue_ = 0;
  deviationintensity_ = 0;
  length_ = 0;
  width_ = 0;
  widthlengthratio_ = 0;
  apexangle_ = 0;
  circularity_ = 0;
  area_ = 0;
  thickmean_ = 0;
  defectrate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CProcessFeatureReqProto::~CProcessFeatureReqProto() {
  // @@protoc_insertion_point(destructor:CProcessFeatureReqProto)
  SharedDtor();
}

void CProcessFeatureReqProto::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CProcessFeatureReqProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProcessFeatureReqProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CProcessFeatureReqProto_descriptor_;
}

const CProcessFeatureReqProto& CProcessFeatureReqProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

CProcessFeatureReqProto* CProcessFeatureReqProto::default_instance_ = NULL;

CProcessFeatureReqProto* CProcessFeatureReqProto::New(::google::protobuf::Arena* arena) const {
  CProcessFeatureReqProto* n = new CProcessFeatureReqProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProcessFeatureReqProto::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CProcessFeatureReqProto*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(avgsaturation_, length_);
    if (has_id()) {
      id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 32512u) {
    ZR_(width_, defectrate_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CProcessFeatureReqProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProcessFeatureReqProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CProcessFeatureReqProto.id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_AvgSaturation;
        break;
      }

      // required double AvgSaturation = 2;
      case 2: {
        if (tag == 17) {
         parse_AvgSaturation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avgsaturation_)));
          set_has_avgsaturation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_AvgHue;
        break;
      }

      // required double AvgHue = 3;
      case 3: {
        if (tag == 25) {
         parse_AvgHue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avghue_)));
          set_has_avghue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_AvgIntensity;
        break;
      }

      // required double AvgIntensity = 4;
      case 4: {
        if (tag == 33) {
         parse_AvgIntensity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avgintensity_)));
          set_has_avgintensity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_DeviationSaturation;
        break;
      }

      // required double DeviationSaturation = 5;
      case 5: {
        if (tag == 41) {
         parse_DeviationSaturation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &deviationsaturation_)));
          set_has_deviationsaturation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_DeviationHue;
        break;
      }

      // required double DeviationHue = 6;
      case 6: {
        if (tag == 49) {
         parse_DeviationHue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &deviationhue_)));
          set_has_deviationhue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_DeviationIntensity;
        break;
      }

      // required double DeviationIntensity = 7;
      case 7: {
        if (tag == 57) {
         parse_DeviationIntensity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &deviationintensity_)));
          set_has_deviationintensity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_Length;
        break;
      }

      // required double Length = 8;
      case 8: {
        if (tag == 65) {
         parse_Length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_)));
          set_has_length();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_Width;
        break;
      }

      // required double Width = 9;
      case 9: {
        if (tag == 73) {
         parse_Width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_WidthLengthRatio;
        break;
      }

      // required double WidthLengthRatio = 10;
      case 10: {
        if (tag == 81) {
         parse_WidthLengthRatio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &widthlengthratio_)));
          set_has_widthlengthratio();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_ApexAngle;
        break;
      }

      // required double ApexAngle = 11;
      case 11: {
        if (tag == 89) {
         parse_ApexAngle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &apexangle_)));
          set_has_apexangle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_Circularity;
        break;
      }

      // required double Circularity = 12;
      case 12: {
        if (tag == 97) {
         parse_Circularity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &circularity_)));
          set_has_circularity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_Area;
        break;
      }

      // required double Area = 13;
      case 13: {
        if (tag == 105) {
         parse_Area:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &area_)));
          set_has_area();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_ThickMean;
        break;
      }

      // required double ThickMean = 14;
      case 14: {
        if (tag == 113) {
         parse_ThickMean:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &thickmean_)));
          set_has_thickmean();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_DefectRate;
        break;
      }

      // required double DefectRate = 15;
      case 15: {
        if (tag == 121) {
         parse_DefectRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &defectrate_)));
          set_has_defectrate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProcessFeatureReqProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProcessFeatureReqProto)
  return false;
#undef DO_
}

void CProcessFeatureReqProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProcessFeatureReqProto)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CProcessFeatureReqProto.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required double AvgSaturation = 2;
  if (has_avgsaturation()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->avgsaturation(), output);
  }

  // required double AvgHue = 3;
  if (has_avghue()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->avghue(), output);
  }

  // required double AvgIntensity = 4;
  if (has_avgintensity()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->avgintensity(), output);
  }

  // required double DeviationSaturation = 5;
  if (has_deviationsaturation()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->deviationsaturation(), output);
  }

  // required double DeviationHue = 6;
  if (has_deviationhue()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->deviationhue(), output);
  }

  // required double DeviationIntensity = 7;
  if (has_deviationintensity()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->deviationintensity(), output);
  }

  // required double Length = 8;
  if (has_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->length(), output);
  }

  // required double Width = 9;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->width(), output);
  }

  // required double WidthLengthRatio = 10;
  if (has_widthlengthratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->widthlengthratio(), output);
  }

  // required double ApexAngle = 11;
  if (has_apexangle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->apexangle(), output);
  }

  // required double Circularity = 12;
  if (has_circularity()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->circularity(), output);
  }

  // required double Area = 13;
  if (has_area()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->area(), output);
  }

  // required double ThickMean = 14;
  if (has_thickmean()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->thickmean(), output);
  }

  // required double DefectRate = 15;
  if (has_defectrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->defectrate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProcessFeatureReqProto)
}

::google::protobuf::uint8* CProcessFeatureReqProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CProcessFeatureReqProto)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CProcessFeatureReqProto.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required double AvgSaturation = 2;
  if (has_avgsaturation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->avgsaturation(), target);
  }

  // required double AvgHue = 3;
  if (has_avghue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->avghue(), target);
  }

  // required double AvgIntensity = 4;
  if (has_avgintensity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->avgintensity(), target);
  }

  // required double DeviationSaturation = 5;
  if (has_deviationsaturation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->deviationsaturation(), target);
  }

  // required double DeviationHue = 6;
  if (has_deviationhue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->deviationhue(), target);
  }

  // required double DeviationIntensity = 7;
  if (has_deviationintensity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->deviationintensity(), target);
  }

  // required double Length = 8;
  if (has_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->length(), target);
  }

  // required double Width = 9;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->width(), target);
  }

  // required double WidthLengthRatio = 10;
  if (has_widthlengthratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->widthlengthratio(), target);
  }

  // required double ApexAngle = 11;
  if (has_apexangle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->apexangle(), target);
  }

  // required double Circularity = 12;
  if (has_circularity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->circularity(), target);
  }

  // required double Area = 13;
  if (has_area()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->area(), target);
  }

  // required double ThickMean = 14;
  if (has_thickmean()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->thickmean(), target);
  }

  // required double DefectRate = 15;
  if (has_defectrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->defectrate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProcessFeatureReqProto)
  return target;
}

int CProcessFeatureReqProto::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_avgsaturation()) {
    // required double AvgSaturation = 2;
    total_size += 1 + 8;
  }

  if (has_avghue()) {
    // required double AvgHue = 3;
    total_size += 1 + 8;
  }

  if (has_avgintensity()) {
    // required double AvgIntensity = 4;
    total_size += 1 + 8;
  }

  if (has_deviationsaturation()) {
    // required double DeviationSaturation = 5;
    total_size += 1 + 8;
  }

  if (has_deviationhue()) {
    // required double DeviationHue = 6;
    total_size += 1 + 8;
  }

  if (has_deviationintensity()) {
    // required double DeviationIntensity = 7;
    total_size += 1 + 8;
  }

  if (has_length()) {
    // required double Length = 8;
    total_size += 1 + 8;
  }

  if (has_width()) {
    // required double Width = 9;
    total_size += 1 + 8;
  }

  if (has_widthlengthratio()) {
    // required double WidthLengthRatio = 10;
    total_size += 1 + 8;
  }

  if (has_apexangle()) {
    // required double ApexAngle = 11;
    total_size += 1 + 8;
  }

  if (has_circularity()) {
    // required double Circularity = 12;
    total_size += 1 + 8;
  }

  if (has_area()) {
    // required double Area = 13;
    total_size += 1 + 8;
  }

  if (has_thickmean()) {
    // required double ThickMean = 14;
    total_size += 1 + 8;
  }

  if (has_defectrate()) {
    // required double DefectRate = 15;
    total_size += 1 + 8;
  }

  return total_size;
}
int CProcessFeatureReqProto::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00007fff) ^ 0x00007fff) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required double AvgSaturation = 2;
    total_size += 1 + 8;

    // required double AvgHue = 3;
    total_size += 1 + 8;

    // required double AvgIntensity = 4;
    total_size += 1 + 8;

    // required double DeviationSaturation = 5;
    total_size += 1 + 8;

    // required double DeviationHue = 6;
    total_size += 1 + 8;

    // required double DeviationIntensity = 7;
    total_size += 1 + 8;

    // required double Length = 8;
    total_size += 1 + 8;

    // required double Width = 9;
    total_size += 1 + 8;

    // required double WidthLengthRatio = 10;
    total_size += 1 + 8;

    // required double ApexAngle = 11;
    total_size += 1 + 8;

    // required double Circularity = 12;
    total_size += 1 + 8;

    // required double Area = 13;
    total_size += 1 + 8;

    // required double ThickMean = 14;
    total_size += 1 + 8;

    // required double DefectRate = 15;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProcessFeatureReqProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CProcessFeatureReqProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CProcessFeatureReqProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CProcessFeatureReqProto::MergeFrom(const CProcessFeatureReqProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (from.has_avgsaturation()) {
      set_avgsaturation(from.avgsaturation());
    }
    if (from.has_avghue()) {
      set_avghue(from.avghue());
    }
    if (from.has_avgintensity()) {
      set_avgintensity(from.avgintensity());
    }
    if (from.has_deviationsaturation()) {
      set_deviationsaturation(from.deviationsaturation());
    }
    if (from.has_deviationhue()) {
      set_deviationhue(from.deviationhue());
    }
    if (from.has_deviationintensity()) {
      set_deviationintensity(from.deviationintensity());
    }
    if (from.has_length()) {
      set_length(from.length());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_widthlengthratio()) {
      set_widthlengthratio(from.widthlengthratio());
    }
    if (from.has_apexangle()) {
      set_apexangle(from.apexangle());
    }
    if (from.has_circularity()) {
      set_circularity(from.circularity());
    }
    if (from.has_area()) {
      set_area(from.area());
    }
    if (from.has_thickmean()) {
      set_thickmean(from.thickmean());
    }
    if (from.has_defectrate()) {
      set_defectrate(from.defectrate());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CProcessFeatureReqProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProcessFeatureReqProto::CopyFrom(const CProcessFeatureReqProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProcessFeatureReqProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00007fff) != 0x00007fff) return false;

  return true;
}

void CProcessFeatureReqProto::Swap(CProcessFeatureReqProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProcessFeatureReqProto::InternalSwap(CProcessFeatureReqProto* other) {
  id_.Swap(&other->id_);
  std::swap(avgsaturation_, other->avgsaturation_);
  std::swap(avghue_, other->avghue_);
  std::swap(avgintensity_, other->avgintensity_);
  std::swap(deviationsaturation_, other->deviationsaturation_);
  std::swap(deviationhue_, other->deviationhue_);
  std::swap(deviationintensity_, other->deviationintensity_);
  std::swap(length_, other->length_);
  std::swap(width_, other->width_);
  std::swap(widthlengthratio_, other->widthlengthratio_);
  std::swap(apexangle_, other->apexangle_);
  std::swap(circularity_, other->circularity_);
  std::swap(area_, other->area_);
  std::swap(thickmean_, other->thickmean_);
  std::swap(defectrate_, other->defectrate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProcessFeatureReqProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CProcessFeatureReqProto_descriptor_;
  metadata.reflection = CProcessFeatureReqProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProcessFeatureReqProto

// required string id = 1;
bool CProcessFeatureReqProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProcessFeatureReqProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CProcessFeatureReqProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProcessFeatureReqProto::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
 const ::std::string& CProcessFeatureReqProto::id() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CProcessFeatureReqProto::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.id)
}
 void CProcessFeatureReqProto::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CProcessFeatureReqProto.id)
}
 void CProcessFeatureReqProto::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CProcessFeatureReqProto.id)
}
 ::std::string* CProcessFeatureReqProto::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:CProcessFeatureReqProto.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CProcessFeatureReqProto::release_id() {
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CProcessFeatureReqProto::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:CProcessFeatureReqProto.id)
}

// required double AvgSaturation = 2;
bool CProcessFeatureReqProto::has_avgsaturation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CProcessFeatureReqProto::set_has_avgsaturation() {
  _has_bits_[0] |= 0x00000002u;
}
void CProcessFeatureReqProto::clear_has_avgsaturation() {
  _has_bits_[0] &= ~0x00000002u;
}
void CProcessFeatureReqProto::clear_avgsaturation() {
  avgsaturation_ = 0;
  clear_has_avgsaturation();
}
 double CProcessFeatureReqProto::avgsaturation() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.AvgSaturation)
  return avgsaturation_;
}
 void CProcessFeatureReqProto::set_avgsaturation(double value) {
  set_has_avgsaturation();
  avgsaturation_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.AvgSaturation)
}

// required double AvgHue = 3;
bool CProcessFeatureReqProto::has_avghue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CProcessFeatureReqProto::set_has_avghue() {
  _has_bits_[0] |= 0x00000004u;
}
void CProcessFeatureReqProto::clear_has_avghue() {
  _has_bits_[0] &= ~0x00000004u;
}
void CProcessFeatureReqProto::clear_avghue() {
  avghue_ = 0;
  clear_has_avghue();
}
 double CProcessFeatureReqProto::avghue() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.AvgHue)
  return avghue_;
}
 void CProcessFeatureReqProto::set_avghue(double value) {
  set_has_avghue();
  avghue_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.AvgHue)
}

// required double AvgIntensity = 4;
bool CProcessFeatureReqProto::has_avgintensity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CProcessFeatureReqProto::set_has_avgintensity() {
  _has_bits_[0] |= 0x00000008u;
}
void CProcessFeatureReqProto::clear_has_avgintensity() {
  _has_bits_[0] &= ~0x00000008u;
}
void CProcessFeatureReqProto::clear_avgintensity() {
  avgintensity_ = 0;
  clear_has_avgintensity();
}
 double CProcessFeatureReqProto::avgintensity() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.AvgIntensity)
  return avgintensity_;
}
 void CProcessFeatureReqProto::set_avgintensity(double value) {
  set_has_avgintensity();
  avgintensity_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.AvgIntensity)
}

// required double DeviationSaturation = 5;
bool CProcessFeatureReqProto::has_deviationsaturation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CProcessFeatureReqProto::set_has_deviationsaturation() {
  _has_bits_[0] |= 0x00000010u;
}
void CProcessFeatureReqProto::clear_has_deviationsaturation() {
  _has_bits_[0] &= ~0x00000010u;
}
void CProcessFeatureReqProto::clear_deviationsaturation() {
  deviationsaturation_ = 0;
  clear_has_deviationsaturation();
}
 double CProcessFeatureReqProto::deviationsaturation() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.DeviationSaturation)
  return deviationsaturation_;
}
 void CProcessFeatureReqProto::set_deviationsaturation(double value) {
  set_has_deviationsaturation();
  deviationsaturation_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.DeviationSaturation)
}

// required double DeviationHue = 6;
bool CProcessFeatureReqProto::has_deviationhue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CProcessFeatureReqProto::set_has_deviationhue() {
  _has_bits_[0] |= 0x00000020u;
}
void CProcessFeatureReqProto::clear_has_deviationhue() {
  _has_bits_[0] &= ~0x00000020u;
}
void CProcessFeatureReqProto::clear_deviationhue() {
  deviationhue_ = 0;
  clear_has_deviationhue();
}
 double CProcessFeatureReqProto::deviationhue() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.DeviationHue)
  return deviationhue_;
}
 void CProcessFeatureReqProto::set_deviationhue(double value) {
  set_has_deviationhue();
  deviationhue_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.DeviationHue)
}

// required double DeviationIntensity = 7;
bool CProcessFeatureReqProto::has_deviationintensity() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CProcessFeatureReqProto::set_has_deviationintensity() {
  _has_bits_[0] |= 0x00000040u;
}
void CProcessFeatureReqProto::clear_has_deviationintensity() {
  _has_bits_[0] &= ~0x00000040u;
}
void CProcessFeatureReqProto::clear_deviationintensity() {
  deviationintensity_ = 0;
  clear_has_deviationintensity();
}
 double CProcessFeatureReqProto::deviationintensity() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.DeviationIntensity)
  return deviationintensity_;
}
 void CProcessFeatureReqProto::set_deviationintensity(double value) {
  set_has_deviationintensity();
  deviationintensity_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.DeviationIntensity)
}

// required double Length = 8;
bool CProcessFeatureReqProto::has_length() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CProcessFeatureReqProto::set_has_length() {
  _has_bits_[0] |= 0x00000080u;
}
void CProcessFeatureReqProto::clear_has_length() {
  _has_bits_[0] &= ~0x00000080u;
}
void CProcessFeatureReqProto::clear_length() {
  length_ = 0;
  clear_has_length();
}
 double CProcessFeatureReqProto::length() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.Length)
  return length_;
}
 void CProcessFeatureReqProto::set_length(double value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.Length)
}

// required double Width = 9;
bool CProcessFeatureReqProto::has_width() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CProcessFeatureReqProto::set_has_width() {
  _has_bits_[0] |= 0x00000100u;
}
void CProcessFeatureReqProto::clear_has_width() {
  _has_bits_[0] &= ~0x00000100u;
}
void CProcessFeatureReqProto::clear_width() {
  width_ = 0;
  clear_has_width();
}
 double CProcessFeatureReqProto::width() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.Width)
  return width_;
}
 void CProcessFeatureReqProto::set_width(double value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.Width)
}

// required double WidthLengthRatio = 10;
bool CProcessFeatureReqProto::has_widthlengthratio() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CProcessFeatureReqProto::set_has_widthlengthratio() {
  _has_bits_[0] |= 0x00000200u;
}
void CProcessFeatureReqProto::clear_has_widthlengthratio() {
  _has_bits_[0] &= ~0x00000200u;
}
void CProcessFeatureReqProto::clear_widthlengthratio() {
  widthlengthratio_ = 0;
  clear_has_widthlengthratio();
}
 double CProcessFeatureReqProto::widthlengthratio() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.WidthLengthRatio)
  return widthlengthratio_;
}
 void CProcessFeatureReqProto::set_widthlengthratio(double value) {
  set_has_widthlengthratio();
  widthlengthratio_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.WidthLengthRatio)
}

// required double ApexAngle = 11;
bool CProcessFeatureReqProto::has_apexangle() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CProcessFeatureReqProto::set_has_apexangle() {
  _has_bits_[0] |= 0x00000400u;
}
void CProcessFeatureReqProto::clear_has_apexangle() {
  _has_bits_[0] &= ~0x00000400u;
}
void CProcessFeatureReqProto::clear_apexangle() {
  apexangle_ = 0;
  clear_has_apexangle();
}
 double CProcessFeatureReqProto::apexangle() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.ApexAngle)
  return apexangle_;
}
 void CProcessFeatureReqProto::set_apexangle(double value) {
  set_has_apexangle();
  apexangle_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.ApexAngle)
}

// required double Circularity = 12;
bool CProcessFeatureReqProto::has_circularity() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CProcessFeatureReqProto::set_has_circularity() {
  _has_bits_[0] |= 0x00000800u;
}
void CProcessFeatureReqProto::clear_has_circularity() {
  _has_bits_[0] &= ~0x00000800u;
}
void CProcessFeatureReqProto::clear_circularity() {
  circularity_ = 0;
  clear_has_circularity();
}
 double CProcessFeatureReqProto::circularity() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.Circularity)
  return circularity_;
}
 void CProcessFeatureReqProto::set_circularity(double value) {
  set_has_circularity();
  circularity_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.Circularity)
}

// required double Area = 13;
bool CProcessFeatureReqProto::has_area() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CProcessFeatureReqProto::set_has_area() {
  _has_bits_[0] |= 0x00001000u;
}
void CProcessFeatureReqProto::clear_has_area() {
  _has_bits_[0] &= ~0x00001000u;
}
void CProcessFeatureReqProto::clear_area() {
  area_ = 0;
  clear_has_area();
}
 double CProcessFeatureReqProto::area() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.Area)
  return area_;
}
 void CProcessFeatureReqProto::set_area(double value) {
  set_has_area();
  area_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.Area)
}

// required double ThickMean = 14;
bool CProcessFeatureReqProto::has_thickmean() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CProcessFeatureReqProto::set_has_thickmean() {
  _has_bits_[0] |= 0x00002000u;
}
void CProcessFeatureReqProto::clear_has_thickmean() {
  _has_bits_[0] &= ~0x00002000u;
}
void CProcessFeatureReqProto::clear_thickmean() {
  thickmean_ = 0;
  clear_has_thickmean();
}
 double CProcessFeatureReqProto::thickmean() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.ThickMean)
  return thickmean_;
}
 void CProcessFeatureReqProto::set_thickmean(double value) {
  set_has_thickmean();
  thickmean_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.ThickMean)
}

// required double DefectRate = 15;
bool CProcessFeatureReqProto::has_defectrate() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void CProcessFeatureReqProto::set_has_defectrate() {
  _has_bits_[0] |= 0x00004000u;
}
void CProcessFeatureReqProto::clear_has_defectrate() {
  _has_bits_[0] &= ~0x00004000u;
}
void CProcessFeatureReqProto::clear_defectrate() {
  defectrate_ = 0;
  clear_has_defectrate();
}
 double CProcessFeatureReqProto::defectrate() const {
  // @@protoc_insertion_point(field_get:CProcessFeatureReqProto.DefectRate)
  return defectrate_;
}
 void CProcessFeatureReqProto::set_defectrate(double value) {
  set_has_defectrate();
  defectrate_ = value;
  // @@protoc_insertion_point(field_set:CProcessFeatureReqProto.DefectRate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SProcessFeatureRepProto::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SProcessFeatureRepProto::SProcessFeatureRepProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SProcessFeatureRepProto)
}

void SProcessFeatureRepProto::InitAsDefaultInstance() {
}

SProcessFeatureRepProto::SProcessFeatureRepProto(const SProcessFeatureRepProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SProcessFeatureRepProto)
}

void SProcessFeatureRepProto::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SProcessFeatureRepProto::~SProcessFeatureRepProto() {
  // @@protoc_insertion_point(destructor:SProcessFeatureRepProto)
  SharedDtor();
}

void SProcessFeatureRepProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SProcessFeatureRepProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SProcessFeatureRepProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SProcessFeatureRepProto_descriptor_;
}

const SProcessFeatureRepProto& SProcessFeatureRepProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

SProcessFeatureRepProto* SProcessFeatureRepProto::default_instance_ = NULL;

SProcessFeatureRepProto* SProcessFeatureRepProto::New(::google::protobuf::Arena* arena) const {
  SProcessFeatureRepProto* n = new SProcessFeatureRepProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SProcessFeatureRepProto::Clear() {
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SProcessFeatureRepProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SProcessFeatureRepProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SProcessFeatureRepProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SProcessFeatureRepProto)
  return false;
#undef DO_
}

void SProcessFeatureRepProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SProcessFeatureRepProto)
  // required uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SProcessFeatureRepProto)
}

::google::protobuf::uint8* SProcessFeatureRepProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SProcessFeatureRepProto)
  // required uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SProcessFeatureRepProto)
  return target;
}

int SProcessFeatureRepProto::ByteSize() const {
  int total_size = 0;

  // required uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SProcessFeatureRepProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SProcessFeatureRepProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SProcessFeatureRepProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SProcessFeatureRepProto::MergeFrom(const SProcessFeatureRepProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SProcessFeatureRepProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SProcessFeatureRepProto::CopyFrom(const SProcessFeatureRepProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SProcessFeatureRepProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SProcessFeatureRepProto::Swap(SProcessFeatureRepProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SProcessFeatureRepProto::InternalSwap(SProcessFeatureRepProto* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SProcessFeatureRepProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SProcessFeatureRepProto_descriptor_;
  metadata.reflection = SProcessFeatureRepProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SProcessFeatureRepProto

// required uint32 result = 1;
bool SProcessFeatureRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SProcessFeatureRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SProcessFeatureRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SProcessFeatureRepProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
 ::google::protobuf::uint32 SProcessFeatureRepProto::result() const {
  // @@protoc_insertion_point(field_get:SProcessFeatureRepProto.result)
  return result_;
}
 void SProcessFeatureRepProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SProcessFeatureRepProto.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SProcessResultProto::kResultFieldNumber;
const int SProcessResultProto::kLevelFieldNumber;
const int SProcessResultProto::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SProcessResultProto::SProcessResultProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SProcessResultProto)
}

void SProcessResultProto::InitAsDefaultInstance() {
}

SProcessResultProto::SProcessResultProto(const SProcessResultProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SProcessResultProto)
}

void SProcessResultProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0u;
  level_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SProcessResultProto::~SProcessResultProto() {
  // @@protoc_insertion_point(destructor:SProcessResultProto)
  SharedDtor();
}

void SProcessResultProto::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SProcessResultProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SProcessResultProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SProcessResultProto_descriptor_;
}

const SProcessResultProto& SProcessResultProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

SProcessResultProto* SProcessResultProto::default_instance_ = NULL;

SProcessResultProto* SProcessResultProto::New(::google::protobuf::Arena* arena) const {
  SProcessResultProto* n = new SProcessResultProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SProcessResultProto::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SProcessResultProto*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(result_, level_);
    if (has_data()) {
      data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SProcessResultProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SProcessResultProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // required int32 level = 2;
      case 2: {
        if (tag == 16) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // required bytes data = 3;
      case 3: {
        if (tag == 26) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SProcessResultProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SProcessResultProto)
  return false;
#undef DO_
}

void SProcessResultProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SProcessResultProto)
  // required uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // required int32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  // required bytes data = 3;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SProcessResultProto)
}

::google::protobuf::uint8* SProcessResultProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SProcessResultProto)
  // required uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // required int32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  // required bytes data = 3;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SProcessResultProto)
  return target;
}

int SProcessResultProto::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_result()) {
    // required uint32 result = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  if (has_level()) {
    // required int32 level = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_data()) {
    // required bytes data = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  return total_size;
}
int SProcessResultProto::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 result = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());

    // required int32 level = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required bytes data = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SProcessResultProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SProcessResultProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SProcessResultProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SProcessResultProto::MergeFrom(const SProcessResultProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SProcessResultProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SProcessResultProto::CopyFrom(const SProcessResultProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SProcessResultProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void SProcessResultProto::Swap(SProcessResultProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SProcessResultProto::InternalSwap(SProcessResultProto* other) {
  std::swap(result_, other->result_);
  std::swap(level_, other->level_);
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SProcessResultProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SProcessResultProto_descriptor_;
  metadata.reflection = SProcessResultProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SProcessResultProto

// required uint32 result = 1;
bool SProcessResultProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SProcessResultProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SProcessResultProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SProcessResultProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
 ::google::protobuf::uint32 SProcessResultProto::result() const {
  // @@protoc_insertion_point(field_get:SProcessResultProto.result)
  return result_;
}
 void SProcessResultProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SProcessResultProto.result)
}

// required int32 level = 2;
bool SProcessResultProto::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SProcessResultProto::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
void SProcessResultProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
void SProcessResultProto::clear_level() {
  level_ = 0;
  clear_has_level();
}
 ::google::protobuf::int32 SProcessResultProto::level() const {
  // @@protoc_insertion_point(field_get:SProcessResultProto.level)
  return level_;
}
 void SProcessResultProto::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:SProcessResultProto.level)
}

// required bytes data = 3;
bool SProcessResultProto::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SProcessResultProto::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
void SProcessResultProto::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
void SProcessResultProto::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& SProcessResultProto::data() const {
  // @@protoc_insertion_point(field_get:SProcessResultProto.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SProcessResultProto::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SProcessResultProto.data)
}
 void SProcessResultProto::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SProcessResultProto.data)
}
 void SProcessResultProto::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SProcessResultProto.data)
}
 ::std::string* SProcessResultProto::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:SProcessResultProto.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SProcessResultProto::release_data() {
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SProcessResultProto::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:SProcessResultProto.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSetProcessStateReqProto::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSetProcessStateReqProto::CSetProcessStateReqProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSetProcessStateReqProto)
}

void CSetProcessStateReqProto::InitAsDefaultInstance() {
}

CSetProcessStateReqProto::CSetProcessStateReqProto(const CSetProcessStateReqProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSetProcessStateReqProto)
}

void CSetProcessStateReqProto::SharedCtor() {
  _cached_size_ = 0;
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSetProcessStateReqProto::~CSetProcessStateReqProto() {
  // @@protoc_insertion_point(destructor:CSetProcessStateReqProto)
  SharedDtor();
}

void CSetProcessStateReqProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSetProcessStateReqProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSetProcessStateReqProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSetProcessStateReqProto_descriptor_;
}

const CSetProcessStateReqProto& CSetProcessStateReqProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

CSetProcessStateReqProto* CSetProcessStateReqProto::default_instance_ = NULL;

CSetProcessStateReqProto* CSetProcessStateReqProto::New(::google::protobuf::Arena* arena) const {
  CSetProcessStateReqProto* n = new CSetProcessStateReqProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSetProcessStateReqProto::Clear() {
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CSetProcessStateReqProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSetProcessStateReqProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 state = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSetProcessStateReqProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSetProcessStateReqProto)
  return false;
#undef DO_
}

void CSetProcessStateReqProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSetProcessStateReqProto)
  // required int32 state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSetProcessStateReqProto)
}

::google::protobuf::uint8* CSetProcessStateReqProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSetProcessStateReqProto)
  // required int32 state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSetProcessStateReqProto)
  return target;
}

int CSetProcessStateReqProto::ByteSize() const {
  int total_size = 0;

  // required int32 state = 1;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSetProcessStateReqProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CSetProcessStateReqProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CSetProcessStateReqProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSetProcessStateReqProto::MergeFrom(const CSetProcessStateReqProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CSetProcessStateReqProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSetProcessStateReqProto::CopyFrom(const CSetProcessStateReqProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSetProcessStateReqProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CSetProcessStateReqProto::Swap(CSetProcessStateReqProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSetProcessStateReqProto::InternalSwap(CSetProcessStateReqProto* other) {
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSetProcessStateReqProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSetProcessStateReqProto_descriptor_;
  metadata.reflection = CSetProcessStateReqProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CSetProcessStateReqProto

// required int32 state = 1;
bool CSetProcessStateReqProto::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CSetProcessStateReqProto::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
void CSetProcessStateReqProto::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
void CSetProcessStateReqProto::clear_state() {
  state_ = 0;
  clear_has_state();
}
 ::google::protobuf::int32 CSetProcessStateReqProto::state() const {
  // @@protoc_insertion_point(field_get:CSetProcessStateReqProto.state)
  return state_;
}
 void CSetProcessStateReqProto::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CSetProcessStateReqProto.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SSetProcessStateRepProto::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SSetProcessStateRepProto::SSetProcessStateRepProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SSetProcessStateRepProto)
}

void SSetProcessStateRepProto::InitAsDefaultInstance() {
}

SSetProcessStateRepProto::SSetProcessStateRepProto(const SSetProcessStateRepProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SSetProcessStateRepProto)
}

void SSetProcessStateRepProto::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SSetProcessStateRepProto::~SSetProcessStateRepProto() {
  // @@protoc_insertion_point(destructor:SSetProcessStateRepProto)
  SharedDtor();
}

void SSetProcessStateRepProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SSetProcessStateRepProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SSetProcessStateRepProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SSetProcessStateRepProto_descriptor_;
}

const SSetProcessStateRepProto& SSetProcessStateRepProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

SSetProcessStateRepProto* SSetProcessStateRepProto::default_instance_ = NULL;

SSetProcessStateRepProto* SSetProcessStateRepProto::New(::google::protobuf::Arena* arena) const {
  SSetProcessStateRepProto* n = new SSetProcessStateRepProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SSetProcessStateRepProto::Clear() {
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SSetProcessStateRepProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SSetProcessStateRepProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SSetProcessStateRepProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SSetProcessStateRepProto)
  return false;
#undef DO_
}

void SSetProcessStateRepProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SSetProcessStateRepProto)
  // required uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SSetProcessStateRepProto)
}

::google::protobuf::uint8* SSetProcessStateRepProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSetProcessStateRepProto)
  // required uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSetProcessStateRepProto)
  return target;
}

int SSetProcessStateRepProto::ByteSize() const {
  int total_size = 0;

  // required uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SSetProcessStateRepProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SSetProcessStateRepProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SSetProcessStateRepProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SSetProcessStateRepProto::MergeFrom(const SSetProcessStateRepProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SSetProcessStateRepProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSetProcessStateRepProto::CopyFrom(const SSetProcessStateRepProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSetProcessStateRepProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SSetProcessStateRepProto::Swap(SSetProcessStateRepProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SSetProcessStateRepProto::InternalSwap(SSetProcessStateRepProto* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SSetProcessStateRepProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SSetProcessStateRepProto_descriptor_;
  metadata.reflection = SSetProcessStateRepProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SSetProcessStateRepProto

// required uint32 result = 1;
bool SSetProcessStateRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SSetProcessStateRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SSetProcessStateRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SSetProcessStateRepProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
 ::google::protobuf::uint32 SSetProcessStateRepProto::result() const {
  // @@protoc_insertion_point(field_get:SSetProcessStateRepProto.result)
  return result_;
}
 void SSetProcessStateRepProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SSetProcessStateRepProto.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEndBatchProcessReqProto::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEndBatchProcessReqProto::CEndBatchProcessReqProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEndBatchProcessReqProto)
}

void CEndBatchProcessReqProto::InitAsDefaultInstance() {
}

CEndBatchProcessReqProto::CEndBatchProcessReqProto(const CEndBatchProcessReqProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CEndBatchProcessReqProto)
}

void CEndBatchProcessReqProto::SharedCtor() {
  _cached_size_ = 0;
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CEndBatchProcessReqProto::~CEndBatchProcessReqProto() {
  // @@protoc_insertion_point(destructor:CEndBatchProcessReqProto)
  SharedDtor();
}

void CEndBatchProcessReqProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CEndBatchProcessReqProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CEndBatchProcessReqProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CEndBatchProcessReqProto_descriptor_;
}

const CEndBatchProcessReqProto& CEndBatchProcessReqProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

CEndBatchProcessReqProto* CEndBatchProcessReqProto::default_instance_ = NULL;

CEndBatchProcessReqProto* CEndBatchProcessReqProto::New(::google::protobuf::Arena* arena) const {
  CEndBatchProcessReqProto* n = new CEndBatchProcessReqProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CEndBatchProcessReqProto::Clear() {
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CEndBatchProcessReqProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEndBatchProcessReqProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 state = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEndBatchProcessReqProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEndBatchProcessReqProto)
  return false;
#undef DO_
}

void CEndBatchProcessReqProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEndBatchProcessReqProto)
  // required int32 state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEndBatchProcessReqProto)
}

::google::protobuf::uint8* CEndBatchProcessReqProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CEndBatchProcessReqProto)
  // required int32 state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEndBatchProcessReqProto)
  return target;
}

int CEndBatchProcessReqProto::ByteSize() const {
  int total_size = 0;

  // required int32 state = 1;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CEndBatchProcessReqProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CEndBatchProcessReqProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CEndBatchProcessReqProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CEndBatchProcessReqProto::MergeFrom(const CEndBatchProcessReqProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CEndBatchProcessReqProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEndBatchProcessReqProto::CopyFrom(const CEndBatchProcessReqProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEndBatchProcessReqProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CEndBatchProcessReqProto::Swap(CEndBatchProcessReqProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEndBatchProcessReqProto::InternalSwap(CEndBatchProcessReqProto* other) {
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CEndBatchProcessReqProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CEndBatchProcessReqProto_descriptor_;
  metadata.reflection = CEndBatchProcessReqProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CEndBatchProcessReqProto

// required int32 state = 1;
bool CEndBatchProcessReqProto::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CEndBatchProcessReqProto::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
void CEndBatchProcessReqProto::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
void CEndBatchProcessReqProto::clear_state() {
  state_ = 0;
  clear_has_state();
}
 ::google::protobuf::int32 CEndBatchProcessReqProto::state() const {
  // @@protoc_insertion_point(field_get:CEndBatchProcessReqProto.state)
  return state_;
}
 void CEndBatchProcessReqProto::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CEndBatchProcessReqProto.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SEndBatchProcessRepProto::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SEndBatchProcessRepProto::SEndBatchProcessRepProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SEndBatchProcessRepProto)
}

void SEndBatchProcessRepProto::InitAsDefaultInstance() {
}

SEndBatchProcessRepProto::SEndBatchProcessRepProto(const SEndBatchProcessRepProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SEndBatchProcessRepProto)
}

void SEndBatchProcessRepProto::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SEndBatchProcessRepProto::~SEndBatchProcessRepProto() {
  // @@protoc_insertion_point(destructor:SEndBatchProcessRepProto)
  SharedDtor();
}

void SEndBatchProcessRepProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SEndBatchProcessRepProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SEndBatchProcessRepProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SEndBatchProcessRepProto_descriptor_;
}

const SEndBatchProcessRepProto& SEndBatchProcessRepProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

SEndBatchProcessRepProto* SEndBatchProcessRepProto::default_instance_ = NULL;

SEndBatchProcessRepProto* SEndBatchProcessRepProto::New(::google::protobuf::Arena* arena) const {
  SEndBatchProcessRepProto* n = new SEndBatchProcessRepProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SEndBatchProcessRepProto::Clear() {
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SEndBatchProcessRepProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SEndBatchProcessRepProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SEndBatchProcessRepProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SEndBatchProcessRepProto)
  return false;
#undef DO_
}

void SEndBatchProcessRepProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SEndBatchProcessRepProto)
  // required uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SEndBatchProcessRepProto)
}

::google::protobuf::uint8* SEndBatchProcessRepProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SEndBatchProcessRepProto)
  // required uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SEndBatchProcessRepProto)
  return target;
}

int SEndBatchProcessRepProto::ByteSize() const {
  int total_size = 0;

  // required uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SEndBatchProcessRepProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SEndBatchProcessRepProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SEndBatchProcessRepProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SEndBatchProcessRepProto::MergeFrom(const SEndBatchProcessRepProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SEndBatchProcessRepProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SEndBatchProcessRepProto::CopyFrom(const SEndBatchProcessRepProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SEndBatchProcessRepProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SEndBatchProcessRepProto::Swap(SEndBatchProcessRepProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SEndBatchProcessRepProto::InternalSwap(SEndBatchProcessRepProto* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SEndBatchProcessRepProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SEndBatchProcessRepProto_descriptor_;
  metadata.reflection = SEndBatchProcessRepProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SEndBatchProcessRepProto

// required uint32 result = 1;
bool SEndBatchProcessRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SEndBatchProcessRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SEndBatchProcessRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SEndBatchProcessRepProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
 ::google::protobuf::uint32 SEndBatchProcessRepProto::result() const {
  // @@protoc_insertion_point(field_get:SEndBatchProcessRepProto.result)
  return result_;
}
 void SEndBatchProcessRepProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SEndBatchProcessRepProto.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
