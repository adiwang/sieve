// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netmessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "netmessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CP1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CP1_reflection_ = NULL;
const ::google::protobuf::Descriptor* CP2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CP2_reflection_ = NULL;
const ::google::protobuf::Descriptor* EchoProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EchoProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSetCamaraSeqReqProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSetCamaraSeqReqProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SSetCamaraSeqRepProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SSetCamaraSeqRepProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSendImageProcessDataReqProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSendImageProcessDataReqProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SSendImageProcessDataRepProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SSendImageProcessDataRepProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_netmessage_2eproto() {
  protobuf_AddDesc_netmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "netmessage.proto");
  GOOGLE_CHECK(file != NULL);
  CProto_descriptor_ = file->message_type(0);
  static const int CProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProto, body_),
  };
  CProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CProto_descriptor_,
      CProto::default_instance_,
      CProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(CProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProto, _internal_metadata_),
      -1);
  CP1_descriptor_ = file->message_type(1);
  static const int CP1_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP1, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP1, b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP1, c_),
  };
  CP1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CP1_descriptor_,
      CP1::default_instance_,
      CP1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP1, _has_bits_[0]),
      -1,
      -1,
      sizeof(CP1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP1, _internal_metadata_),
      -1);
  CP2_descriptor_ = file->message_type(2);
  static const int CP2_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP2, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP2, b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP2, c_),
  };
  CP2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CP2_descriptor_,
      CP2::default_instance_,
      CP2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP2, _has_bits_[0]),
      -1,
      -1,
      sizeof(CP2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CP2, _internal_metadata_),
      -1);
  EchoProto_descriptor_ = file->message_type(3);
  static const int EchoProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoProto, data_),
  };
  EchoProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EchoProto_descriptor_,
      EchoProto::default_instance_,
      EchoProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(EchoProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoProto, _internal_metadata_),
      -1);
  CSetCamaraSeqReqProto_descriptor_ = file->message_type(4);
  static const int CSetCamaraSeqReqProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSetCamaraSeqReqProto, seq_),
  };
  CSetCamaraSeqReqProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CSetCamaraSeqReqProto_descriptor_,
      CSetCamaraSeqReqProto::default_instance_,
      CSetCamaraSeqReqProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSetCamaraSeqReqProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(CSetCamaraSeqReqProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSetCamaraSeqReqProto, _internal_metadata_),
      -1);
  SSetCamaraSeqRepProto_descriptor_ = file->message_type(5);
  static const int SSetCamaraSeqRepProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSetCamaraSeqRepProto, result_),
  };
  SSetCamaraSeqRepProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SSetCamaraSeqRepProto_descriptor_,
      SSetCamaraSeqRepProto::default_instance_,
      SSetCamaraSeqRepProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSetCamaraSeqRepProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(SSetCamaraSeqRepProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSetCamaraSeqRepProto, _internal_metadata_),
      -1);
  CSendImageProcessDataReqProto_descriptor_ = file->message_type(6);
  static const int CSendImageProcessDataReqProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSendImageProcessDataReqProto, ic_card_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSendImageProcessDataReqProto, image_seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSendImageProcessDataReqProto, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSendImageProcessDataReqProto, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSendImageProcessDataReqProto, data_),
  };
  CSendImageProcessDataReqProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CSendImageProcessDataReqProto_descriptor_,
      CSendImageProcessDataReqProto::default_instance_,
      CSendImageProcessDataReqProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSendImageProcessDataReqProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(CSendImageProcessDataReqProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSendImageProcessDataReqProto, _internal_metadata_),
      -1);
  SSendImageProcessDataRepProto_descriptor_ = file->message_type(7);
  static const int SSendImageProcessDataRepProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSendImageProcessDataRepProto, ic_card_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSendImageProcessDataRepProto, image_seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSendImageProcessDataRepProto, result_),
  };
  SSendImageProcessDataRepProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SSendImageProcessDataRepProto_descriptor_,
      SSendImageProcessDataRepProto::default_instance_,
      SSendImageProcessDataRepProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSendImageProcessDataRepProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(SSendImageProcessDataRepProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSendImageProcessDataRepProto, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_netmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CProto_descriptor_, &CProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CP1_descriptor_, &CP1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CP2_descriptor_, &CP2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EchoProto_descriptor_, &EchoProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CSetCamaraSeqReqProto_descriptor_, &CSetCamaraSeqReqProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SSetCamaraSeqRepProto_descriptor_, &SSetCamaraSeqRepProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CSendImageProcessDataReqProto_descriptor_, &CSendImageProcessDataReqProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SSendImageProcessDataRepProto_descriptor_, &SSendImageProcessDataRepProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_netmessage_2eproto() {
  delete CProto::default_instance_;
  delete CProto_reflection_;
  delete CP1::default_instance_;
  delete CP1_reflection_;
  delete CP2::default_instance_;
  delete CP2_reflection_;
  delete EchoProto::default_instance_;
  delete EchoProto_reflection_;
  delete CSetCamaraSeqReqProto::default_instance_;
  delete CSetCamaraSeqReqProto_reflection_;
  delete SSetCamaraSeqRepProto::default_instance_;
  delete SSetCamaraSeqRepProto_reflection_;
  delete CSendImageProcessDataReqProto::default_instance_;
  delete CSendImageProcessDataReqProto_reflection_;
  delete SSendImageProcessDataRepProto::default_instance_;
  delete SSendImageProcessDataRepProto_reflection_;
}

void protobuf_AddDesc_netmessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020netmessage.proto\"\"\n\006CProto\022\n\n\002id\030\001 \002(\005"
    "\022\014\n\004body\030\002 \002(\t\"&\n\003CP1\022\t\n\001a\030\001 \002(\005\022\t\n\001b\030\002 "
    "\002(\003\022\t\n\001c\030\003 \002(\t\"&\n\003CP2\022\t\n\001a\030\001 \002(\t\022\t\n\001b\030\002 "
    "\002(\t\022\t\n\001c\030\003 \002(\003\"\031\n\tEchoProto\022\014\n\004data\030\001 \002("
    "\t\"$\n\025CSetCamaraSeqReqProto\022\013\n\003seq\030\001 \002(\r\""
    "\'\n\025SSetCamaraSeqRepProto\022\016\n\006result\030\001 \002(\r"
    "\"j\n\035CSendImageProcessDataReqProto\022\022\n\nic_"
    "card_no\030\001 \002(\t\022\021\n\timage_seq\030\002 \002(\005\022\t\n\001x\030\003 "
    "\002(\005\022\t\n\001y\030\004 \002(\005\022\014\n\004data\030\005 \002(\014\"V\n\035SSendIma"
    "geProcessDataRepProto\022\022\n\nic_card_no\030\001 \002("
    "\t\022\021\n\timage_seq\030\002 \002(\005\022\016\n\006result\030\003 \002(\005", 436);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "netmessage.proto", &protobuf_RegisterTypes);
  CProto::default_instance_ = new CProto();
  CP1::default_instance_ = new CP1();
  CP2::default_instance_ = new CP2();
  EchoProto::default_instance_ = new EchoProto();
  CSetCamaraSeqReqProto::default_instance_ = new CSetCamaraSeqReqProto();
  SSetCamaraSeqRepProto::default_instance_ = new SSetCamaraSeqRepProto();
  CSendImageProcessDataReqProto::default_instance_ = new CSendImageProcessDataReqProto();
  SSendImageProcessDataRepProto::default_instance_ = new SSendImageProcessDataRepProto();
  CProto::default_instance_->InitAsDefaultInstance();
  CP1::default_instance_->InitAsDefaultInstance();
  CP2::default_instance_->InitAsDefaultInstance();
  EchoProto::default_instance_->InitAsDefaultInstance();
  CSetCamaraSeqReqProto::default_instance_->InitAsDefaultInstance();
  SSetCamaraSeqRepProto::default_instance_->InitAsDefaultInstance();
  CSendImageProcessDataReqProto::default_instance_->InitAsDefaultInstance();
  SSendImageProcessDataRepProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_netmessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_netmessage_2eproto {
  StaticDescriptorInitializer_netmessage_2eproto() {
    protobuf_AddDesc_netmessage_2eproto();
  }
} static_descriptor_initializer_netmessage_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProto::kIdFieldNumber;
const int CProto::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProto::CProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProto)
}

void CProto::InitAsDefaultInstance() {
}

CProto::CProto(const CProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CProto)
}

void CProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CProto::~CProto() {
  // @@protoc_insertion_point(destructor:CProto)
  SharedDtor();
}

void CProto::SharedDtor() {
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CProto_descriptor_;
}

const CProto& CProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

CProto* CProto::default_instance_ = NULL;

CProto* CProto::New(::google::protobuf::Arena* arena) const {
  CProto* n = new CProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProto::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    id_ = 0;
    if (has_body()) {
      body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_body;
        break;
      }

      // required string body = 2;
      case 2: {
        if (tag == 18) {
         parse_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body().data(), this->body().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CProto.body");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProto)
  return false;
#undef DO_
}

void CProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProto)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string body = 2;
  if (has_body()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body().data(), this->body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CProto.body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProto)
}

::google::protobuf::uint8* CProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CProto)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string body = 2;
  if (has_body()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body().data(), this->body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CProto.body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProto)
  return target;
}

int CProto::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_body()) {
    // required string body = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body());
  }

  return total_size;
}
int CProto::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required string body = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CProto::MergeFrom(const CProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_body()) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProto::CopyFrom(const CProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CProto::Swap(CProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProto::InternalSwap(CProto* other) {
  std::swap(id_, other->id_);
  body_.Swap(&other->body_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CProto_descriptor_;
  metadata.reflection = CProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProto

// required int32 id = 1;
bool CProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 CProto::id() const {
  // @@protoc_insertion_point(field_get:CProto.id)
  return id_;
}
 void CProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CProto.id)
}

// required string body = 2;
bool CProto::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CProto::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
void CProto::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
void CProto::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
 const ::std::string& CProto::body() const {
  // @@protoc_insertion_point(field_get:CProto.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CProto::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CProto.body)
}
 void CProto::set_body(const char* value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CProto.body)
}
 void CProto::set_body(const char* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CProto.body)
}
 ::std::string* CProto::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:CProto.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CProto::release_body() {
  clear_has_body();
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CProto::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:CProto.body)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CP1::kAFieldNumber;
const int CP1::kBFieldNumber;
const int CP1::kCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CP1::CP1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CP1)
}

void CP1::InitAsDefaultInstance() {
}

CP1::CP1(const CP1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CP1)
}

void CP1::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  a_ = 0;
  b_ = GOOGLE_LONGLONG(0);
  c_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CP1::~CP1() {
  // @@protoc_insertion_point(destructor:CP1)
  SharedDtor();
}

void CP1::SharedDtor() {
  c_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CP1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CP1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CP1_descriptor_;
}

const CP1& CP1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

CP1* CP1::default_instance_ = NULL;

CP1* CP1::New(::google::protobuf::Arena* arena) const {
  CP1* n = new CP1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CP1::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    a_ = 0;
    b_ = GOOGLE_LONGLONG(0);
    if (has_c()) {
      c_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CP1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CP1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 a = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_b;
        break;
      }

      // required int64 b = 2;
      case 2: {
        if (tag == 16) {
         parse_b:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &b_)));
          set_has_b();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_c;
        break;
      }

      // required string c = 3;
      case 3: {
        if (tag == 26) {
         parse_c:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_c()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->c().data(), this->c().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CP1.c");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CP1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CP1)
  return false;
#undef DO_
}

void CP1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CP1)
  // required int32 a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // required int64 b = 2;
  if (has_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->b(), output);
  }

  // required string c = 3;
  if (has_c()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->c().data(), this->c().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CP1.c");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->c(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CP1)
}

::google::protobuf::uint8* CP1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CP1)
  // required int32 a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // required int64 b = 2;
  if (has_b()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->b(), target);
  }

  // required string c = 3;
  if (has_c()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->c().data(), this->c().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CP1.c");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->c(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CP1)
  return target;
}

int CP1::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_a()) {
    // required int32 a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  if (has_b()) {
    // required int64 b = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->b());
  }

  if (has_c()) {
    // required string c = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->c());
  }

  return total_size;
}
int CP1::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());

    // required int64 b = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->b());

    // required string c = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->c());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CP1::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CP1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CP1>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CP1::MergeFrom(const CP1& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_b()) {
      set_b(from.b());
    }
    if (from.has_c()) {
      set_has_c();
      c_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.c_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CP1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CP1::CopyFrom(const CP1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CP1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void CP1::Swap(CP1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CP1::InternalSwap(CP1* other) {
  std::swap(a_, other->a_);
  std::swap(b_, other->b_);
  c_.Swap(&other->c_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CP1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CP1_descriptor_;
  metadata.reflection = CP1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CP1

// required int32 a = 1;
bool CP1::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CP1::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void CP1::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void CP1::clear_a() {
  a_ = 0;
  clear_has_a();
}
 ::google::protobuf::int32 CP1::a() const {
  // @@protoc_insertion_point(field_get:CP1.a)
  return a_;
}
 void CP1::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:CP1.a)
}

// required int64 b = 2;
bool CP1::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CP1::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
void CP1::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
void CP1::clear_b() {
  b_ = GOOGLE_LONGLONG(0);
  clear_has_b();
}
 ::google::protobuf::int64 CP1::b() const {
  // @@protoc_insertion_point(field_get:CP1.b)
  return b_;
}
 void CP1::set_b(::google::protobuf::int64 value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:CP1.b)
}

// required string c = 3;
bool CP1::has_c() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CP1::set_has_c() {
  _has_bits_[0] |= 0x00000004u;
}
void CP1::clear_has_c() {
  _has_bits_[0] &= ~0x00000004u;
}
void CP1::clear_c() {
  c_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_c();
}
 const ::std::string& CP1::c() const {
  // @@protoc_insertion_point(field_get:CP1.c)
  return c_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CP1::set_c(const ::std::string& value) {
  set_has_c();
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CP1.c)
}
 void CP1::set_c(const char* value) {
  set_has_c();
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CP1.c)
}
 void CP1::set_c(const char* value, size_t size) {
  set_has_c();
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CP1.c)
}
 ::std::string* CP1::mutable_c() {
  set_has_c();
  // @@protoc_insertion_point(field_mutable:CP1.c)
  return c_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CP1::release_c() {
  clear_has_c();
  return c_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CP1::set_allocated_c(::std::string* c) {
  if (c != NULL) {
    set_has_c();
  } else {
    clear_has_c();
  }
  c_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), c);
  // @@protoc_insertion_point(field_set_allocated:CP1.c)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CP2::kAFieldNumber;
const int CP2::kBFieldNumber;
const int CP2::kCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CP2::CP2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CP2)
}

void CP2::InitAsDefaultInstance() {
}

CP2::CP2(const CP2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CP2)
}

void CP2::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  b_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  c_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CP2::~CP2() {
  // @@protoc_insertion_point(destructor:CP2)
  SharedDtor();
}

void CP2::SharedDtor() {
  a_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  b_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CP2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CP2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CP2_descriptor_;
}

const CP2& CP2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

CP2* CP2::default_instance_ = NULL;

CP2* CP2::New(::google::protobuf::Arena* arena) const {
  CP2* n = new CP2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CP2::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_a()) {
      a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_b()) {
      b_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    c_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CP2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CP2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string a = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_a()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->a().data(), this->a().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CP2.a");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_b;
        break;
      }

      // required string b = 2;
      case 2: {
        if (tag == 18) {
         parse_b:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_b()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->b().data(), this->b().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CP2.b");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_c;
        break;
      }

      // required int64 c = 3;
      case 3: {
        if (tag == 24) {
         parse_c:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &c_)));
          set_has_c();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CP2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CP2)
  return false;
#undef DO_
}

void CP2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CP2)
  // required string a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a().data(), this->a().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CP2.a");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->a(), output);
  }

  // required string b = 2;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CP2.b");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->b(), output);
  }

  // required int64 c = 3;
  if (has_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->c(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CP2)
}

::google::protobuf::uint8* CP2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CP2)
  // required string a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a().data(), this->a().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CP2.a");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->a(), target);
  }

  // required string b = 2;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CP2.b");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->b(), target);
  }

  // required int64 c = 3;
  if (has_c()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->c(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CP2)
  return target;
}

int CP2::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_a()) {
    // required string a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->a());
  }

  if (has_b()) {
    // required string b = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->b());
  }

  if (has_c()) {
    // required int64 c = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->c());
  }

  return total_size;
}
int CP2::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->a());

    // required string b = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->b());

    // required int64 c = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->c());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CP2::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CP2* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CP2>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CP2::MergeFrom(const CP2& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_has_a();
      a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_);
    }
    if (from.has_b()) {
      set_has_b();
      b_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.b_);
    }
    if (from.has_c()) {
      set_c(from.c());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CP2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CP2::CopyFrom(const CP2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CP2::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void CP2::Swap(CP2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CP2::InternalSwap(CP2* other) {
  a_.Swap(&other->a_);
  b_.Swap(&other->b_);
  std::swap(c_, other->c_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CP2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CP2_descriptor_;
  metadata.reflection = CP2_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CP2

// required string a = 1;
bool CP2::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CP2::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void CP2::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void CP2::clear_a() {
  a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_a();
}
 const ::std::string& CP2::a() const {
  // @@protoc_insertion_point(field_get:CP2.a)
  return a_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CP2::set_a(const ::std::string& value) {
  set_has_a();
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CP2.a)
}
 void CP2::set_a(const char* value) {
  set_has_a();
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CP2.a)
}
 void CP2::set_a(const char* value, size_t size) {
  set_has_a();
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CP2.a)
}
 ::std::string* CP2::mutable_a() {
  set_has_a();
  // @@protoc_insertion_point(field_mutable:CP2.a)
  return a_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CP2::release_a() {
  clear_has_a();
  return a_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CP2::set_allocated_a(::std::string* a) {
  if (a != NULL) {
    set_has_a();
  } else {
    clear_has_a();
  }
  a_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), a);
  // @@protoc_insertion_point(field_set_allocated:CP2.a)
}

// required string b = 2;
bool CP2::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CP2::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
void CP2::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
void CP2::clear_b() {
  b_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_b();
}
 const ::std::string& CP2::b() const {
  // @@protoc_insertion_point(field_get:CP2.b)
  return b_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CP2::set_b(const ::std::string& value) {
  set_has_b();
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CP2.b)
}
 void CP2::set_b(const char* value) {
  set_has_b();
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CP2.b)
}
 void CP2::set_b(const char* value, size_t size) {
  set_has_b();
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CP2.b)
}
 ::std::string* CP2::mutable_b() {
  set_has_b();
  // @@protoc_insertion_point(field_mutable:CP2.b)
  return b_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CP2::release_b() {
  clear_has_b();
  return b_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CP2::set_allocated_b(::std::string* b) {
  if (b != NULL) {
    set_has_b();
  } else {
    clear_has_b();
  }
  b_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), b);
  // @@protoc_insertion_point(field_set_allocated:CP2.b)
}

// required int64 c = 3;
bool CP2::has_c() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CP2::set_has_c() {
  _has_bits_[0] |= 0x00000004u;
}
void CP2::clear_has_c() {
  _has_bits_[0] &= ~0x00000004u;
}
void CP2::clear_c() {
  c_ = GOOGLE_LONGLONG(0);
  clear_has_c();
}
 ::google::protobuf::int64 CP2::c() const {
  // @@protoc_insertion_point(field_get:CP2.c)
  return c_;
}
 void CP2::set_c(::google::protobuf::int64 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:CP2.c)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EchoProto::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EchoProto::EchoProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EchoProto)
}

void EchoProto::InitAsDefaultInstance() {
}

EchoProto::EchoProto(const EchoProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EchoProto)
}

void EchoProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EchoProto::~EchoProto() {
  // @@protoc_insertion_point(destructor:EchoProto)
  SharedDtor();
}

void EchoProto::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EchoProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EchoProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EchoProto_descriptor_;
}

const EchoProto& EchoProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

EchoProto* EchoProto::default_instance_ = NULL;

EchoProto* EchoProto::New(::google::protobuf::Arena* arena) const {
  EchoProto* n = new EchoProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EchoProto::Clear() {
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EchoProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EchoProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "EchoProto.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EchoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EchoProto)
  return false;
#undef DO_
}

void EchoProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EchoProto)
  // required string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "EchoProto.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EchoProto)
}

::google::protobuf::uint8* EchoProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EchoProto)
  // required string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "EchoProto.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EchoProto)
  return target;
}

int EchoProto::ByteSize() const {
  int total_size = 0;

  // required string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EchoProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EchoProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EchoProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EchoProto::MergeFrom(const EchoProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EchoProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EchoProto::CopyFrom(const EchoProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void EchoProto::Swap(EchoProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EchoProto::InternalSwap(EchoProto* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EchoProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EchoProto_descriptor_;
  metadata.reflection = EchoProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EchoProto

// required string data = 1;
bool EchoProto::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EchoProto::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void EchoProto::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void EchoProto::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& EchoProto::data() const {
  // @@protoc_insertion_point(field_get:EchoProto.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EchoProto::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EchoProto.data)
}
 void EchoProto::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EchoProto.data)
}
 void EchoProto::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EchoProto.data)
}
 ::std::string* EchoProto::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:EchoProto.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EchoProto::release_data() {
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EchoProto::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:EchoProto.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSetCamaraSeqReqProto::kSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSetCamaraSeqReqProto::CSetCamaraSeqReqProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSetCamaraSeqReqProto)
}

void CSetCamaraSeqReqProto::InitAsDefaultInstance() {
}

CSetCamaraSeqReqProto::CSetCamaraSeqReqProto(const CSetCamaraSeqReqProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSetCamaraSeqReqProto)
}

void CSetCamaraSeqReqProto::SharedCtor() {
  _cached_size_ = 0;
  seq_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSetCamaraSeqReqProto::~CSetCamaraSeqReqProto() {
  // @@protoc_insertion_point(destructor:CSetCamaraSeqReqProto)
  SharedDtor();
}

void CSetCamaraSeqReqProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSetCamaraSeqReqProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSetCamaraSeqReqProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSetCamaraSeqReqProto_descriptor_;
}

const CSetCamaraSeqReqProto& CSetCamaraSeqReqProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

CSetCamaraSeqReqProto* CSetCamaraSeqReqProto::default_instance_ = NULL;

CSetCamaraSeqReqProto* CSetCamaraSeqReqProto::New(::google::protobuf::Arena* arena) const {
  CSetCamaraSeqReqProto* n = new CSetCamaraSeqReqProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSetCamaraSeqReqProto::Clear() {
  seq_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CSetCamaraSeqReqProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSetCamaraSeqReqProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seq = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_)));
          set_has_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSetCamaraSeqReqProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSetCamaraSeqReqProto)
  return false;
#undef DO_
}

void CSetCamaraSeqReqProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSetCamaraSeqReqProto)
  // required uint32 seq = 1;
  if (has_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seq(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSetCamaraSeqReqProto)
}

::google::protobuf::uint8* CSetCamaraSeqReqProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSetCamaraSeqReqProto)
  // required uint32 seq = 1;
  if (has_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seq(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSetCamaraSeqReqProto)
  return target;
}

int CSetCamaraSeqReqProto::ByteSize() const {
  int total_size = 0;

  // required uint32 seq = 1;
  if (has_seq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seq());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSetCamaraSeqReqProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CSetCamaraSeqReqProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CSetCamaraSeqReqProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSetCamaraSeqReqProto::MergeFrom(const CSetCamaraSeqReqProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seq()) {
      set_seq(from.seq());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CSetCamaraSeqReqProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSetCamaraSeqReqProto::CopyFrom(const CSetCamaraSeqReqProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSetCamaraSeqReqProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CSetCamaraSeqReqProto::Swap(CSetCamaraSeqReqProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSetCamaraSeqReqProto::InternalSwap(CSetCamaraSeqReqProto* other) {
  std::swap(seq_, other->seq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSetCamaraSeqReqProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSetCamaraSeqReqProto_descriptor_;
  metadata.reflection = CSetCamaraSeqReqProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CSetCamaraSeqReqProto

// required uint32 seq = 1;
bool CSetCamaraSeqReqProto::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CSetCamaraSeqReqProto::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
void CSetCamaraSeqReqProto::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
void CSetCamaraSeqReqProto::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
 ::google::protobuf::uint32 CSetCamaraSeqReqProto::seq() const {
  // @@protoc_insertion_point(field_get:CSetCamaraSeqReqProto.seq)
  return seq_;
}
 void CSetCamaraSeqReqProto::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:CSetCamaraSeqReqProto.seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SSetCamaraSeqRepProto::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SSetCamaraSeqRepProto::SSetCamaraSeqRepProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SSetCamaraSeqRepProto)
}

void SSetCamaraSeqRepProto::InitAsDefaultInstance() {
}

SSetCamaraSeqRepProto::SSetCamaraSeqRepProto(const SSetCamaraSeqRepProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SSetCamaraSeqRepProto)
}

void SSetCamaraSeqRepProto::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SSetCamaraSeqRepProto::~SSetCamaraSeqRepProto() {
  // @@protoc_insertion_point(destructor:SSetCamaraSeqRepProto)
  SharedDtor();
}

void SSetCamaraSeqRepProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SSetCamaraSeqRepProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SSetCamaraSeqRepProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SSetCamaraSeqRepProto_descriptor_;
}

const SSetCamaraSeqRepProto& SSetCamaraSeqRepProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

SSetCamaraSeqRepProto* SSetCamaraSeqRepProto::default_instance_ = NULL;

SSetCamaraSeqRepProto* SSetCamaraSeqRepProto::New(::google::protobuf::Arena* arena) const {
  SSetCamaraSeqRepProto* n = new SSetCamaraSeqRepProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SSetCamaraSeqRepProto::Clear() {
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SSetCamaraSeqRepProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SSetCamaraSeqRepProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SSetCamaraSeqRepProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SSetCamaraSeqRepProto)
  return false;
#undef DO_
}

void SSetCamaraSeqRepProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SSetCamaraSeqRepProto)
  // required uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SSetCamaraSeqRepProto)
}

::google::protobuf::uint8* SSetCamaraSeqRepProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSetCamaraSeqRepProto)
  // required uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSetCamaraSeqRepProto)
  return target;
}

int SSetCamaraSeqRepProto::ByteSize() const {
  int total_size = 0;

  // required uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SSetCamaraSeqRepProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SSetCamaraSeqRepProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SSetCamaraSeqRepProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SSetCamaraSeqRepProto::MergeFrom(const SSetCamaraSeqRepProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SSetCamaraSeqRepProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSetCamaraSeqRepProto::CopyFrom(const SSetCamaraSeqRepProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSetCamaraSeqRepProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SSetCamaraSeqRepProto::Swap(SSetCamaraSeqRepProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SSetCamaraSeqRepProto::InternalSwap(SSetCamaraSeqRepProto* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SSetCamaraSeqRepProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SSetCamaraSeqRepProto_descriptor_;
  metadata.reflection = SSetCamaraSeqRepProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SSetCamaraSeqRepProto

// required uint32 result = 1;
bool SSetCamaraSeqRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SSetCamaraSeqRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SSetCamaraSeqRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SSetCamaraSeqRepProto::clear_result() {
  result_ = 0u;
  clear_has_result();
}
 ::google::protobuf::uint32 SSetCamaraSeqRepProto::result() const {
  // @@protoc_insertion_point(field_get:SSetCamaraSeqRepProto.result)
  return result_;
}
 void SSetCamaraSeqRepProto::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SSetCamaraSeqRepProto.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSendImageProcessDataReqProto::kIcCardNoFieldNumber;
const int CSendImageProcessDataReqProto::kImageSeqFieldNumber;
const int CSendImageProcessDataReqProto::kXFieldNumber;
const int CSendImageProcessDataReqProto::kYFieldNumber;
const int CSendImageProcessDataReqProto::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSendImageProcessDataReqProto::CSendImageProcessDataReqProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSendImageProcessDataReqProto)
}

void CSendImageProcessDataReqProto::InitAsDefaultInstance() {
}

CSendImageProcessDataReqProto::CSendImageProcessDataReqProto(const CSendImageProcessDataReqProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSendImageProcessDataReqProto)
}

void CSendImageProcessDataReqProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ic_card_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_seq_ = 0;
  x_ = 0;
  y_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSendImageProcessDataReqProto::~CSendImageProcessDataReqProto() {
  // @@protoc_insertion_point(destructor:CSendImageProcessDataReqProto)
  SharedDtor();
}

void CSendImageProcessDataReqProto::SharedDtor() {
  ic_card_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CSendImageProcessDataReqProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSendImageProcessDataReqProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSendImageProcessDataReqProto_descriptor_;
}

const CSendImageProcessDataReqProto& CSendImageProcessDataReqProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

CSendImageProcessDataReqProto* CSendImageProcessDataReqProto::default_instance_ = NULL;

CSendImageProcessDataReqProto* CSendImageProcessDataReqProto::New(::google::protobuf::Arena* arena) const {
  CSendImageProcessDataReqProto* n = new CSendImageProcessDataReqProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSendImageProcessDataReqProto::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CSendImageProcessDataReqProto*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(image_seq_, x_);
    if (has_ic_card_no()) {
      ic_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    y_ = 0;
    if (has_data()) {
      data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CSendImageProcessDataReqProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSendImageProcessDataReqProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ic_card_no = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ic_card_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ic_card_no().data(), this->ic_card_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSendImageProcessDataReqProto.ic_card_no");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_image_seq;
        break;
      }

      // required int32 image_seq = 2;
      case 2: {
        if (tag == 16) {
         parse_image_seq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &image_seq_)));
          set_has_image_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_x;
        break;
      }

      // required int32 x = 3;
      case 3: {
        if (tag == 24) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_y;
        break;
      }

      // required int32 y = 4;
      case 4: {
        if (tag == 32) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_data;
        break;
      }

      // required bytes data = 5;
      case 5: {
        if (tag == 42) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSendImageProcessDataReqProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSendImageProcessDataReqProto)
  return false;
#undef DO_
}

void CSendImageProcessDataReqProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSendImageProcessDataReqProto)
  // required string ic_card_no = 1;
  if (has_ic_card_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ic_card_no().data(), this->ic_card_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSendImageProcessDataReqProto.ic_card_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ic_card_no(), output);
  }

  // required int32 image_seq = 2;
  if (has_image_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->image_seq(), output);
  }

  // required int32 x = 3;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->x(), output);
  }

  // required int32 y = 4;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->y(), output);
  }

  // required bytes data = 5;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSendImageProcessDataReqProto)
}

::google::protobuf::uint8* CSendImageProcessDataReqProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSendImageProcessDataReqProto)
  // required string ic_card_no = 1;
  if (has_ic_card_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ic_card_no().data(), this->ic_card_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSendImageProcessDataReqProto.ic_card_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ic_card_no(), target);
  }

  // required int32 image_seq = 2;
  if (has_image_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->image_seq(), target);
  }

  // required int32 x = 3;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->x(), target);
  }

  // required int32 y = 4;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->y(), target);
  }

  // required bytes data = 5;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSendImageProcessDataReqProto)
  return target;
}

int CSendImageProcessDataReqProto::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_ic_card_no()) {
    // required string ic_card_no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ic_card_no());
  }

  if (has_image_seq()) {
    // required int32 image_seq = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->image_seq());
  }

  if (has_x()) {
    // required int32 x = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  if (has_data()) {
    // required bytes data = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  return total_size;
}
int CSendImageProcessDataReqProto::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string ic_card_no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ic_card_no());

    // required int32 image_seq = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->image_seq());

    // required int32 x = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

    // required bytes data = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSendImageProcessDataReqProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CSendImageProcessDataReqProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CSendImageProcessDataReqProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSendImageProcessDataReqProto::MergeFrom(const CSendImageProcessDataReqProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ic_card_no()) {
      set_has_ic_card_no();
      ic_card_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ic_card_no_);
    }
    if (from.has_image_seq()) {
      set_image_seq(from.image_seq());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CSendImageProcessDataReqProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSendImageProcessDataReqProto::CopyFrom(const CSendImageProcessDataReqProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSendImageProcessDataReqProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void CSendImageProcessDataReqProto::Swap(CSendImageProcessDataReqProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSendImageProcessDataReqProto::InternalSwap(CSendImageProcessDataReqProto* other) {
  ic_card_no_.Swap(&other->ic_card_no_);
  std::swap(image_seq_, other->image_seq_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSendImageProcessDataReqProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSendImageProcessDataReqProto_descriptor_;
  metadata.reflection = CSendImageProcessDataReqProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CSendImageProcessDataReqProto

// required string ic_card_no = 1;
bool CSendImageProcessDataReqProto::has_ic_card_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CSendImageProcessDataReqProto::set_has_ic_card_no() {
  _has_bits_[0] |= 0x00000001u;
}
void CSendImageProcessDataReqProto::clear_has_ic_card_no() {
  _has_bits_[0] &= ~0x00000001u;
}
void CSendImageProcessDataReqProto::clear_ic_card_no() {
  ic_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ic_card_no();
}
 const ::std::string& CSendImageProcessDataReqProto::ic_card_no() const {
  // @@protoc_insertion_point(field_get:CSendImageProcessDataReqProto.ic_card_no)
  return ic_card_no_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSendImageProcessDataReqProto::set_ic_card_no(const ::std::string& value) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSendImageProcessDataReqProto.ic_card_no)
}
 void CSendImageProcessDataReqProto::set_ic_card_no(const char* value) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSendImageProcessDataReqProto.ic_card_no)
}
 void CSendImageProcessDataReqProto::set_ic_card_no(const char* value, size_t size) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSendImageProcessDataReqProto.ic_card_no)
}
 ::std::string* CSendImageProcessDataReqProto::mutable_ic_card_no() {
  set_has_ic_card_no();
  // @@protoc_insertion_point(field_mutable:CSendImageProcessDataReqProto.ic_card_no)
  return ic_card_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CSendImageProcessDataReqProto::release_ic_card_no() {
  clear_has_ic_card_no();
  return ic_card_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSendImageProcessDataReqProto::set_allocated_ic_card_no(::std::string* ic_card_no) {
  if (ic_card_no != NULL) {
    set_has_ic_card_no();
  } else {
    clear_has_ic_card_no();
  }
  ic_card_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ic_card_no);
  // @@protoc_insertion_point(field_set_allocated:CSendImageProcessDataReqProto.ic_card_no)
}

// required int32 image_seq = 2;
bool CSendImageProcessDataReqProto::has_image_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CSendImageProcessDataReqProto::set_has_image_seq() {
  _has_bits_[0] |= 0x00000002u;
}
void CSendImageProcessDataReqProto::clear_has_image_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
void CSendImageProcessDataReqProto::clear_image_seq() {
  image_seq_ = 0;
  clear_has_image_seq();
}
 ::google::protobuf::int32 CSendImageProcessDataReqProto::image_seq() const {
  // @@protoc_insertion_point(field_get:CSendImageProcessDataReqProto.image_seq)
  return image_seq_;
}
 void CSendImageProcessDataReqProto::set_image_seq(::google::protobuf::int32 value) {
  set_has_image_seq();
  image_seq_ = value;
  // @@protoc_insertion_point(field_set:CSendImageProcessDataReqProto.image_seq)
}

// required int32 x = 3;
bool CSendImageProcessDataReqProto::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CSendImageProcessDataReqProto::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
void CSendImageProcessDataReqProto::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
void CSendImageProcessDataReqProto::clear_x() {
  x_ = 0;
  clear_has_x();
}
 ::google::protobuf::int32 CSendImageProcessDataReqProto::x() const {
  // @@protoc_insertion_point(field_get:CSendImageProcessDataReqProto.x)
  return x_;
}
 void CSendImageProcessDataReqProto::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:CSendImageProcessDataReqProto.x)
}

// required int32 y = 4;
bool CSendImageProcessDataReqProto::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CSendImageProcessDataReqProto::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
void CSendImageProcessDataReqProto::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void CSendImageProcessDataReqProto::clear_y() {
  y_ = 0;
  clear_has_y();
}
 ::google::protobuf::int32 CSendImageProcessDataReqProto::y() const {
  // @@protoc_insertion_point(field_get:CSendImageProcessDataReqProto.y)
  return y_;
}
 void CSendImageProcessDataReqProto::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:CSendImageProcessDataReqProto.y)
}

// required bytes data = 5;
bool CSendImageProcessDataReqProto::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CSendImageProcessDataReqProto::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
void CSendImageProcessDataReqProto::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
void CSendImageProcessDataReqProto::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& CSendImageProcessDataReqProto::data() const {
  // @@protoc_insertion_point(field_get:CSendImageProcessDataReqProto.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSendImageProcessDataReqProto::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSendImageProcessDataReqProto.data)
}
 void CSendImageProcessDataReqProto::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSendImageProcessDataReqProto.data)
}
 void CSendImageProcessDataReqProto::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSendImageProcessDataReqProto.data)
}
 ::std::string* CSendImageProcessDataReqProto::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:CSendImageProcessDataReqProto.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CSendImageProcessDataReqProto::release_data() {
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSendImageProcessDataReqProto::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:CSendImageProcessDataReqProto.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SSendImageProcessDataRepProto::kIcCardNoFieldNumber;
const int SSendImageProcessDataRepProto::kImageSeqFieldNumber;
const int SSendImageProcessDataRepProto::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SSendImageProcessDataRepProto::SSendImageProcessDataRepProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SSendImageProcessDataRepProto)
}

void SSendImageProcessDataRepProto::InitAsDefaultInstance() {
}

SSendImageProcessDataRepProto::SSendImageProcessDataRepProto(const SSendImageProcessDataRepProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SSendImageProcessDataRepProto)
}

void SSendImageProcessDataRepProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ic_card_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_seq_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SSendImageProcessDataRepProto::~SSendImageProcessDataRepProto() {
  // @@protoc_insertion_point(destructor:SSendImageProcessDataRepProto)
  SharedDtor();
}

void SSendImageProcessDataRepProto::SharedDtor() {
  ic_card_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SSendImageProcessDataRepProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SSendImageProcessDataRepProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SSendImageProcessDataRepProto_descriptor_;
}

const SSendImageProcessDataRepProto& SSendImageProcessDataRepProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmessage_2eproto();
  return *default_instance_;
}

SSendImageProcessDataRepProto* SSendImageProcessDataRepProto::default_instance_ = NULL;

SSendImageProcessDataRepProto* SSendImageProcessDataRepProto::New(::google::protobuf::Arena* arena) const {
  SSendImageProcessDataRepProto* n = new SSendImageProcessDataRepProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SSendImageProcessDataRepProto::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SSendImageProcessDataRepProto*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(image_seq_, result_);
    if (has_ic_card_no()) {
      ic_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SSendImageProcessDataRepProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SSendImageProcessDataRepProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ic_card_no = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ic_card_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ic_card_no().data(), this->ic_card_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SSendImageProcessDataRepProto.ic_card_no");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_image_seq;
        break;
      }

      // required int32 image_seq = 2;
      case 2: {
        if (tag == 16) {
         parse_image_seq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &image_seq_)));
          set_has_image_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_result;
        break;
      }

      // required int32 result = 3;
      case 3: {
        if (tag == 24) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SSendImageProcessDataRepProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SSendImageProcessDataRepProto)
  return false;
#undef DO_
}

void SSendImageProcessDataRepProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SSendImageProcessDataRepProto)
  // required string ic_card_no = 1;
  if (has_ic_card_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ic_card_no().data(), this->ic_card_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SSendImageProcessDataRepProto.ic_card_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ic_card_no(), output);
  }

  // required int32 image_seq = 2;
  if (has_image_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->image_seq(), output);
  }

  // required int32 result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SSendImageProcessDataRepProto)
}

::google::protobuf::uint8* SSendImageProcessDataRepProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSendImageProcessDataRepProto)
  // required string ic_card_no = 1;
  if (has_ic_card_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ic_card_no().data(), this->ic_card_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SSendImageProcessDataRepProto.ic_card_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ic_card_no(), target);
  }

  // required int32 image_seq = 2;
  if (has_image_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->image_seq(), target);
  }

  // required int32 result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSendImageProcessDataRepProto)
  return target;
}

int SSendImageProcessDataRepProto::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_ic_card_no()) {
    // required string ic_card_no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ic_card_no());
  }

  if (has_image_seq()) {
    // required int32 image_seq = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->image_seq());
  }

  if (has_result()) {
    // required int32 result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  return total_size;
}
int SSendImageProcessDataRepProto::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string ic_card_no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ic_card_no());

    // required int32 image_seq = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->image_seq());

    // required int32 result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SSendImageProcessDataRepProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SSendImageProcessDataRepProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SSendImageProcessDataRepProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SSendImageProcessDataRepProto::MergeFrom(const SSendImageProcessDataRepProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ic_card_no()) {
      set_has_ic_card_no();
      ic_card_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ic_card_no_);
    }
    if (from.has_image_seq()) {
      set_image_seq(from.image_seq());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SSendImageProcessDataRepProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSendImageProcessDataRepProto::CopyFrom(const SSendImageProcessDataRepProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSendImageProcessDataRepProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void SSendImageProcessDataRepProto::Swap(SSendImageProcessDataRepProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SSendImageProcessDataRepProto::InternalSwap(SSendImageProcessDataRepProto* other) {
  ic_card_no_.Swap(&other->ic_card_no_);
  std::swap(image_seq_, other->image_seq_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SSendImageProcessDataRepProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SSendImageProcessDataRepProto_descriptor_;
  metadata.reflection = SSendImageProcessDataRepProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SSendImageProcessDataRepProto

// required string ic_card_no = 1;
bool SSendImageProcessDataRepProto::has_ic_card_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SSendImageProcessDataRepProto::set_has_ic_card_no() {
  _has_bits_[0] |= 0x00000001u;
}
void SSendImageProcessDataRepProto::clear_has_ic_card_no() {
  _has_bits_[0] &= ~0x00000001u;
}
void SSendImageProcessDataRepProto::clear_ic_card_no() {
  ic_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ic_card_no();
}
 const ::std::string& SSendImageProcessDataRepProto::ic_card_no() const {
  // @@protoc_insertion_point(field_get:SSendImageProcessDataRepProto.ic_card_no)
  return ic_card_no_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SSendImageProcessDataRepProto::set_ic_card_no(const ::std::string& value) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SSendImageProcessDataRepProto.ic_card_no)
}
 void SSendImageProcessDataRepProto::set_ic_card_no(const char* value) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SSendImageProcessDataRepProto.ic_card_no)
}
 void SSendImageProcessDataRepProto::set_ic_card_no(const char* value, size_t size) {
  set_has_ic_card_no();
  ic_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SSendImageProcessDataRepProto.ic_card_no)
}
 ::std::string* SSendImageProcessDataRepProto::mutable_ic_card_no() {
  set_has_ic_card_no();
  // @@protoc_insertion_point(field_mutable:SSendImageProcessDataRepProto.ic_card_no)
  return ic_card_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SSendImageProcessDataRepProto::release_ic_card_no() {
  clear_has_ic_card_no();
  return ic_card_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SSendImageProcessDataRepProto::set_allocated_ic_card_no(::std::string* ic_card_no) {
  if (ic_card_no != NULL) {
    set_has_ic_card_no();
  } else {
    clear_has_ic_card_no();
  }
  ic_card_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ic_card_no);
  // @@protoc_insertion_point(field_set_allocated:SSendImageProcessDataRepProto.ic_card_no)
}

// required int32 image_seq = 2;
bool SSendImageProcessDataRepProto::has_image_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SSendImageProcessDataRepProto::set_has_image_seq() {
  _has_bits_[0] |= 0x00000002u;
}
void SSendImageProcessDataRepProto::clear_has_image_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
void SSendImageProcessDataRepProto::clear_image_seq() {
  image_seq_ = 0;
  clear_has_image_seq();
}
 ::google::protobuf::int32 SSendImageProcessDataRepProto::image_seq() const {
  // @@protoc_insertion_point(field_get:SSendImageProcessDataRepProto.image_seq)
  return image_seq_;
}
 void SSendImageProcessDataRepProto::set_image_seq(::google::protobuf::int32 value) {
  set_has_image_seq();
  image_seq_ = value;
  // @@protoc_insertion_point(field_set:SSendImageProcessDataRepProto.image_seq)
}

// required int32 result = 3;
bool SSendImageProcessDataRepProto::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SSendImageProcessDataRepProto::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void SSendImageProcessDataRepProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void SSendImageProcessDataRepProto::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 SSendImageProcessDataRepProto::result() const {
  // @@protoc_insertion_point(field_get:SSendImageProcessDataRepProto.result)
  return result_;
}
 void SSendImageProcessDataRepProto::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SSendImageProcessDataRepProto.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
